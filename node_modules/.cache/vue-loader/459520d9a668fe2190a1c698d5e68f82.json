{"remainingRequest":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/Image_A_AugTaskAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/Image_A_AugTaskAdd.vue","mtime":1637242892000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport qs from 'qs';\nexport default {\n    name: 'baseform',\n    inject: ['reload'],\n    data() {\n        const isNotNag_int = (rule, value, callback) => {\n            const boolean = new RegExp('^[1-9][0-9]*$').test(value);\n            if (value !== '0' && !boolean) {\n                callback(new Error('请输入非负整数'));\n            } else {\n                callback();\n            }\n        };\n        const generate_per_file_and_paramsRule = (rule, value, callback) => {\n            if (value < 1) {\n                callback(new Error('只能为大于等于1整数'));\n            } else {\n                callback();\n            }\n        };\n        const isNum = (rule, value, callback) => {\n            const age = /^[0-9]*$/;\n            if (!age.test(value)) {\n                callback(new Error('只能为非负数字'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag = (rule, value, callback) => {\n            if (value < 0) {\n                callback(new Error('只能为非负数'));\n            } else {\n                callback();\n            }\n        };\n        const epsilonRule = (rule, value, callback) => {\n            var list = value.split(',');\n            for (var i in list) {\n                if (!typeof parseFloat(list[i]) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n                    callback(new Error('请填写合理的非负数字列表'));\n                } else {\n                    callback();\n                }\n            }\n        };\n        return {\n            mark_group: {\n                mark0: {\n                    0: '0'\n                },\n                mark01_255: {\n                    0.1: '0.1',\n                    255: '255'\n                },\n                marks0_5: {\n                    0: '0',\n                    5: '5'\n                },\n                marks1_5: {\n                    1: '1',\n                    5: '5'\n                }\n            },\n            radio_epsilon_4: '1',\n            radio_epsilon_5: '1',\n            radio_epsilon_6: '1',\n            radio_epsilon_7: '1',\n            loading: false,\n\n            form: {\n                domain_4: [\n                    {\n                        value: 0\n                    }\n                ],\n                domain_5: [\n                    {\n                        value: 0\n                    }\n                ],\n                domain_6: [\n                    {\n                        value: 0\n                    }\n                ],\n                domain_7: [\n                    {\n                        value: 0\n                    }\n                ],\n                target: null,\n                positive: '1',\n                name: '',\n                augmentation_method: null,\n                epsilon: '',\n                // range_epsilon_5: null,\n                // range_epsilon_6: null,\n                range_epsilon_7: [0.1, 0.1],\n                range_epsilon_4: [0.1, 0.1],\n                range_epsilon_5: [0.1, 0.1],\n                range_epsilon_6: [0.1, 0.1],\n                // ite_limit: null,\n                ite_limit: null,\n                num_iters: [1, 1],\n                gamma: [1, 1],\n                whether_to_rotate: false,\n                // generate_per_file_and_params: null,\n                generate_per_file_and_params: 1,\n                // generate_per_file: null,\n                generate_per_file: 1,\n                boundary_constraint: null,\n                strict_mode: false,\n                master: this.$store.state.userId,\n                urgency_level: 0,\n                file: {},\n                epsilon_7: null,\n                epsilon_4: null,\n                epsilon_5: null,\n                epsilon_6: null\n            },\n\n            marks: {\n                1: '1',\n                50: '50'\n            },\n            range_epsilon_6_marks: {\n                0.1: '0.1',\n                10: '10'\n            },\n            ite_limit_bili_marks: {\n                1: '1%',\n                100: '100%'\n            },\n            methods: [\n                {\n                    value: '0',\n                    label: '黑盒对抗',\n                    children: [\n                        {\n                            // Guassian_noise\n                            value: '7',\n                            label: 'SIMBA'\n                        }\n                    ]\n                },\n                {\n                    value: '1',\n                    label: '白盒对抗',\n                    children: [\n                        {\n                            value: '4',\n                            label: 'FGSM'\n                        },\n                        {\n                            value: '5',\n                            label: 'I-FGSM(BIM)'\n                        },\n                        {\n                            value: '6',\n                            label: 'JSMA'\n                        }\n                    ]\n                }\n            ],\n            directional: [\n                {\n                    value: '0',\n                    label: '定向',\n                    children: [\n                        {\n                            value: '0',\n                            label: '2S1'\n                        },\n                        {\n                            value: '1',\n                            label: 'BMP2'\n                        },\n                        {\n                            value: '2',\n                            label: 'BRDM_2'\n                        },\n                        {\n                            value: '3',\n                            label: 'BTR60'\n                        },\n                        {\n                            value: '4',\n                            label: 'BTR70'\n                        },\n                        {\n                            value: '5',\n                            label: 'D7'\n                        },\n                        {\n                            value: '6',\n                            label: 'T62'\n                        },\n                        {\n                            value: '7',\n                            label: 'T72'\n                        },\n                        {\n                            value: '8',\n                            label: 'ZIL131'\n                        },\n                        {\n                            value: '9',\n                            label: 'ZSU_23_4'\n                        }\n                    ]\n                },\n                {\n                    value: '10',\n                    label: '非定向',\n                    children: [\n                        {\n                            // Guassian_noise\n                            value: '10',\n                            label: '随机'\n                        }\n                    ]\n                }\n            ],\n            fileList: [],\n            typeList: [],\n            params_id: [null, null],\n            directional_id: ['10', '10'],\n            is_available_to_submit: true,\n            rules1: {\n                // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: epsilonRule, trigger: 'blur' }\n                ],\n                generate_per_file_and_params: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            rules2: {\n                // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                range_epsilon_5: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ]\n            },\n            rules3: {\n                // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                range_epsilon_6: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                boundary_constraint: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ]\n            }\n        };\n    },\n    computed: {\n        rulesList: function() {\n            if (this.params_id === 1) {\n                return this.rules1;\n            } else if (this.params_id === 2) {\n                return this.rules2;\n            } else {\n                return this.rules3;\n            }\n        }\n    },\n    methods: {\n        resetForm(formName, index) {\n            console.log('formName:', formName);\n            // this.$refs[formName].resetFields();\n            if (index == 4) {\n                this.form.domain_4 = [\n                    {\n                        value: 0\n                    }\n                ];\n            } else if (index == 5) {\n                this.form.domain_5 = [\n                    {\n                        value: 0\n                    }\n                ];\n            } else if (index == 6) {\n                this.form.domain_6 = [\n                    {\n                        value: 0\n                    }\n                ];\n            } else if (index == 7) {\n                this.form.domain_7 = [\n                    {\n                        value: 0\n                    }\n                ];\n            }\n        },\n\n        removeDomain(item, index) {\n            if (index == 4) {\n                if (this.form.domain_4.length == 1) {\n                    this.$message.error('扰动幅度不可为空!');\n                } else {\n                    var item_index = this.form.domain_4.indexOf(item);\n                    if (item_index !== -1) {\n                        this.form.domain_4.splice(item_index, 1);\n                    }\n                }\n            } else if (index == 5) {\n                if (this.form.domain_5.length == 1) {\n                    this.$message.error('单步扰动幅度不可为空!');\n                } else {\n                    var item_index = this.form.domain_5.indexOf(item);\n                    if (item_index !== -1) {\n                        this.form.domain_5.splice(item_index, 1);\n                    }\n                }\n            } else if (index == 6) {\n                if (this.form.domain_6.length == 1) {\n                    this.$message.error('单步扰动幅度不可为空!');\n                } else {\n                    var item_index = this.form.domain_6.indexOf(item);\n                    if (item_index !== -1) {\n                        this.form.domain_6.splice(item_index, 1);\n                    }\n                }\n            } else if (index == 7) {\n                if (this.form.domain_7.length == 1) {\n                    this.$message.error('单步扰动幅度不可为空!');\n                } else {\n                    var item_index = this.form.domain_7.indexOf(item);\n                    if (item_index !== -1) {\n                        this.form.domain_7.splice(item_index, 1);\n                    }\n                }\n            }\n        },\n        addDomain(index) {\n            if (index == 4) {\n                this.form.domain_4.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            } else if (index == 5) {\n                this.form.domain_5.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            } else if (index == 6) {\n                this.form.domain_6.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            } else if (index == 7) {\n                this.form.domain_7.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            }\n        },\n        handleChange() {\n            console.log('this.params_id:', this.params_id);\n        },\n        trim(str) {\n            return str.replace(/(^s*)|(s*$)/g, '');\n        },\n        onSubmit() {\n            this.loading = true;\n            this.form.master = this.$store.state.userId;\n            this.$refs.formRef.validate(async valid => {\n                // valid\n                if (1) {\n                    console.log('this.form.augmentation_method[1]:', this.form.augmentation_method[1]);\n                    if (this.form.augmentation_method[1] === '') {\n                        this.loading = false;\n                        return this.$message.error('请选择生成方法!');\n                    }\n\n                    var adddata = new FormData();\n                    if (this.form.name) {\n                        adddata.append('name', this.form.name);\n                    }\n                    adddata.append('augmentation_method', this.form.augmentation_method[1]);\n                    adddata.append('master', this.form.master);\n                    adddata.append('urgency_level', this.form.urgency_level + '');\n                    // adddata.append('urgency_level', this.form.urgency_level);\n                    var temp_params = {};\n\n                    if (this.form.augmentation_method[1] == 4) {\n                        temp_params = {\n                            strict_mode: this.form.strict_mode\n                        };\n                        temp_params.strict_mode = this.form.strict_mode ? '1' : '0';\n                        if (this.radio_epsilon_4 == '1') {\n                            // 列表\n                            // epsilon: '[' + this.form.epsilon + ']',\n                            // temp_params.epsilon = '[' + this.form.epsilon_4 + ']';\n                            var temp = [];\n                            for (var x in this.form.domain_4) {\n                                console.log('this.form.domain_4[x][\"value\"]:', this.form.domain_4[x]['value']);\n                                temp.push(this.form.domain_4[x]['value']);\n                            }\n                            temp_params.epsilon = '[' + temp.toString() + ']';\n                            console.log('temp_params.epsilon:', temp_params.epsilon);\n                        } else if (this.radio_epsilon_4 == '2') {\n                            // 范围\n                            temp_params.epsilon_upper_limit = this.form.range_epsilon_4[1] + '';\n                            temp_params.epsilon_lower_limit = this.form.range_epsilon_4[0] + '';\n                            temp_params.generate_per_file = this.form.generate_per_file + '';\n                        }\n                    } else if (this.form.augmentation_method[1] == 5) {\n                        temp_params = {\n                            ite_limit: this.form.ite_limit + '',\n                            strict_mode: this.form.strict_mode\n                        };\n                        temp_params.strict_mode = this.form.strict_mode ? '1' : '0';\n                        if (this.radio_epsilon_5 == '1') {\n                            // 列表\n                            // epsilon: '[' + this.form.epsilon + ']',\n                            // temp_params.epsilon = '[' + this.form.epsilon_5 + ']';\n                            var temp = [];\n                            for (var x in this.form.domain_5) {\n                                console.log('this.form.domain_5[x][\"value\"]:', this.form.domain_5[x]['value']);\n                                temp.push(this.form.domain_5[x]['value']);\n                            }\n                            temp_params.epsilon = '[' + temp.toString() + ']';\n                            console.log('temp:', temp);\n                            console.log('temp_params.epsilon:', temp_params.epsilon);\n                        } else if (this.radio_epsilon_5 == '2') {\n                            // 列表\n                            temp_params.epsilon_upper_limit = this.form.range_epsilon_5[1] + '';\n                            temp_params.epsilon_lower_limit = this.form.range_epsilon_5[0] + '';\n                            temp_params.generate_per_file = this.form.generate_per_file + '';\n                        }\n                    } else if (this.form.augmentation_method[1] == 6) {\n                        temp_params = {\n                            gamma: this.form.gamma / 100,\n                            positive: this.form.positive,\n                            strict_mode: this.form.strict_mode\n                        };\n                        temp_params.strict_mode = this.form.strict_mode ? '1' : '0';\n                        if (this.radio_epsilon_6 == '1') {\n                            // 列表\n                            // epsilon: '[' + this.form.epsilon + ']',\n                            // temp_params.epsilon = '[' + this.form.epsilon_6 + ']';\n                            var temp = [];\n                            for (var x in this.form.domain_6) {\n                                console.log('this.form.domain_6[x][\"value\"]:', this.form.domain_6[x]['value']);\n                                temp.push(this.form.domain_6[x]['value']);\n                            }\n                            temp_params.epsilon = '[' + temp.toString() + ']';\n                            console.log('temp:', temp);\n                            console.log('temp_params.epsilon:', temp_params.epsilon);\n                        } else if (this.radio_epsilon_6 == '2') {\n                            // 列表\n                            temp_params.epsilon_upper_limit = this.form.range_epsilon_6[1] + '';\n                            temp_params.epsilon_lower_limit = this.form.range_epsilon_6[0] + '';\n                            temp_params.generate_per_file = this.form.generate_per_file + '';\n                        }\n                        if (this.directional_id[1] != 10) {\n                            temp_params.target = this.directional_id[1];\n                        }\n                    } else if (this.form.augmentation_method[1] == 7) {\n                        temp_params = {\n                            num_iters: this.form.num_iters + '',\n                            strict_mode: this.form.strict_mode\n                        };\n                        temp_params.strict_mode = this.form.strict_mode ? '1' : '0';\n                        if (this.radio_epsilon_7 == '1') {\n                            // 列表\n                            // temp_params.epsilon = '[' + this.form.epsilon_7 + ']';\n                            var temp = [];\n                            for (var x in this.form.domain_7) {\n                                console.log('this.form.domain_7[x][\"value\"]:', this.form.domain_7[x]['value']);\n                                temp.push(this.form.domain_7[x]['value']);\n                            }\n                            temp_params.epsilon = '[' + temp.toString() + ']';\n                            console.log('temp:', temp);\n                            console.log('temp_params.epsilon:', temp_params.epsilon);\n                        } else if (this.radio_epsilon_7 == '2') {\n                            // 列表\n                            temp_params.epsilon_upper_limit = this.form.range_epsilon_7[1] + '';\n                            temp_params.epsilon_lower_limit = this.form.range_epsilon_7[0] + '';\n                            temp_params.generate_per_file = this.form.generate_per_file + '';\n                        }\n                    }\n\n                    temp_params = JSON.stringify(temp_params);\n                    adddata.append('params', temp_params);\n\n                    this.form.file = document.getElementById('filetemp').files[0];\n                    if (this.form.file) {\n                        adddata.append('file', this.form.file);\n                    } else {\n                        this.loading = false;\n                        return this.$message.error('请上传文件！');\n                    }\n\n                    for (var [a, b] of adddata.entries()) {\n                        console.log(a, b);\n                    }\n                    const { data: data } = await this.$http({\n                        url: '/task/',\n                        data: adddata,\n                        method: 'post'\n                    });\n                    console.log('data:', data);\n                    if (data.code !== 20000) {\n                        this.loading = false;\n                        return this.$message.error('添加生成任务失败！' + '错误原因：' + data.msg);\n                    }\n                    this.$message.success('提交成功！');\n                    this.reload();\n                } else {\n                    this.loading = false;\n                }\n            });\n        },\n        async methodChanged(method_id) {\n            this.params_id = method_id;\n            this.form.augmentation_method = this.params_id;\n\n            this.is_available_to_submit = false;\n        },\n        fileLoad() {\n            const selectedFile = this.$refs.image_a_file_ref.files[0];\n\n            let fileName = selectedFile.name;\n            let pos = fileName.lastIndexOf('.');\n            let lastName = fileName.substring(pos, fileName.length);\n            console.log(lastName, lastName.toLowerCase());\n            console.log('lastName:', lastName);\n            if (lastName.toLowerCase() !== '.jpg' && lastName.toLowerCase() !== '.jpeg' && lastName.toLowerCase() !== '.zip') {\n                this.$message.error('文件必须为 .jpg/.jpeg/.zip 类型');\n                // this.$refs.lidar_t_file_ref.clearFiles;\n                this.$refs.image_a_file_ref.value = ''; // 清空file文件\n                // return false;\n            } else {\n                this.form.file = selectedFile;\n            }\n        },\n        clickLoad() {\n            this.$refs.refFile.dispatchEvent(new MouseEvent('click'));\n        },\n        async getTypeList() {\n            const { data: data } = await this.$http.get('/augmentation_type/');\n            if (data.code !== 20000) {\n                return this.$message.error('获取任务列表失败！' + '错误原因：' + data.msg);\n            }\n\n            this.typeList = data.data;\n        }\n    },\n    async mounted() {\n        this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n\n        var id = 1;\n        // const { data: data } = await this.$http.get('/augmentation_method/?augmentation_type=' + id);\n        // if (data.code === 45000) {\n        //     return this.$message.error('该生成类型暂无方法！');\n        // }\n        // if (data.code !== 20000) {\n        //     return this.$message.error('查询生成方法失败！');\n        // }\n        // this.methods = data.data.filter(item => {\n        //     return item.augmentation_type_id === id;\n        // });\n    },\n    created() {\n        this.getTypeList();\n    }\n};\n",null]}