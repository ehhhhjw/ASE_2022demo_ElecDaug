{"remainingRequest":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-main\\src\\components\\page\\User_Manage.vue?vue&type=style&index=0&id=e320cf2e&scoped=true&lang=css&","dependencies":[{"path":"E:\\LidarPlatformFrontend-main\\src\\components\\page\\User_Manage.vue","mtime":1636360852602},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.search {\n    margin-bottom: 10px !important;\n}\n.right {\n    margin-right: 5px !important;\n}\n",{"version":3,"sources":["User_Manage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAybA;AACA;AACA;AACA;AACA;AACA","file":"User_Manage.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item> <i class=\"el-icon-s-tools\"></i> Tool Management </el-breadcrumb-item>\n                <el-breadcrumb-item>User Management</el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <el-card>\n            <el-row :gutter=\"20\" class=\"search\">\n                <el-col :span=\"12\">\n                    <el-form :inline=\"true\" :model=\"formInline_Self\" class=\"demo-form-inline\">\n                        <el-form-item label=\"Query Mode\">\n                            <el-select v-model=\"formInline_Self.searchType\" placeholder=\"Please select query mode\" prop=\"searchType\">\n                                <el-option label=\"User id\" value=\"用户id\"></el-option>\n                                <el-option label=\"Username\" value=\"用户名\"></el-option>\n                                <el-option label=\"Nickname\" value=\"用户昵称\"></el-option>\n                            </el-select>\n                        </el-form-item>\n                        <el-form-item label=\"Query Content\">\n                            <el-input\n                                placeholder=\"Please enter the query content\"\n                                v-model=\"formInline_Self.searchTaskInfo\"\n                                clearable\n                                @clear=\"getUserList\"\n                            >\n                                <el-button\n                                    slot=\"append\"\n                                    @click=\"\n                                        pageReflash();\n                                        SearchUser();\n                                    \"\n                                    size=\"mini\"\n                                    ><i class=\"el-icon-search el-icon--right\"></i\n                                ></el-button>\n                            </el-input>\n                        </el-form-item>\n                    </el-form>\n                </el-col>\n                <el-col :span=\"4\">\n                    <el-button type=\"primary\" @click=\"addDialogVisible = true\">Add user</el-button>\n                </el-col>\n            </el-row>\n            <el-table :data=\"userList\" border stripe>\n                <el-table-column type=\"index\"></el-table-column>\n                <el-table-column label=\"username\" prop=\"username\"></el-table-column>\n                <el-table-column label=\"nickname\" prop=\"nickname\"></el-table-column>\n                <el-table-column label=\"user group\" prop=\"user_group_name\"></el-table-column>\n                <el-table-column label=\"join time\" prop=\"join_datetime\">\n                    <template slot-scope=\"scope\">\n                        {{ scope.row.join_datetime | dateFormat }}\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"last login time\" prop=\"last_login_datetime\">\n                    <template slot-scope=\"scope\">\n                        {{ isBlank_login(scope) | dateFormat }}\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"operation\" width=\"200px\">\n                    <template slot-scope=\"scope\">\n                        <el-tooltip effect=\"dark\" content=\"Edit\" placement=\"top\" :enterable=\"false\">\n                            <el-button\n                                type=\"primary\"\n                                icon=\"el-icon-edit\"\n                                size=\"mini\"\n                                @click=\"showEditDialog(scope.row.username)\"\n                            ></el-button>\n                        </el-tooltip>\n                        <el-tooltip effect=\"dark\" content=\"Delete\" placement=\"top\" :enterable=\"false\">\n                            <el-button\n                                type=\"danger\"\n                                icon=\"el-icon-delete\"\n                                size=\"mini\"\n                                @click=\"removeUserById(scope.row.username)\"\n                            ></el-button>\n                        </el-tooltip>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <el-pagination\n                @size-change=\"handleSizeChange\"\n                @current-change=\"handleCurrentChange\"\n                :current-page.sync=\"queryInfo.page\"\n                :page-size=\"10\"\n                layout=\"prev, pager, next\"\n                :total=\"total\"\n            >\n            </el-pagination>\n        </el-card>\n        <el-dialog title=\"Add user\" :visible.sync=\"addDialogVisible\" width=\"30%\" @closed=\"addDialogClosed\">\n            <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\n                <el-form-item label=\"username\" prop=\"username\">\n                    <el-input v-model=\"addForm.username\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"password\" prop=\"password\">\n                    <el-input v-model=\"addForm.password\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"nickname\" prop=\"nickname\">\n                    <el-input v-model=\"addForm.nickname\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"user group\" prop=\"user_group\">\n                    <el-select v-model=\"addForm.user_group\" placeholder=\"Please select user group\">\n                        <el-option label=\"Ordinary users\" value=\"0\"></el-option>\n                        <el-option label=\"Super administrator\" value=\"1\"></el-option>\n                    </el-select>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"addDialogVisible = false\">cancel</el-button>\n                <el-button type=\"primary\" @click=\"addUser\">OK</el-button>\n            </span>\n        </el-dialog>\n        <el-dialog title=\"编辑用户信息\" :visible.sync=\"editDialogVisible\" width=\"50%\" @closed=\"editDialogClosed\">\n            <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"110px\">\n                <el-form-item label=\"用户名\">\n                    <el-input v-model=\"editForm.username\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"密码\" prop=\"new_password\">\n                    <el-input v-model=\"editForm.new_password\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"用户名称\" prop=\"new_nickname\">\n                    <el-input v-model=\"editForm.new_nickname\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"用户权限\" prop=\"new_user_group\">\n                    <el-select v-model=\"editForm.new_user_group\" placeholder=\"请选择用户权限\">\n                        <el-option label=\"普通用户\" value=\"普通用户\"></el-option>\n                        <el-option label=\"超级管理员\" value=\"超级管理员\"></el-option>\n                    </el-select>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport qs from 'qs';\nexport default {\n    data() {\n        return {\n            queryInfo: {\n                page: 1\n            },\n            userList: [],\n            total: 0,\n            totalPageNum: 0,\n            addDialogVisible: false,\n            addForm: {\n                username: '',\n                password: '',\n                nickname: '',\n                user_group: ''\n            },\n            addFormRules: {\n                username: [\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\n                    {\n                        min: 3,\n                        max: 10,\n                        message: '用户名的长度在3~10个字符之间',\n                        trigger: 'blur'\n                    }\n                ],\n                password: [\n                    { required: true, message: '请输入密码', trigger: 'blur' },\n                    {\n                        min: 6,\n                        max: 15,\n                        message: '密码的长度在6~15个字符之间',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            editDialogVisible: false,\n            editForm: {\n                username: '',\n                new_password: '',\n                new_nickname: '',\n                new_user_group: ''\n            },\n            editFormRules: {\n                username: [\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\n                    {\n                        min: 3,\n                        max: 10,\n                        message: '用户名的长度在3~10个字符之间',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            searchUserName: '',\n            visibleSubmit: '',\n            userRight: '',\n            colomnHiden: true,\n            value: '100',\n            formInline_Self: {\n                searchType: '',\n                searchTaskInfo: ''\n            }\n        };\n    },\n    created() {\n        this.getUserList();\n        this.userRight = this.$store.state.user_group_name;\n        this.colomnHiden = this.userRight === '超级管理员' ? false : true;\n    },\n    methods: {\n        pageReflash() {\n            this.queryInfo.page = 1;\n        },\n        async SearchUser() {\n            if (this.formInline_Self.searchType === '') {\n                return this.$message.error({\n                    showClose: true,\n                    message: '请输入查询方式！',\n                    offset: 70\n                });\n            }\n            if (this.formInline_Self.searchTaskInfo === '') {\n                return this.$message.error({\n                    showClose: true,\n                    message: '请输入搜索内容！',\n                    offset: 70\n                });\n            }\n            var search_params = '';\n            if (this.formInline_Self.searchType === '用户id') {\n                search_params = '/user/id/admin/search/?user_id=' + this.formInline_Self.searchTaskInfo;\n            } else if (this.formInline_Self.searchType === '用户名') {\n                search_params = '/user/username/admin/search/?username=' + this.formInline_Self.searchTaskInfo + '&search_type=1';\n            } else if (this.formInline_Self.searchType === '用户昵称') {\n                search_params = '/user/nickname/admin/search/?nickname=' + this.formInline_Self.searchTaskInfo + '&search_type=1';\n            }\n\n            const { data: data } = await this.$http.get(search_params);\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '未搜索到该用户！',\n                    offset: 70\n                });\n            }\n\n            if (this.formInline_Self.searchType === '用户id') {\n                this.userList = [];\n                this.userList.push(data.data);\n            } else {\n                this.userList = data.data.details;\n            }\n            this.total_Self = this.userList ? this.userList.length : 0;\n            this.totalPageNum = data.data.pages;\n        },\n        temp() {},\n        async getUserList() {\n            const { data: data } = await this.$http.get('/user/all/admin/search/' + '?page=' + this.queryInfo.page);\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '获取用户列表失败！' + '错误原因：' + data.msg,\n                    offset: 70\n                });\n            }\n            this.userList = data.data.details;\n            this.total = data.data.pages * 10;\n        },\n        async FuzzySearvhchUser() {\n            if (this.searchUserName === '') {\n                return this.$message.error({\n                    showClose: true,\n                    message: '请输入搜索内容！',\n                    offset: 70\n                });\n            }\n            const { data: data } = await this.$http.get(\n                '/user/username/admin/search/' + '?username=' + this.searchUserName + '&search_type=1'\n            );\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '未模糊搜索到该用户！',\n                    offset: 70\n                });\n            }\n\n            this.userList = data.data.details;\n            this.total = this.userList.length;\n            this.totalPageNum = data.data.pages;\n        },\n        async PreciseSearchUser() {\n            if (this.searchUserName === '') {\n                return this.$message.error({\n                    showClose: true,\n                    message: '请输入搜索内容！',\n                    offset: 70\n                });\n            }\n            const { data: data } = await this.$http.get(\n                '/user/username/admin/search/' + '?username=' + this.searchUserName + '&search_type=0'\n            );\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '未精确搜索到该用户！',\n                    offset: 70\n                });\n            }\n\n            this.userList = [];\n            this.userList.push(data.data);\n            this.total = this.userList ? this.userList.length : 0;\n            this.totalPageNum = data.data.pages;\n        },\n        handleSizeChange(newSize) {\n            this.queryInfo.pagesize = newSize;\n            this.getUserList();\n        },\n        handleCurrentChange(newPage) {\n            this.queryInfo.page = newPage;\n            this.getUserList();\n        },\n        async removeUserById(username) {\n            const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).catch(err => err);\n            if (confirmResult !== 'confirm') {\n                return this.$message.info({\n                    showClose: true,\n                    message: '已取消删除',\n                    offset: 70\n                });\n            }\n            if (this.userList.length == 1) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '删除用户失败！' + '错误原因：系统至少需有一名用户',\n                    offset: 70\n                });\n            }\n            const { data: data } = await this.$http.delete('/user/delete/' + '?username=' + username);\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '删除用户失败！' + '错误原因：' + data.msg,\n                    offset: 70\n                });\n            }\n            this.$message.success({\n                showClose: true,\n                message: '删除用户成功！',\n                offset: 70\n            });\n            this.getUserList();\n        },\n        addUser() {\n            this.$refs.addFormRef.validate(async valid => {\n                if (!valid) return;\n                const { data: data } = await this.$http.post('/user/register/', qs.stringify(this.addForm));\n                if (data.code !== 20000) {\n                    return this.$message.error({\n                        showClose: true,\n                        message: '添加用户失败！' + '错误原因：' + data.msg,\n                        offset: 70\n                    });\n                }\n                this.$message.success({\n                    showClose: true,\n                    message: '添加用户成功！',\n                    offset: 70\n                });\n                this.addDialogVisible = false;\n                this.getUserList();\n            });\n        },\n        addDialogClosed() {\n            this.$refs.addFormRef.resetFields();\n        },\n        async showEditDialog(username) {\n            this.editForm.username = username;\n            this.editDialogVisible = true;\n        },\n        editDialogClosed() {\n            this.$refs.editFormRef.resetFields();\n        },\n        editUserInfo() {\n            this.$refs.editFormRef.validate(async valid => {\n                if (!valid) return;\n\n                var adddata = new FormData();\n                adddata.append('username', this.editForm.username);\n                if (this.editForm.new_password) {\n                    adddata.append('new_password', this.editForm.new_password);\n                }\n                if (this.editForm.new_nickname) {\n                    adddata.append('new_nickname', this.editForm.new_nickname);\n                }\n                if (this.editForm.new_user_group) {\n                    var num = this.editForm.new_user_group === '超级管理员' ? 1 : 0;\n                    adddata.append('new_user_group', num);\n                }\n                const { data: data } = await this.$http({\n                    url: '/user/',\n                    data: adddata,\n                    method: 'put'\n                });\n                if (data.code !== 20000) {\n                    return this.$message.error({\n                        showClose: true,\n                        message: '修改用户失败！' + '错误原因：' + data.msg,\n                        offset: 70\n                    });\n                }\n                this.$message.success({\n                    showClose: true,\n                    message: '修改用户成功！',\n                    offset: 70\n                });\n                this.editDialogVisible = false;\n                this.getUserList();\n            });\n        },\n        isBlank_login(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '从未登录';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            return value;\n        }\n    },\n    mounted() {\n        this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n    }\n};\n</script>\n<style scoped>\n.search {\n    margin-bottom: 10px !important;\n}\n.right {\n    margin-right: 5px !important;\n}\n</style>\n"]}]}