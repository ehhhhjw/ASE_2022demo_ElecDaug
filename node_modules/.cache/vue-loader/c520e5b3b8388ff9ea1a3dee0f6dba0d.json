{"remainingRequest":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\card_methods.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\card_methods.vue","mtime":1636382948401},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data() {\n        return {\n            OnlineUsersNum: 0,\n            RunningTask_final: [],\n            Lidar_A: -1,\n            Lidar_T: -1,\n            Image_A: -1,\n            Image_T: -1\n        };\n    },\n    mounted() {\n        // this.getOnlineUser();\n        this.getRunningTask();\n        this.timer = setInterval(() => {\n            // this.getOnlineUser();\n            this.getRunningTask();\n        }, 1000 * 60);\n    },\n    methods: {\n        async getRunningTask() {\n            const { data: data } = await this.$http.get('/system_status/running_task/');\n            // console.log('getRunningTask_data:', data);\n            console.log('getRunningTaskdata:', data);\n            if (data.code !== 20000) {\n                return this.$message.error('获取正在运行各生成任务失败！' + '错误原因：' + data.msg);\n            }\n            this.RunningTask = data.data;\n            this.Lidar_A = data.data['FGSM-激光雷达'] + data.data['I-FGSM(BIM)-激光雷达'] + data.data['JSMA-激光雷达'];\n            this.Lidar_T =\n                data.data['场景物体旋转蜕变-激光雷达'] + data.data['场景物体添加蜕变-激光雷达'] + data.data['极端场景蜕变-激光雷达'];\n            this.Image_A =\n                data.data['FGSM-合成孔径雷达'] +\n                data.data['I-FGSM(BIM)-合成孔径雷达'] +\n                data.data['JSMA-合成孔径雷达'] +\n                data.data['SIMBA-合成孔径雷达'];\n            this.Image_T = data.data['通用蜕变系列方法-合成孔径雷达'] + data.data['领域蜕变系列方法-合成孔径雷达'];\n            // console.log('Lidar_A, Lidar_T, Image_A, Image_T:', this.Lidar_A, this.Lidar_T, this.Image_A, this.Image_T);\n            // console.log('data.data[\"FGSM-激光雷达\"]:', data.data['FGSM-激光雷达']);\n            // console.log('data.data[\"I-FGSM(BIM)-激光雷达\"]:', data.data['I-FGSM(BIM)-激光雷达']);\n            // console.log('data.data[\"JSMA-激光雷达\"]:', data.data['JSMA-激光雷达']);\n            // this.RunningTask_name = Object.keys(this.RunningTask);\n            // this.RunningTask_num = Object.values(this.RunningTask);\n            // let rf = [];\n            // for (var i = 0; i < this.RunningTask_name.length; i++) {\n            //     var x = {};\n            //     x.name = this.RunningTask_name[i];\n            //     x.num = this.RunningTask_num[i];\n            //     rf.push(x);\n            // }\n            // this.RunningTask_final = rf;\n        },\n        async getOnlineUser() {\n            const { data: data } = await this.$http.get('/system_status/online_user/');\n            if (data.code !== 20000) {\n                return this.$message.error('获取在线人数失败！' + '错误原因：' + data.msg);\n            }\n            this.OnlineUsersNum = data.data.online_user;\n        }\n    }\n};\n",{"version":3,"sources":["card_methods.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"card_methods.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div>\n        <!-- 方法信息 -->\n        <el-card shadow=\"hover\" style=\"height: 290px\">\n            <!-- <el-card shadow=\"hover\" :body-style=\"{ padding: '0px' }\">\n                <div class=\"grid-content grid-con-1\">\n                    <img src=\"../../assets/peoples.png\" class=\"lidarPic\" alt=\"\" />\n                    <div class=\"grid-cont-right\">\n                        <div class=\"grid-num\" :title=\"OnlineUsersNum\">{{ OnlineUsersNum }}</div>\n                        <div>在线用户</div>\n                    </div>\n                </div>\n            </el-card> -->\n            <el-card shadow=\"hover\" style=\"margin: 8px 0\" :body-style=\"{ padding: '0px' }\">\n                <div class=\"grid-content grid-con-1\">\n                    <img src=\"../../assets/FGSM.png\" class=\"lidarPic\" alt=\"\" />\n                    <div class=\"grid-cont-right\">\n                        <div class=\"grid-num\">{{ Lidar_A }}</div>\n                        <div>{{ 'FGSM' }}</div>\n                    </div>\n                </div>\n            </el-card>\n            <el-card shadow=\"hover\" style=\"margin: 8px 0\" :body-style=\"{ padding: '0px' }\">\n                <div class=\"grid-content grid-con-2\">\n                    <img src=\"../../assets/lidar_t.png\" class=\"lidarPic\" alt=\"\" />\n                    <div class=\"grid-cont-right\">\n                        <div class=\"grid-num\">{{ Lidar_T }}</div>\n                        <div>{{ 'I-FGSM(BIM)' }}</div>\n                    </div>\n                </div>\n            </el-card>\n            <el-card shadow=\"hover\" style=\"margin: 8px 0\" :body-style=\"{ padding: '0px' }\">\n                <div class=\"grid-content grid-con-3\">\n                    <img src=\"../../assets/BIM.png\" class=\"lidarPic\" alt=\"\" />\n                    <div class=\"grid-cont-right\">\n                        <div class=\"grid-num\">{{ Image_A }}</div>\n                        <div>{{ 'JSMA' }}</div>\n                    </div>\n                </div>\n            </el-card>\n            <!-- <el-card shadow=\"hover\" style=\"margin: 8px 0\" :body-style=\"{ padding: '0px' }\">\n                <div class=\"grid-content grid-con-4\">\n                    <img src=\"../../assets/JSMA.png\" class=\"lidarPic\" alt=\"\" />\n                    <div class=\"grid-cont-right\">\n                        <div class=\"grid-num\">{{ Image_T }}</div>\n                        <div>{{ '合成孔径雷达蜕变' }}</div>\n                    </div>\n                </div>\n            </el-card> -->\n        </el-card>\n    </div>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            OnlineUsersNum: 0,\n            RunningTask_final: [],\n            Lidar_A: -1,\n            Lidar_T: -1,\n            Image_A: -1,\n            Image_T: -1\n        };\n    },\n    mounted() {\n        // this.getOnlineUser();\n        this.getRunningTask();\n        this.timer = setInterval(() => {\n            // this.getOnlineUser();\n            this.getRunningTask();\n        }, 1000 * 60);\n    },\n    methods: {\n        async getRunningTask() {\n            const { data: data } = await this.$http.get('/system_status/running_task/');\n            // console.log('getRunningTask_data:', data);\n            console.log('getRunningTaskdata:', data);\n            if (data.code !== 20000) {\n                return this.$message.error('获取正在运行各生成任务失败！' + '错误原因：' + data.msg);\n            }\n            this.RunningTask = data.data;\n            this.Lidar_A = data.data['FGSM-激光雷达'] + data.data['I-FGSM(BIM)-激光雷达'] + data.data['JSMA-激光雷达'];\n            this.Lidar_T =\n                data.data['场景物体旋转蜕变-激光雷达'] + data.data['场景物体添加蜕变-激光雷达'] + data.data['极端场景蜕变-激光雷达'];\n            this.Image_A =\n                data.data['FGSM-合成孔径雷达'] +\n                data.data['I-FGSM(BIM)-合成孔径雷达'] +\n                data.data['JSMA-合成孔径雷达'] +\n                data.data['SIMBA-合成孔径雷达'];\n            this.Image_T = data.data['通用蜕变系列方法-合成孔径雷达'] + data.data['领域蜕变系列方法-合成孔径雷达'];\n            // console.log('Lidar_A, Lidar_T, Image_A, Image_T:', this.Lidar_A, this.Lidar_T, this.Image_A, this.Image_T);\n            // console.log('data.data[\"FGSM-激光雷达\"]:', data.data['FGSM-激光雷达']);\n            // console.log('data.data[\"I-FGSM(BIM)-激光雷达\"]:', data.data['I-FGSM(BIM)-激光雷达']);\n            // console.log('data.data[\"JSMA-激光雷达\"]:', data.data['JSMA-激光雷达']);\n            // this.RunningTask_name = Object.keys(this.RunningTask);\n            // this.RunningTask_num = Object.values(this.RunningTask);\n            // let rf = [];\n            // for (var i = 0; i < this.RunningTask_name.length; i++) {\n            //     var x = {};\n            //     x.name = this.RunningTask_name[i];\n            //     x.num = this.RunningTask_num[i];\n            //     rf.push(x);\n            // }\n            // this.RunningTask_final = rf;\n        },\n        async getOnlineUser() {\n            const { data: data } = await this.$http.get('/system_status/online_user/');\n            if (data.code !== 20000) {\n                return this.$message.error('获取在线人数失败！' + '错误原因：' + data.msg);\n            }\n            this.OnlineUsersNum = data.data.online_user;\n        }\n    }\n};\n</script>\n<style scoped>\n.el-card {\n    border-radius: 3%;\n}\n.el-row {\n    margin-bottom: 20px;\n}\n.grid-content {\n    display: flex;\n    align-items: center;\n    height: 70px;\n}\n.grid-cont-right {\n    flex: 1;\n    text-align: center;\n    font-size: 14px;\n    color: #999;\n}\n.grid-num {\n    font-size: 30px;\n    font-weight: bold;\n}\n.grid-con-icon {\n    font-size: 50px;\n    width: 70px;\n    height: 100px;\n    text-align: center;\n    line-height: 100px;\n    color: #fff;\n}\n.grid-con-1 .grid-con-icon {\n    background: rgb(45, 140, 240);\n}\n.grid-con-1 .grid-num {\n    color: rgb(45, 140, 240);\n}\n.grid-con-2 .grid-con-icon {\n    background: rgb(100, 213, 114);\n}\n.grid-con-2 .grid-num {\n    color: rgb(100, 213, 114);\n}\n.grid-con-3 .grid-con-icon {\n    background: #e6a23c;\n}\n.grid-con-3 .grid-num {\n    color: #e6a23c;\n}\n.grid-con-4 .grid-con-icon {\n    background: #f56c6c;\n}\n.grid-con-4 .grid-num {\n    color: #f56c6c;\n}\n.lidarPic {\n    width: 50px;\n    height: 50px;\n    text-align: center;\n    margin-left: 8px;\n}\n.table-icon {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: 35px;\n    background: #f4f4f5;\n    width: 100%;\n    height: 100px;\n    border-radius: 4px;\n}\n.table-icon:hover {\n    background: lightgrey;\n}\na {\n    color: rgb(83, 83, 83);\n    text-decoration: none;\n}\n</style>\n"]}]}