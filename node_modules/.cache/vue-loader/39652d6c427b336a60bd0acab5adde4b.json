{"remainingRequest":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\Image_T_AugTaskAdd.vue?vue&type=template&id=494699b8&scoped=true&","dependencies":[{"path":"E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\Image_T_AugTaskAdd.vue","mtime":1637254022677},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      { staticClass: \"crumbs\" },\n      [\n        _c(\n          \"el-breadcrumb\",\n          { attrs: { separator: \"/\" } },\n          [\n            _c(\"el-breadcrumb-item\", [\n              _c(\"i\", { staticClass: \"el-icon-picture\" }),\n              _vm._v(\" Welcome to ElsMed! \")\n            ])\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _c(\"div\", { staticClass: \"container\" }, [\n      _c(\n        \"div\",\n        [\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-form\",\n                {\n                  ref: \"formRef\",\n                  attrs: {\n                    model: _vm.form,\n                    rules: _vm.FormRules,\n                    \"label-width\": \"100px\"\n                  }\n                },\n                [\n                  _c(\"el-form-item\", { attrs: { label: \"Method\" } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"block\" },\n                      [\n                        _c(\"el-cascader\", {\n                          staticStyle: { width: \"350px\" },\n                          attrs: {\n                            options: _vm.options,\n                            props: { expandTrigger: \"hover\" },\n                            placeholder: \"Select the method\"\n                          },\n                          on: { change: _vm.handleChange },\n                          model: {\n                            value: _vm.method_value,\n                            callback: function($$v) {\n                              _vm.method_value = $$v\n                            },\n                            expression: \"method_value\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\"el-form-item\", { attrs: { label: \"Params\" } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"block\" },\n                      [\n                        _c(\"el-slider\", {\n                          staticStyle: { width: \"300px\" },\n                          attrs: {\n                            min: 1,\n                            max: 10,\n                            step: 1,\n                            marks: _vm.mark_group.marks1_10\n                          },\n                          model: {\n                            value: _vm.form.params,\n                            callback: function($$v) {\n                              _vm.$set(_vm.form, \"params\", $$v)\n                            },\n                            expression: \"form.params\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\"el-form-item\", { attrs: { label: \"Upload file\" } }, [\n                    _c(\"input\", {\n                      ref: \"image_t_file_ref\",\n                      staticStyle: { display: \"none\" },\n                      attrs: {\n                        type: \"file\",\n                        id: \"filetemp\",\n                        prop: \"form.file\"\n                      },\n                      on: { change: _vm.fileLoad }\n                    }),\n                    _c(\"input\", {\n                      staticStyle: { width: \"200px\" },\n                      attrs: {\n                        type: \"text\",\n                        value: \"\",\n                        disabled: \"\",\n                        id: \"inputFileAgent\"\n                      }\n                    }),\n                    _c(\"input\", {\n                      attrs: { type: \"button\", value: \"Browse...\" },\n                      on: { click: _vm.clickfiletemp }\n                    }),\n                    _c(\"br\")\n                  ]),\n                  _c(\n                    \"el-form-item\",\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.onSubmit }\n                        },\n                        [_vm._v(\"Submit\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.onSubmit }\n                        },\n                        [_vm._v(\"DownLoad\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.onSubmit }\n                        },\n                        [_vm._v(\"Preview\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: { click: _vm.onSubmit }\n                        },\n                        [_vm._v(\"Reset\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}