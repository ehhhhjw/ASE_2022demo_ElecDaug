{"remainingRequest":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-main\\src\\components\\page\\Lidar_T_AugTaskAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-main\\src\\components\\page\\Lidar_T_AugTaskAdd.vue","mtime":1636343070825},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport qs from 'qs';\nfunction changeAgentContent() {\n    const selectedFile = this.$refs.lidar_t_file_ref.files[0];\n\n    let fileName = selectedFile.name;\n    let pos = fileName.lastIndexOf('.');\n    let lastName = fileName.substring(pos, fileName.length);\n    console.log(lastName, lastName.toLowerCase());\n    console.log('lastName:', lastName);\n    if (lastName.toLowerCase() !== '.zip') {\n        this.$message.error({\n            showClose: true,\n            message: '文件必须为 .zip 类型',\n            offset: 70\n        });\n        // this.$refs.lidar_t_file_ref.clearFiles;\n        this.$refs.lidar_t_file_ref.value = ''; // 清空file文件\n        return false;\n    }\n\n    this.form.file = selectedFile;\n    document.getElementById('inputFileAgent').value = document.getElementById('inputFile').value;\n}\nexport default {\n    name: 'baseform',\n    inject: ['reload'],\n    data() {\n        const isNotNag_int = (rule, value, callback) => {\n            const boolean = new RegExp('^[1-9][0-9]*$').test(value);\n            if (value !== '0' && !boolean) {\n                callback(new Error('Please enter a non negative integer'));\n            } else {\n                callback();\n            }\n        };\n        const generate_per_file_and_paramsRule = (rule, value, callback) => {\n            if (value < 1) {\n                callback(new Error('Only integers greater than or equal to 1 can be entered'));\n            } else {\n                callback();\n            }\n        };\n        const isNum = (rule, value, callback) => {\n            const age = /^[0-9]*$/;\n            if (!age.test(value)) {\n                callback(new Error('Please enter a non negative integer'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag = (rule, value, callback) => {\n            if (value < 0) {\n                callback(new Error('Please enter a non negative integer'));\n            } else {\n                callback();\n            }\n        };\n        const epsilonRule = (rule, value, callback) => {\n            var list = value.split(',');\n            for (var i in list) {\n                if (!typeof parseFloat(list[i]) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n                    callback(new Error('请填写合理的非负数字列表'));\n                } else {\n                    callback();\n                }\n            }\n        };\n        return {\n            radio1: '1',\n            marks: {\n                0: '0'\n            },\n            mark_group: {\n                marks1_2: {\n                    1: '1',\n                    2: '2'\n                },\n                marks0001_2: {\n                    0.001: '0.001',\n                    2: '2'\n                },\n                marks0001_1: {\n                    0.001: '0.001',\n                    1: '1'\n                },\n                marks1_100: {\n                    1: '1',\n                    100: {\n                        style: {\n                            width: '30px'\n                        },\n                        label: '100'\n                    }\n                },\n                marks1_1000: {\n                    1: '1',\n                    1000: {\n                        style: {\n                            width: '40px'\n                        },\n                        label: '1000'\n                    }\n                },\n                marks1_15000: {\n                    1: '1',\n                    15000: {\n                        style: {\n                            width: '50px'\n                        },\n                        label: '15000'\n                    }\n                },\n                marks0_5: {\n                    0: '0',\n                    5: '5'\n                },\n                marks1_5: {\n                    1: '1',\n                    5: '5'\n                }\n            },\n            value: 0,\n            loading: false,\n            form: {\n                name: '',\n                augmentation_method: null,\n                // aug_index: null,\n                aug_object_Car: null,\n                aug_count_Car: 0,\n                aug_object_Truck: null,\n                aug_count_Truck: 0,\n                aug_object_Cyclist: null,\n                aug_count_Cyclist: 0,\n\n                angle: 0,\n\n                aug_Car: true,\n                aug_Truck: true,\n                aug_Cyclist: true,\n\n                master: this.$store.state.userId,\n                urgency_level: 0,\n                file: {}\n            },\n            methods: [],\n            truck_options: [\n                {\n                    value: '1',\n                    label: 'Type 1'\n                },\n                {\n                    value: '2',\n                    label: 'Type 2'\n                },\n                {\n                    value: '3',\n                    label: 'Type 3'\n                }\n            ],\n            car_options: [\n                {\n                    value: '1',\n                    label: 'Type 1'\n                }\n            ],\n            cyclist_options: [\n                {\n                    value: '1',\n                    label: 'Type 1'\n                },\n                {\n                    value: '2',\n                    label: 'Type 2'\n                }\n            ],\n            fileList: [],\n            typeList: [],\n            params_id: 0,\n            is_available_to_submit: true,\n            rules1: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: epsilonRule, trigger: 'blur' }\n                ],\n                generate_per_file_and_params: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ]\n                // urgency_level: [\n                //     { required: true, message: '请输入数字', trigger: 'blur' },\n                //     { validator: isNotNag_int, trigger: 'blur' }\n                // ]\n            },\n            rules2: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon2: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ]\n            },\n            rules3: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon3: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                boundary_constraint: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ]\n            }\n        };\n    },\n    computed: {\n        rulesList: function() {\n            if (this.params_id === 10) {\n                return this.rules1;\n            } else if (this.params_id === 11) {\n                return this.rules2;\n            } else if (this.params_id === 12) {\n                return this.rules3;\n            }\n        }\n    },\n    methods: {\n        trim(str) {\n            return str.replace(/(^s*)|(s*$)/g, '');\n        },\n        onSubmit() {\n            this.loading = true;\n            (this.form.master = this.$store.state.userId),\n                this.$refs.formRef.validate(async valid => {\n                    if (valid) {\n                        this.form.augmentation_method = parseInt(this.params_id);\n                        console.log('this.form.augmentation_method:', this.form.augmentation_method);\n                        if (this.form.augmentation_method === '') {\n                            this.loading = false;\n                            return this.$message.error({\n                                showClose: true,\n                                message: 'Please select an object addition method method!',\n                                offset: 70\n                            });\n                        }\n\n                        var adddata = new FormData();\n                        if (this.form.name) {\n                            adddata.append('name', this.form.name);\n                        }\n                        adddata.append('augmentation_method', this.form.augmentation_method);\n                        adddata.append('master', this.form.master);\n                        adddata.append('urgency_level', this.form.urgency_level + '');\n\n                        var temp_params = {};\n                        if (this.form.augmentation_method === 10) {\n                            if (this.form.aug_count_Car + this.form.aug_count_Truck + this.form.aug_count_Cyclist === 0) {\n                                this.loading = false;\n                                return this.$message.error({\n                                    showClose: true,\n                                    message: 'Added quantity cannot be 0!',\n                                    offset: 70\n                                });\n                            }\n                            temp_params = {\n                                aug_object_car: this.form.aug_object_Car ? this.form.aug_object_Car : '1',\n                                aug_object_truck: this.form.aug_object_Truck ? this.form.aug_object_Truck : '1',\n                                aug_object_cyclist: this.form.aug_object_Cyclist ? this.form.aug_object_Cyclist : '1',\n                                aug_count_car: this.form.aug_count_Car + '',\n                                aug_count_truck: this.form.aug_count_Truck + '',\n                                aug_count_cyclist: this.form.aug_count_Cyclist + ''\n                            };\n                        } else if (this.form.augmentation_method === 11) {\n                            if (this.form.angle === 0) {\n                                this.loading = false;\n                                return this.$message.error({\n                                    showClose: true,\n                                    message: '旋转角度不可为0！',\n                                    offset: 70\n                                });\n                            }\n                            temp_params = {\n                                angle: this.form.angle + ''\n                            };\n                        } else if (this.form.augmentation_method === 12) {\n                            if (!this.form.aug_Car && !this.form.aug_Truck && !this.form.aug_Cyclist) {\n                                this.loading = false;\n                                return this.$message.error({\n                                    showClose: true,\n                                    message: 'Please select the object to add!',\n                                    offset: 70\n                                });\n                            }\n                            temp_params = {\n                                aug_Car: this.form.aug_Car,\n                                aug_Truck: this.form.aug_Truck,\n                                aug_Cyclist: this.form.aug_Cyclist\n                            };\n                        }\n\n                        temp_params = JSON.stringify(temp_params);\n                        adddata.append('params', temp_params);\n                        this.form.file = document.getElementById('filetemp').files[0];\n\n                        console.log('this.form.file:', this.form.file);\n                        if (this.form.file) {\n                            adddata.append('file', this.form.file);\n                        } else {\n                            this.loading = false;\n                            return this.$message.error({\n                                showClose: true,\n                                message: 'Please upload the file!',\n                                offset: 70\n                            });\n                        }\n\n                        for (var [a, b] of adddata.entries()) {\n                            console.log(a, b);\n                        }\n                        const { data: data } = await this.$http({\n                            url: '/task/',\n                            data: adddata,\n                            method: 'post'\n                        });\n                        if (data.code !== 20000) {\n                            this.loading = false;\n                            return this.$message.error({\n                                showClose: true,\n                                message: 'Failed to add task!: ' + data.msg,\n                                offset: 70\n                            });\n                        }\n                        this.$message.success({\n                            showClose: true,\n                            message: 'Submitted successfully!',\n                            offset: 70\n                        });\n                        this.reload();\n                    } else {\n                        this.loading = false;\n                    }\n                });\n        },\n        async methodChanged(method_id) {\n            this.params_id = method_id;\n            this.form.augmentation_method = this.params_id;\n            console.log('this.params_id:', this.params_id);\n            this.is_available_to_submit = false;\n        },\n        changeAgentContent() {\n            const selectedFile = this.$refs.lidar_t_file_ref.files[0];\n\n            let fileName = selectedFile.name;\n            let pos = fileName.lastIndexOf('.');\n            let lastName = fileName.substring(pos, fileName.length);\n            console.log(lastName, lastName.toLowerCase());\n            console.log('lastName:', lastName);\n            if (lastName.toLowerCase() !== '.zip') {\n                this.$message.error({\n                    showClose: true,\n                    message: 'The type of uploaded file is limited to \".zip\".',\n                    offset: 70\n                });\n                // this.$refs.lidar_t_file_ref.clearFiles;\n                this.$refs.lidar_t_file_ref.value = ''; // 清空file文件\n                return false;\n            }\n\n            this.form.file = selectedFile;\n            document.getElementById('inputFileAgent').value = document.getElementById('inputFile').value;\n        },\n        fileLoad() {\n            const selectedFile = this.$refs.lidar_t_file_ref.files[0];\n            // console.log('selectedFile:', selectedFile);\n            if (selectedFile == undefined) {\n                document.getElementById('inputFileAgent').value = '';\n            } else {\n                let fileName = selectedFile.name;\n                let pos = fileName.lastIndexOf('.');\n                let lastName = fileName.substring(pos, fileName.length);\n                console.log(lastName, lastName.toLowerCase());\n                console.log('lastName:', lastName);\n                if (lastName.toLowerCase() !== '.zip') {\n                    this.$message.error({\n                        showClose: true,\n                        message: 'The type of uploaded file is limited to \".zip\".',\n                        offset: 70\n                    });\n                    // this.$refs.lidar_t_file_ref.clearFiles;\n                    this.$refs.lidar_t_file_ref.value = ''; // 清空file文件\n                    return false;\n                }\n\n                this.form.file = selectedFile;\n                var str = document.getElementById('filetemp').value;\n                str = str.split('\\\\')[str.split('\\\\').length - 1];\n                document.getElementById('inputFileAgent').value = str;\n            }\n        },\n        clickLoad() {\n            console.log('use clickLoad');\n            this.$refs.refFile.dispatchEvent(new MouseEvent('click'));\n        },\n        async getTypeList() {\n            const { data: data } = await this.$http.get('/augmentation_type/');\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: 'Failed to get task list!: ' + data.msg,\n                    offset: 70\n                });\n            }\n\n            this.typeList = data.data;\n            console.log('data.data:', data.data);\n        },\n        clickfiletemp() {\n            document.getElementById('filetemp').click();\n        }\n    },\n    async mounted() {\n        this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n\n        var id = 2;\n        const { data: data } = await this.$http.get('/augmentation_method/?augmentation_type=' + id);\n        if (data.code === 45000) {\n            return this.$message.error({\n                showClose: true,\n                message: '该生成类型暂无方法！',\n                offset: 70\n            });\n        }\n        if (data.code !== 20000) {\n            return this.$message.error({\n                showClose: true,\n                message: '查询生成方法失败！',\n                offset: 70\n            });\n        }\n        this.methods = data.data.filter(item => {\n            console.log('item:', item);\n            return item.augmentation_type_id === id;\n        });\n        console.log('this.methods:', this.methods);\n    },\n    created() {\n        this.getTypeList();\n    }\n};\n",{"version":3,"sources":["Lidar_T_AugTaskAdd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6RA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Lidar_T_AugTaskAdd.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item> <i class=\"el-icon-s-help\"></i> Data Augmentation </el-breadcrumb-item>\n                <el-breadcrumb-item>Task Addition</el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <div class=\"container\">\n            <div class=\"form-box\">\n                <el-form ref=\"formRef\" :model=\"form\" :rules=\"rulesList\" label-width=\"180px\">\n                    <el-form-item label=\"Task Name\" prop=\"name\">\n                        <el-input v-model=\"form.name\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"Object addition method\" prop=\"name\">\n                        <div style=\"float: left; margin-right: 5px; \">\n                            <el-radio v-model=\"params_id\" label=\"10\" border @change=\"methodChanged\">User-defined</el-radio>\n                            <el-radio v-model=\"params_id\" label=\"12\" border @change=\"methodChanged\"\n                                >Automatically defined by PointMe</el-radio\n                            >\n                        </div>\n\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"Description of object addition method:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"Please note: In the process of extreme scene augmentation, if you use the 'User-defined' mode, when the provided scene is not enough to expand to the number of objects you specify, PointMe will return to the scene that can be expanded The maximum number, which may be 0 (that is, the scene cannot be expanded).\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                                <!-- <el-button slot=\"reference\">hover 激活</el-button> -->\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <!-- <el-form-item label=\"极端场景类型\" prop=\"augmentation_method\">\n                        <div style=\"float: left; margin-right: 5px; \">\n                            <el-select\n                                v-model=\"form.augmentation_method\"\n                                placeholder=\"请选择生成方法\"\n                                @change=\"methodChanged\"\n                                style=\"width: 220px\"\n                            >\n                                <el-option v-for=\"item in this.methods\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"> </el-option>\n                            </el-select>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"生成方法说明:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"请注意：在场景物体添加蜕变功能中，若您所提供的场景不足以达到您所指定的扩增数量时，算法会返回该场景所能扩增的最大数量，其可能为0（即该场景无法扩增）。极端场景蜕变功能同理。\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item> -->\n                    <el-form-item v-if=\"params_id == 10 || params_id == 11 || params_id == 12\" label=\"Urgency level\">\n                        <div style=\"float: left; margin-right: 5px; width:300px\">\n                            <!-- <el-input type=\"text\" v-model=\"form.urgency_level\"></el-input> -->\n                            <el-slider v-model=\"form.urgency_level\" :min=\"1\" :max=\"5\" :step=\"1\" :marks=\"mark_group.marks1_5\"> </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"Description of Urgency level:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"The urgency of the task, the system will schedule the task according to the urgency level.\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item label=\"Select the type of trucks\" v-if=\"params_id == 10\" prop=\"aug_object_Truck\">\n                        <div style=\"float: left; margin-right: 5px\">\n                            <el-select v-model=\"form.aug_object_Truck\" placeholder=\"Select the type of trucks\">\n                                <el-option v-for=\"item in truck_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                                </el-option>\n                            </el-select>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"Select the type of trucks:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"Select different truck models as added objects. Different trucks have different length, width, height, point cloud number and shape. At present, three truck models are provided.\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                                <!-- <el-button slot=\"reference\">hover 激活</el-button> -->\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item label=\"Set the number of trucks\" v-if=\"params_id == 10 && form.aug_object_Truck\" prop=\"aug_count_Truck\">\n                        <!-- <el-input type=\"text\" v-model=\"form.aug_count_Truck\" placeholder=\"请输入生成卡车数量\"></el-input> -->\n                        <el-slider v-model=\"form.aug_count_Truck\" show-input> </el-slider>\n                    </el-form-item>\n\n                    <el-form-item label=\"Select the type of cars\" v-if=\"params_id == 10\" prop=\"aug_object_Car\">\n                        <div style=\"float: left; margin-right: 5px\">\n                            <el-select v-model=\"form.aug_object_Car\" placeholder=\"Select the type of cars\">\n                                <el-option v-for=\"item in car_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                                </el-option>\n                            </el-select>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"Select the type of cars:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"Select different car models as added objects. Different cars have different length, width, height, point cloud number and shape. At present, only one car model is provided.\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                                <!-- <el-button slot=\"reference\">hover 激活</el-button> -->\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item label=\"Set the number of cars\" v-if=\"params_id == 10 && form.aug_object_Car\" prop=\"aug_count_Car\">\n                        <!-- <el-input type=\"text\" v-model=\"form.aug_count_Car\" placeholder=\"请输入生成轿车数量\"></el-input> -->\n                        <el-slider v-model=\"form.aug_count_Car\" show-input> </el-slider>\n                    </el-form-item>\n\n                    <el-form-item label=\"Select the type of cyclists\" v-if=\"params_id == 10\" prop=\"aug_object_Cyclist\">\n                        <div style=\"float: left; margin-right: 5px\">\n                            <el-select v-model=\"form.aug_object_Cyclist\" placeholder=\"Select the type of cyclists\">\n                                <el-option v-for=\"item in cyclist_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                                </el-option>\n                            </el-select>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"Select the type of cyclists:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"Choose different bicycle models as added objects. Different bicycles have different length, width, height, point cloud number and shape. At present, two bicycle models are provided\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                                <!-- <el-button slot=\"reference\">hover 激活</el-button> -->\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item\n                        label=\"Set the number of cyclists\"\n                        v-if=\"params_id == 10 && form.aug_object_Cyclist\"\n                        prop=\"aug_count_Cyclist\"\n                    >\n                        <!-- <el-input type=\"text\" v-model=\"form.aug_count_Cyclist\" placeholder=\"请输入生成自行车数量\"></el-input> -->\n                        <el-slider v-model=\"form.aug_count_Cyclist\" show-input> </el-slider>\n                    </el-form-item>\n\n                    <el-form-item label=\"物体旋转角度\" v-if=\"params_id == 11\" prop=\"angle\">\n                        <!-- <div style=\"float: left; margin-right: 5px; width: 100px\">\n                            <el-slider v-model=\"form.angle\" show-input :min=\"-180\" :max=\"180\" style=\"width: 100px\"> </el-slider>\n                        </div> -->\n                        <!-- <el-input type=\"number\" v-model=\"form.angle\" placeholder=\"请输入物体旋转角度(-180~180)\"></el-input> -->\n                        <div style=\"float: left; margin-right: 5px; width:400px\">\n                            <el-slider v-model=\"form.angle\" show-input :min=\"-180\" :max=\"180\" :step=\"0.5\" :marks=\"marks\"> </el-slider>\n                        </div>\n\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"物体旋转角度:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"对场景中标签所含的所有物体进行旋转角度的选择\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                                <!-- <el-button slot=\"reference\">hover 激活</el-button> -->\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"params_id == 12\" label=\"Add trucks to scene\">\n                        <div style=\"float: left; margin-right: 5px\">\n                            <el-switch v-model=\"form.aug_Truck\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"Add trucks to scene:\"\n                                width=\"210\"\n                                trigger=\"hover\"\n                                content=\"Set whether the generated extreme scene contains a large number of trucks.\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                                <!-- <el-button slot=\"reference\">hover 激活</el-button> -->\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"params_id == 12\" label=\"Add cars to scene\">\n                        <div style=\"float: left; margin-right: 5px\">\n                            <el-switch v-model=\"form.aug_Car\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"Add cars to scene:\"\n                                width=\"210\"\n                                trigger=\"hover\"\n                                content=\"Set whether the generated extreme scene contains a large number of cars.\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                                <!-- <el-button slot=\"reference\">hover 激活</el-button> -->\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"params_id == 12\" label=\"Add cyclists to scene\">\n                        <div style=\"float: left; margin-right: 5px\">\n                            <el-switch v-model=\"form.aug_Cyclist\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"Add cyclists to scene:\"\n                                width=\"210\"\n                                trigger=\"hover\"\n                                content=\"Set whether the generated extreme scene contains a large number of cyclists.\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                                <!-- <el-button slot=\"reference\">hover 激活</el-button> -->\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"params_id == 10 || params_id == 11 || params_id == 12\" label=\"Upload file\">\n                        <input type=\"file\" id=\"filetemp\" prop=\"form.file\" ref=\"lidar_t_file_ref\" style=\"display:none\" @change=\"fileLoad\" />\n                        <!-- <input type=\"file\" id=\"filetemp\" prop=\"form.file\" name=\"filetemp\" style=\"display:none\" @change=\"fileLoad\" />\n\n                        <input type=\"text\" value=\"\" disabled id=\"inputFileAgent\" />\n                        <input type=\"button\" @click=\"document.getElementById('filetemp').click()\" value=\"Browse...\" /> -->\n                        <!-- <input type=\"file\" id=\"inputFile\" name=\"inputFile\" style=\"display:none\" @change=\"changeAgentContent()\" /> -->\n                        <input type=\"text\" value=\"\" disabled id=\"inputFileAgent\" />\n                        <input type=\"button\" @click=\"clickfiletemp\" value=\"Browse...\" />\n                        <el-popover\n                            placement=\"right-start\"\n                            title=\"The type of uploaded file is limited to '.zip'. The file structure is as follows:\"\n                            width=\"200\"\n                            trigger=\"hover\"\n                            style=\"white-space: pre-wrap\"\n                        >\n                            <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            <img src=\"../../assets/lidar_t_upload_file.jpg\" class=\"user-avator\" alt />\n                        </el-popover>\n                        <br />\n                    </el-form-item>\n\n                    <el-form-item>\n                        <el-button\n                            type=\"primary\"\n                            :disabled=\"!params_id\"\n                            @click=\"onSubmit\"\n                            :loading=\"loading\"\n                            element-loading-spinner=\"el-icon-loading\"\n                            element-loading-text=\"Submitting\"\n                            >Submit Form</el-button\n                        >\n                        <!-- <el-button type=\"primary\" :disabled=\"is_available_to_submit\" @click=\"onSubmit\">表单提交</el-button> -->\n                    </el-form-item>\n                </el-form>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport qs from 'qs';\nfunction changeAgentContent() {\n    const selectedFile = this.$refs.lidar_t_file_ref.files[0];\n\n    let fileName = selectedFile.name;\n    let pos = fileName.lastIndexOf('.');\n    let lastName = fileName.substring(pos, fileName.length);\n    console.log(lastName, lastName.toLowerCase());\n    console.log('lastName:', lastName);\n    if (lastName.toLowerCase() !== '.zip') {\n        this.$message.error({\n            showClose: true,\n            message: '文件必须为 .zip 类型',\n            offset: 70\n        });\n        // this.$refs.lidar_t_file_ref.clearFiles;\n        this.$refs.lidar_t_file_ref.value = ''; // 清空file文件\n        return false;\n    }\n\n    this.form.file = selectedFile;\n    document.getElementById('inputFileAgent').value = document.getElementById('inputFile').value;\n}\nexport default {\n    name: 'baseform',\n    inject: ['reload'],\n    data() {\n        const isNotNag_int = (rule, value, callback) => {\n            const boolean = new RegExp('^[1-9][0-9]*$').test(value);\n            if (value !== '0' && !boolean) {\n                callback(new Error('Please enter a non negative integer'));\n            } else {\n                callback();\n            }\n        };\n        const generate_per_file_and_paramsRule = (rule, value, callback) => {\n            if (value < 1) {\n                callback(new Error('Only integers greater than or equal to 1 can be entered'));\n            } else {\n                callback();\n            }\n        };\n        const isNum = (rule, value, callback) => {\n            const age = /^[0-9]*$/;\n            if (!age.test(value)) {\n                callback(new Error('Please enter a non negative integer'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag = (rule, value, callback) => {\n            if (value < 0) {\n                callback(new Error('Please enter a non negative integer'));\n            } else {\n                callback();\n            }\n        };\n        const epsilonRule = (rule, value, callback) => {\n            var list = value.split(',');\n            for (var i in list) {\n                if (!typeof parseFloat(list[i]) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n                    callback(new Error('请填写合理的非负数字列表'));\n                } else {\n                    callback();\n                }\n            }\n        };\n        return {\n            radio1: '1',\n            marks: {\n                0: '0'\n            },\n            mark_group: {\n                marks1_2: {\n                    1: '1',\n                    2: '2'\n                },\n                marks0001_2: {\n                    0.001: '0.001',\n                    2: '2'\n                },\n                marks0001_1: {\n                    0.001: '0.001',\n                    1: '1'\n                },\n                marks1_100: {\n                    1: '1',\n                    100: {\n                        style: {\n                            width: '30px'\n                        },\n                        label: '100'\n                    }\n                },\n                marks1_1000: {\n                    1: '1',\n                    1000: {\n                        style: {\n                            width: '40px'\n                        },\n                        label: '1000'\n                    }\n                },\n                marks1_15000: {\n                    1: '1',\n                    15000: {\n                        style: {\n                            width: '50px'\n                        },\n                        label: '15000'\n                    }\n                },\n                marks0_5: {\n                    0: '0',\n                    5: '5'\n                },\n                marks1_5: {\n                    1: '1',\n                    5: '5'\n                }\n            },\n            value: 0,\n            loading: false,\n            form: {\n                name: '',\n                augmentation_method: null,\n                // aug_index: null,\n                aug_object_Car: null,\n                aug_count_Car: 0,\n                aug_object_Truck: null,\n                aug_count_Truck: 0,\n                aug_object_Cyclist: null,\n                aug_count_Cyclist: 0,\n\n                angle: 0,\n\n                aug_Car: true,\n                aug_Truck: true,\n                aug_Cyclist: true,\n\n                master: this.$store.state.userId,\n                urgency_level: 0,\n                file: {}\n            },\n            methods: [],\n            truck_options: [\n                {\n                    value: '1',\n                    label: 'Type 1'\n                },\n                {\n                    value: '2',\n                    label: 'Type 2'\n                },\n                {\n                    value: '3',\n                    label: 'Type 3'\n                }\n            ],\n            car_options: [\n                {\n                    value: '1',\n                    label: 'Type 1'\n                }\n            ],\n            cyclist_options: [\n                {\n                    value: '1',\n                    label: 'Type 1'\n                },\n                {\n                    value: '2',\n                    label: 'Type 2'\n                }\n            ],\n            fileList: [],\n            typeList: [],\n            params_id: 0,\n            is_available_to_submit: true,\n            rules1: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: epsilonRule, trigger: 'blur' }\n                ],\n                generate_per_file_and_params: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ]\n                // urgency_level: [\n                //     { required: true, message: '请输入数字', trigger: 'blur' },\n                //     { validator: isNotNag_int, trigger: 'blur' }\n                // ]\n            },\n            rules2: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon2: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ]\n            },\n            rules3: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon3: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                boundary_constraint: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ]\n            }\n        };\n    },\n    computed: {\n        rulesList: function() {\n            if (this.params_id === 10) {\n                return this.rules1;\n            } else if (this.params_id === 11) {\n                return this.rules2;\n            } else if (this.params_id === 12) {\n                return this.rules3;\n            }\n        }\n    },\n    methods: {\n        trim(str) {\n            return str.replace(/(^s*)|(s*$)/g, '');\n        },\n        onSubmit() {\n            this.loading = true;\n            (this.form.master = this.$store.state.userId),\n                this.$refs.formRef.validate(async valid => {\n                    if (valid) {\n                        this.form.augmentation_method = parseInt(this.params_id);\n                        console.log('this.form.augmentation_method:', this.form.augmentation_method);\n                        if (this.form.augmentation_method === '') {\n                            this.loading = false;\n                            return this.$message.error({\n                                showClose: true,\n                                message: 'Please select an object addition method method!',\n                                offset: 70\n                            });\n                        }\n\n                        var adddata = new FormData();\n                        if (this.form.name) {\n                            adddata.append('name', this.form.name);\n                        }\n                        adddata.append('augmentation_method', this.form.augmentation_method);\n                        adddata.append('master', this.form.master);\n                        adddata.append('urgency_level', this.form.urgency_level + '');\n\n                        var temp_params = {};\n                        if (this.form.augmentation_method === 10) {\n                            if (this.form.aug_count_Car + this.form.aug_count_Truck + this.form.aug_count_Cyclist === 0) {\n                                this.loading = false;\n                                return this.$message.error({\n                                    showClose: true,\n                                    message: 'Added quantity cannot be 0!',\n                                    offset: 70\n                                });\n                            }\n                            temp_params = {\n                                aug_object_car: this.form.aug_object_Car ? this.form.aug_object_Car : '1',\n                                aug_object_truck: this.form.aug_object_Truck ? this.form.aug_object_Truck : '1',\n                                aug_object_cyclist: this.form.aug_object_Cyclist ? this.form.aug_object_Cyclist : '1',\n                                aug_count_car: this.form.aug_count_Car + '',\n                                aug_count_truck: this.form.aug_count_Truck + '',\n                                aug_count_cyclist: this.form.aug_count_Cyclist + ''\n                            };\n                        } else if (this.form.augmentation_method === 11) {\n                            if (this.form.angle === 0) {\n                                this.loading = false;\n                                return this.$message.error({\n                                    showClose: true,\n                                    message: '旋转角度不可为0！',\n                                    offset: 70\n                                });\n                            }\n                            temp_params = {\n                                angle: this.form.angle + ''\n                            };\n                        } else if (this.form.augmentation_method === 12) {\n                            if (!this.form.aug_Car && !this.form.aug_Truck && !this.form.aug_Cyclist) {\n                                this.loading = false;\n                                return this.$message.error({\n                                    showClose: true,\n                                    message: 'Please select the object to add!',\n                                    offset: 70\n                                });\n                            }\n                            temp_params = {\n                                aug_Car: this.form.aug_Car,\n                                aug_Truck: this.form.aug_Truck,\n                                aug_Cyclist: this.form.aug_Cyclist\n                            };\n                        }\n\n                        temp_params = JSON.stringify(temp_params);\n                        adddata.append('params', temp_params);\n                        this.form.file = document.getElementById('filetemp').files[0];\n\n                        console.log('this.form.file:', this.form.file);\n                        if (this.form.file) {\n                            adddata.append('file', this.form.file);\n                        } else {\n                            this.loading = false;\n                            return this.$message.error({\n                                showClose: true,\n                                message: 'Please upload the file!',\n                                offset: 70\n                            });\n                        }\n\n                        for (var [a, b] of adddata.entries()) {\n                            console.log(a, b);\n                        }\n                        const { data: data } = await this.$http({\n                            url: '/task/',\n                            data: adddata,\n                            method: 'post'\n                        });\n                        if (data.code !== 20000) {\n                            this.loading = false;\n                            return this.$message.error({\n                                showClose: true,\n                                message: 'Failed to add task!: ' + data.msg,\n                                offset: 70\n                            });\n                        }\n                        this.$message.success({\n                            showClose: true,\n                            message: 'Submitted successfully!',\n                            offset: 70\n                        });\n                        this.reload();\n                    } else {\n                        this.loading = false;\n                    }\n                });\n        },\n        async methodChanged(method_id) {\n            this.params_id = method_id;\n            this.form.augmentation_method = this.params_id;\n            console.log('this.params_id:', this.params_id);\n            this.is_available_to_submit = false;\n        },\n        changeAgentContent() {\n            const selectedFile = this.$refs.lidar_t_file_ref.files[0];\n\n            let fileName = selectedFile.name;\n            let pos = fileName.lastIndexOf('.');\n            let lastName = fileName.substring(pos, fileName.length);\n            console.log(lastName, lastName.toLowerCase());\n            console.log('lastName:', lastName);\n            if (lastName.toLowerCase() !== '.zip') {\n                this.$message.error({\n                    showClose: true,\n                    message: 'The type of uploaded file is limited to \".zip\".',\n                    offset: 70\n                });\n                // this.$refs.lidar_t_file_ref.clearFiles;\n                this.$refs.lidar_t_file_ref.value = ''; // 清空file文件\n                return false;\n            }\n\n            this.form.file = selectedFile;\n            document.getElementById('inputFileAgent').value = document.getElementById('inputFile').value;\n        },\n        fileLoad() {\n            const selectedFile = this.$refs.lidar_t_file_ref.files[0];\n            // console.log('selectedFile:', selectedFile);\n            if (selectedFile == undefined) {\n                document.getElementById('inputFileAgent').value = '';\n            } else {\n                let fileName = selectedFile.name;\n                let pos = fileName.lastIndexOf('.');\n                let lastName = fileName.substring(pos, fileName.length);\n                console.log(lastName, lastName.toLowerCase());\n                console.log('lastName:', lastName);\n                if (lastName.toLowerCase() !== '.zip') {\n                    this.$message.error({\n                        showClose: true,\n                        message: 'The type of uploaded file is limited to \".zip\".',\n                        offset: 70\n                    });\n                    // this.$refs.lidar_t_file_ref.clearFiles;\n                    this.$refs.lidar_t_file_ref.value = ''; // 清空file文件\n                    return false;\n                }\n\n                this.form.file = selectedFile;\n                var str = document.getElementById('filetemp').value;\n                str = str.split('\\\\')[str.split('\\\\').length - 1];\n                document.getElementById('inputFileAgent').value = str;\n            }\n        },\n        clickLoad() {\n            console.log('use clickLoad');\n            this.$refs.refFile.dispatchEvent(new MouseEvent('click'));\n        },\n        async getTypeList() {\n            const { data: data } = await this.$http.get('/augmentation_type/');\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: 'Failed to get task list!: ' + data.msg,\n                    offset: 70\n                });\n            }\n\n            this.typeList = data.data;\n            console.log('data.data:', data.data);\n        },\n        clickfiletemp() {\n            document.getElementById('filetemp').click();\n        }\n    },\n    async mounted() {\n        this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n\n        var id = 2;\n        const { data: data } = await this.$http.get('/augmentation_method/?augmentation_type=' + id);\n        if (data.code === 45000) {\n            return this.$message.error({\n                showClose: true,\n                message: '该生成类型暂无方法！',\n                offset: 70\n            });\n        }\n        if (data.code !== 20000) {\n            return this.$message.error({\n                showClose: true,\n                message: '查询生成方法失败！',\n                offset: 70\n            });\n        }\n        this.methods = data.data.filter(item => {\n            console.log('item:', item);\n            return item.augmentation_type_id === id;\n        });\n        console.log('this.methods:', this.methods);\n    },\n    created() {\n        this.getTypeList();\n    }\n};\n</script>\n<style scoped>\n.marginRight {\n    margin-right: 10px !important;\n}\n</style>\n"]}]}