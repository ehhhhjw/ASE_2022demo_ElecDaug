{"remainingRequest":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\Lidar_T_AugTaskList.vue?vue&type=style&index=0&id=6a2fcf74&scoped=true&lang=css&","dependencies":[{"path":"E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\Lidar_T_AugTaskList.vue","mtime":1628741922000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.juzhog {\n    width: 600px;\n    height: 530px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -300px;\n    margin-top: -265px;\n    background-color: #fff;\n}\n.search {\n    margin-bottom: 10px !important;\n}\n.right {\n    margin-right: 5px !important;\n}\n.right10 {\n    margin-right: 10px !important;\n}\n.user-info-list {\n    padding-left: 10px;\n    background-color: rgba(255, 255, 255, 0.4);\n    font-size: 14px;\n    color: #000;\n    line-height: 25px;\n}\n.el-input__inner {\n    width: 600px !important;\n}\n.view1 {\n    width: 600px;\n    height: 530px;\n    margin: 0 10px 0 0;\n    background-color: #fff;\n    float: left;\n}\n.el-dialog {\n    display: flex;\n    flex-direction: column;\n    margin: 0 !important;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    max-height: calc(100% - 30px);\n    max-width: calc(100% - 30px);\n}\n.el-dialog .el-dialog__body {\n    flex: 1;\n    overflow: auto;\n}\n/* .inlineBlock {\n    display: inline-block;\n} */\n",{"version":3,"sources":["Lidar_T_AugTaskList.vue"],"names":[],"mappingsg4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Lidar_T_AugTaskList.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item> <i class=\"el-icon-s-help\"></i> 激光雷达蜕变 </el-breadcrumb-item>\n                <el-breadcrumb-item>生成任务查询</el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <el-card>\n            <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n                <el-tab-pane label=\"本用户\" name=\"self\">\n                    <el-row :gutter=\"20\" class=\"search\">\n                        <el-col :span=\"20\">\n                            <el-form :inline=\"true\" :model=\"formInline_Self\" class=\"demo-form-inline\">\n                                <el-form-item label=\"查询方式\">\n                                    <el-select\n                                        v-model=\"formInline_Self.searchType\"\n                                        clearable\n                                        placeholder=\"请选择查询方式\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @clear=\"getTaskList_Self()\"\n                                        @change=\"pageReflash_Self()\"\n                                    >\n                                        <el-option label=\"生成方法\" value=\"生成方法\"></el-option>\n                                        <el-option label=\"任务名称\" value=\"任务名称\"></el-option>\n                                        <el-option label=\"任务id\" value=\"任务id\"></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item v-show=\"formInline_Self.searchType == '生成方法'\" label=\"生成方法\">\n                                    <el-select\n                                        v-model=\"generate_func_self\"\n                                        placeholder=\"请选择生成方法\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @change=\"\n                                            pageReflash_Self();\n                                            SearchTask_Self();\n                                        \"\n                                    >\n                                        <el-option\n                                            v-for=\"item in generate_func_list\"\n                                            :key=\"item.name\"\n                                            :label=\"item.name\"\n                                            :value=\"item.id\"\n                                        ></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item\n                                    label=\"查询内容\"\n                                    v-show=\"formInline_Self.searchType != '生成方法' && formInline_Self.searchType != ''\"\n                                >\n                                    <el-input\n                                        placeholder=\"请输入内容\"\n                                        v-model=\"formInline_Self.searchTaskInfo\"\n                                        clearable\n                                        @clear=\"handleSelectClear\"\n                                    >\n                                        <el-button\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(0);\n                                                pageReflash_Self();\n                                                SearchTask_Self();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>精确</el-button\n                                        >\n                                        <el-button\n                                            v-if=\"formInline_Self.searchType != '任务id'\"\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(1);\n                                                pageReflash_Self();\n                                                SearchTask_Self();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>模糊</el-button\n                                        >\n                                    </el-input>\n                                </el-form-item>\n                            </el-form>\n                        </el-col>\n                    </el-row>\n\n                    <v-table\n                        :taskList=\"this.taskList_Self\"\n                        :is_root=\"'0'\"\n                        :show_point_preview=\"1\"\n                        @getList=\"handleGetList\"\n                        @delete=\"removeTaskById\"\n                        @MethodDetail=\"MethodDetail\"\n                        @methodDialogClose=\"methodDialogClose\"\n                        @showEditDialog=\"showEditDialog\"\n                        @editDialogClosed=\"editDialogClosed\"\n                        @originalfileDownload=\"originalfileDownloadTemp\"\n                        @generatefileDownload=\"generatefileDownloadTemp\"\n                        @point_cloud_preview=\"point_cloud_preview\"\n                    ></v-table>\n\n                    <el-pagination\n                        @size-change=\"handleSizeChange_Self\"\n                        @current-change=\"handleCurrentChange_Self\"\n                        :current-page.sync=\"queryInfo_Self.page\"\n                        :page-size=\"10\"\n                        layout=\"prev, pager, next\"\n                        :total=\"total_Self\"\n                    >\n                    </el-pagination>\n                </el-tab-pane>\n                <el-tab-pane label=\"所有用户\" name=\"all\" v-if=\"this.userRight === '超级管理员'\">\n                    <el-row :gutter=\"20\" class=\"search\">\n                        <el-col :span=\"20\">\n                            <el-form :inline=\"true\" :model=\"formInline_All\" class=\"demo-form-inline\">\n                                <el-form-item label=\"查询方式\">\n                                    <el-select\n                                        v-model=\"formInline_All.searchType\"\n                                        placeholder=\"请选择查询方式\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        clearable\n                                        @clear=\"\n                                            getTaskList_All();\n                                            clearSecondSelect_All();\n                                        \"\n                                        @change=\"pageReflash_All()\"\n                                    >\n                                        <el-option label=\"生成方法\" value=\"生成方法\"></el-option>\n                                        <el-option label=\"任务名称\" value=\"任务名称\"></el-option>\n                                        <el-option label=\"任务id\" value=\"任务id\"></el-option>\n                                        <el-option label=\"用户id\" value=\"用户id\"></el-option>\n                                        <el-option label=\"用户名\" value=\"用户名\"></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item v-show=\"formInline_All.searchType == '生成方法'\" label=\"生成方法\">\n                                    <el-select\n                                        v-model=\"generate_func_all\"\n                                        placeholder=\"请选择生成方法\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @change=\"\n                                            pageReflash_All();\n                                            getTaskList_All();\n                                        \"\n                                    >\n                                        <el-option\n                                            v-for=\"item in generate_func_list\"\n                                            :key=\"item.name\"\n                                            :label=\"item.name\"\n                                            :value=\"item.id\"\n                                        ></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item\n                                    v-show=\"formInline_All.searchType != '生成方法' && formInline_All.searchType != ''\"\n                                    label=\"查询内容\"\n                                >\n                                    <el-input\n                                        placeholder=\"请输入内容\"\n                                        v-model=\"formInline_All.searchTaskInfo\"\n                                        clearable\n                                        @clear=\"getTaskList_All\"\n                                    >\n                                        <el-button\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(0);\n                                                getTaskList_All();\n                                                pageReflash_All();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>精确</el-button\n                                        >\n                                        <el-button\n                                            v-if=\"\n                                                formInline_All.searchType != '任务id' &&\n                                                    formInline_All.searchType != '用户id' &&\n                                                    formInline_All.searchType != '用户名'\n                                            \"\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(1);\n                                                getTaskList_All();\n                                                pageReflash_All();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>模糊</el-button\n                                        >\n                                    </el-input>\n                                </el-form-item>\n                            </el-form>\n                        </el-col>\n                    </el-row>\n                    <v-table\n                        :taskList=\"this.taskList_All\"\n                        :is_root=\"'1'\"\n                        :show_point_preview=\"1\"\n                        @getList=\"handleGetList\"\n                        @delete=\"removeTaskById\"\n                        @MethodDetail=\"MethodDetail\"\n                        @methodDialogClose=\"methodDialogClose\"\n                        @showEditDialog=\"showEditDialog\"\n                        @editDialogClosed=\"editDialogClosed\"\n                        @originalfileDownload=\"originalfileDownloadTemp\"\n                        @generatefileDownload=\"generatefileDownloadTemp\"\n                        @point_cloud_preview=\"point_cloud_preview\"\n                    ></v-table>\n                    <el-pagination\n                        @size-change=\"handleSizeChange_All\"\n                        @current-change=\"handleCurrentChange_All\"\n                        :current-page.sync=\"queryInfo_All.page\"\n                        :page-size=\"10\"\n                        layout=\"prev, pager, next\"\n                        :total=\"total_All\"\n                    >\n                    </el-pagination>\n                </el-tab-pane>\n            </el-tabs>\n        </el-card>\n        <el-dialog title=\"编辑任务信息\" :visible.sync=\"editDialogSelfVisible\" width=\"50%\" @closed=\"editDialogClosed\">\n            <el-form :model=\"editForm_Self\" :rules=\"rulesList\" ref=\"editFormRef\" label-width=\"110px\" style=\"width: 90%\">\n                <el-form-item label=\"任务id\">\n                    <el-input v-model=\"editForm_Self.id\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"任务名\" prop=\"name\">\n                    <el-input v-model=\"editForm_Self.name\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"紧急等级\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.urgency_level\"></el-input> -->\n                    <el-slider v-model=\"editForm_Self.urgency_level\" :min=\"1\" :max=\"5\" :step=\"1\" :marks=\"mark_group.marks1_5\"> </el-slider>\n                </el-form-item>\n\n                <el-form-item label=\"生成卡车类型\" v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达'\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.epsilon\"></el-input> -->\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-select v-model=\"editForm_Self.aug_object_truck\" placeholder=\"请选择生成卡车类型\" @change=\"showeditForm\">\n                            <el-option v-for=\"item in truck_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"> </el-option>\n                        </el-select>\n                    </div>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"生成卡车数量\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达' && editForm_Self.aug_object_truck\"\n                    prop=\"aug_count_Truck\"\n                >\n                    <!-- <el-input type=\"text\" v-model=\"form.aug_count_Truck\" placeholder=\"请输入生成卡车数量\"></el-input> -->\n                    <el-slider v-model=\"editForm_Self.aug_count_truck\" show-input> </el-slider>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"生成轿车类型\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达'\"\n                    prop=\"aug_object_Car\"\n                >\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-select v-model=\"editForm_Self.aug_object_car\" placeholder=\"请选择生成轿车类型\">\n                            <el-option v-for=\"item in car_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"> </el-option>\n                        </el-select>\n                    </div>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"生成轿车数量\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达' && editForm_Self.aug_object_car\"\n                    prop=\"aug_count_Car\"\n                >\n                    <!-- <el-input type=\"text\" v-model=\"form.aug_count_Car\" placeholder=\"请输入生成轿车数量\"></el-input> -->\n                    <el-slider v-model=\"editForm_Self.aug_count_car\" show-input> </el-slider>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"生成自行车类型\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达'\"\n                    prop=\"aug_object_Cyclist\"\n                >\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-select v-model=\"editForm_Self.aug_object_cyclist\" placeholder=\"请选择生成自行车类型\">\n                            <el-option v-for=\"item in cyclist_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                            </el-option>\n                        </el-select>\n                    </div>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"生成自行车数量\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达' && editForm_Self.aug_object_cyclist\"\n                    prop=\"aug_count_Cyclist\"\n                >\n                    <!-- <el-input type=\"text\" v-model=\"form.aug_count_Cyclist\" placeholder=\"请输入生成自行车数量\"></el-input> -->\n                    <el-slider v-model=\"editForm_Self.aug_count_cyclist\" show-input> </el-slider>\n                </el-form-item>\n\n                <el-form-item label=\"生成卡车类型\" v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达'\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.epsilon\"></el-input> -->\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-select v-model=\"editForm_Self.aug_object_truck\" placeholder=\"请选择生成卡车类型\" @change=\"showeditForm\">\n                            <el-option v-for=\"item in truck_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"> </el-option>\n                        </el-select>\n                    </div>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"物体旋转角度\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体旋转蜕变-激光雷达'\"\n                    prop=\"angle\"\n                >\n                    <div style=\"float: left; margin-right: 5px; width:400px\">\n                        <el-slider v-model=\"editForm_Self.angle\" show-input :min=\"-180\" :max=\"180\" :step=\"0.5\" :marks=\"marks\"> </el-slider>\n                    </div>\n                </el-form-item>\n\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === '极端场景蜕变-激光雷达'\" label=\"是否加入卡车\">\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-switch v-model=\"editForm_Self.aug_Truck\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                    </div>\n                </el-form-item>\n\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === '极端场景蜕变-激光雷达'\" label=\"是否加入轿车\">\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-switch v-model=\"editForm_Self.aug_Car\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                    </div>\n                </el-form-item>\n\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === '极端场景蜕变-激光雷达'\" label=\"是否加入自行车\">\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-switch v-model=\"editForm_Self.aug_Cyclist\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                    </div>\n                </el-form-item>\n\n                <el-form-item label=\"重新上传文件\" prop=\"file\">\n                    <input type=\"file\" id=\"filetemp\" prop=\"editForm_Self.file\" /><br />\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"editDialogSelfVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"editTaskInfo\">确 定</el-button>\n            </span>\n        </el-dialog>\n        <!-- 任务详情对话框 -->\n        <el-dialog\n            title=\"生成任务详情\"\n            :visible.sync=\"methodDialogSelfVisible\"\n            width=\"50%\"\n            body-style=\"background-color: rgba(255, 255, 255, 0.6);\"\n            @close=\"methodDialogClose\"\n            destroy-on-close\n        >\n            <div class=\"user-info-list\">\n                任务id：\n                <span>{{ methodDetail.id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务名称：\n                <span>{{ methodDetail.name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                紧急等级：\n                <span>{{ methodDetail.urgency_level }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务参数：\n                <span>{{ methodDetail.params ? methodDetail.params : '暂无' }}</span>\n            </div>\n\n            <div class=\"user-info-list\">\n                任务状态：\n                <span>{{ methodDetail.task_status }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                是否上传原型文件：\n                <span>{{ methodDetail.task_have_origin_file ? '是' : '否' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                是否生成扩增文件：\n                <span>{{ methodDetail.task_have_generate_file ? '是' : '否' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务扩增数据数量：\n                <span>{{ methodDetail.generate_data_number ? methodDetail.generate_data_number : '暂无' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务数据更新时间：\n                <span>{{ methodDetail.update_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务开始时间：\n                <span>{{ methodDetail.start_datetime ? methodDetail.start_datetime : '未开始' | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务结束时间：\n                <span>{{ methodDetail.fin_datetime ? methodDetail.start_datetime : '未结束' | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者id：\n                <span>{{ methodDetail.master_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者username：\n                <span>{{ methodDetail.master_username }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者nickname：\n                <span>{{ methodDetail.master_nickname }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者用户组：\n                <span>{{ methodDetail.master_user_group }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者加入时间：\n                <span>{{ methodDetail.master_join_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者最近一次登录时间：\n                <span>{{ methodDetail.master_last_login_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者信息更新时间：\n                <span>{{ methodDetail.master_update_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法id：\n                <span>{{ methodDetail.augmentation_method_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法名称：\n                <span>{{ methodDetail.augmentation_method_name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法的细节、介绍等：\n                <span>{{ methodDetail.augmentation_method_details }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型id：\n                <span>{{ methodDetail.augmentation_type_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型名称：\n                <span>{{ methodDetail.augmentation_type_name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型的细节、介绍等：\n                <span>{{ methodDetail.augmentation_type_details }}</span>\n            </div>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"taskException\" type=\"warning\">标记任务异常</el-button>\n                <el-button @click=\"methodDialogSelfVisible = false\">关 闭</el-button>\n            </span>\n        </el-dialog>\n        <!-- 生成点云预览 -->\n        <el-dialog\n            title=\"生成点云预览\"\n            :visible.sync=\"previewDialogVisible\"\n            width=\"1300px\"\n            height=\"630px\"\n            :before-close=\"handleClose\"\n            center\n        >\n            <div v-loading=\"this.loading\" element-loading-text=\"拼命加载中\" element-loading-spinner=\"el-icon-loading\" style=\"height: 600px\">\n                <div class=\"block\" v-if=\"!loading\">\n                    <span class=\"demonstration right\">选择对比点云</span>\n                    <el-cascader\n                        v-model=\"preview_value\"\n                        :options=\"preview_options\"\n                        :props=\"{ expandTrigger: 'hover' }\"\n                        @change=\"previewHandleChange\"\n                        style=\"width: 800px\"\n                    ></el-cascader>\n                    <el-carousel trigger=\"click\" height=\"570px\">\n                        <el-carousel-item v-for=\"item in 2\" :key=\"item\">\n                            <div v-if=\"item == 1\" id=\"preview\" class=\"juzhog\"></div>\n                            <div v-if=\"item == 2\">\n                                <div id=\"preview_original\" class=\"view1\"></div>\n                                <div id=\"preview_generate\" class=\"view1\"></div>\n                            </div>\n                        </el-carousel-item>\n                    </el-carousel>\n                </div>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport * as echarts from 'echarts';\nimport 'echarts-gl';\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport vTable from './Table.vue';\nexport default {\n    data() {\n        const isNotNag_int_urg = (rule, value, callback) => {\n            const boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n            if (value !== 0 && !boolean) {\n                callback(new Error('请输入非负整数'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag_int = (rule, value, callback) => {\n            const boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n            if (value !== '0' && !boolean) {\n                callback(new Error('请输入非负整数'));\n            } else {\n                callback();\n            }\n        };\n        const generate_per_file_and_paramsRule = (rule, value, callback) => {\n            if (value < 1) {\n                callback(new Error('只能为大于等于1整数'));\n            } else {\n                callback();\n            }\n        };\n        const isNum = (rule, value, callback) => {\n            const age = /^[0-9]*$/;\n            if (!age.test(value)) {\n                callback(new Error('只能为非负数字'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag = (rule, value, callback) => {\n            if (value < 0) {\n                callback(new Error('只能为非负数'));\n            } else {\n                callback();\n            }\n        };\n        const epsilonRule = (rule, value, callback) => {\n            value = value.replace('[', '');\n            value = value.replace(']', '');\n            value = value.replace('，', ',');\n\n            var list = value.split(',');\n            for (var i in list) {\n                if (!typeof parseFloat(list[i]) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n                    callback(new Error('请填写合理的非负数字列表'));\n                } else {\n                    callback();\n                }\n            }\n        };\n        return {\n            mark_group: {\n                mark0: {\n                    0: '0'\n                },\n                mark01_255: {\n                    0.1: '0.1',\n                    255: '255'\n                },\n                marks0_5: {\n                    0: '0',\n                    5: '5'\n                },\n                marks1_5: {\n                    1: '1',\n                    5: '5'\n                }\n            },\n            marks: {\n                0: '0'\n            },\n            truck_options: [\n                {\n                    value: '1',\n                    label: '类型1'\n                },\n                {\n                    value: '2',\n                    label: '类型2'\n                },\n                {\n                    value: '3',\n                    label: '类型3'\n                }\n            ],\n            car_options: [\n                {\n                    value: '1',\n                    label: '类型1'\n                }\n            ],\n            cyclist_options: [\n                {\n                    value: '1',\n                    label: '类型1'\n                },\n                {\n                    value: '2',\n                    label: '类型2'\n                }\n            ],\n            full_loading_flag: false,\n            generate_func_self: '',\n            generate_func_all: '',\n            generate_func_list: [],\n            queryInfo_Self: {\n                page: 1\n            },\n            taskList_Self: [],\n            total_Self: 0,\n            formInline_Self: {\n                searchType: '',\n                searchTaskInfo: ''\n            },\n            editDialogSelfVisible: false,\n            editForm_Self: {\n                task_id: 0,\n                master: this.$store.getters.userId,\n                name: '',\n                params: '',\n                file: {},\n                augmentation_method_name: '',\n                aug_object_truck: null,\n                aug_object_car: null,\n                aug_object_cyclist: null\n            },\n            editFormSelfRules: {\n                name: [{ required: true, message: '请输入任务名', trigger: 'blur' }]\n            },\n            queryInfo_All: {\n                page: 1\n            },\n            taskList_All: [],\n            total_All: 0,\n            formInline_All: {\n                searchType: '',\n                searchTaskInfo: ''\n            },\n            editDialogAllVisible: false,\n            editForm_All: {},\n            editFormAllRules: {\n                name: [{ required: true, message: '请输入任务名', trigger: 'blur' }]\n            },\n            FuzzySearch: 1,\n            activeName: 'self',\n            taskList_All: [],\n            userRight: '',\n            methodDialogSelfVisible: false,\n            methodDetail: [],\n            mohu: true,\n            fileName: '',\n            preview_value: [],\n            preview_options: [],\n            previewDialogVisible: false,\n            loading: true,\n            original_files_zip: null,\n            generate_files_zip: null,\n            originalPointCloudData: [],\n            generatePointCloudData: [],\n            originalLabelData: [],\n            generateLabelData: [],\n            maxAxisValue: -10000,\n            minAxisValue: 10000,\n            original_is_Zip: false,\n            generate_is_Zip: false,\n            original_fileContent: '',\n            generate_fileContent: '',\n            original_blob: null,\n            generate_blob: null,\n            test_text: 'djshdkjdhkadh',\n            change_axios_buttom: false,\n            editForm: {},\n            rules1: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: epsilonRule, trigger: 'blur' }\n                ],\n                generate_per_file_and_params: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            rules2: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            rules3: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                boundary_constraint: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            picture: 'https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg'\n        };\n    },\n    components: {\n        vTable\n    },\n    computed: {\n        rulesList: function() {\n            if (this.editForm_Self.augmentation_method_name === 'FGSM') {\n                return this.rules1;\n            } else if (this.editForm_Self.augmentation_method_name === 'JSMA') {\n                return this.rules3;\n            } else {\n                return this.rules2;\n            }\n        }\n    },\n    created() {\n        this.userRight = window.sessionStorage.getItem('user_group_name');\n\n        this.getTaskList_Self();\n    },\n    async mounted() {\n        this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n        let data = await this.$http.get('/augmentation_method/?augmentation_type=2');\n        // ?id=1\n        console.log('data:', data);\n        this.generate_func_list = data.data.data;\n        console.log('this.generate_func_list:', this.generate_func_list);\n    },\n    methods: {\n        // >>>>>>>>>el-tab部分>>>>>>>>>>>>>>>.\n        handleClick(tab, event) {\n            if (tab.index === '1') {\n                this.getTaskList_All();\n            }\n        },\n        // >>>>>>>>>>>>>获取任务列表以及查询部分>>>>>>>>>>>>>>>\n        // 获取子组件getList指令\n        handleSelectClear() {\n            this.getTaskList_Self();\n            this.generate_func_self = '';\n        },\n        handleGetList(data) {\n            if (!data) {\n                this.getTaskList_Self();\n            } else {\n                this.getTaskList_All();\n            }\n        },\n        async getTaskList_Self() {\n            // const { data: data } = await this.$http.get('/task/self/search/' + '?page=' + this.queryInfo_Self.page);\n            const { data: data } = await this.$http.get(\n                '/task/augmentation_type/search/?augmentation_type=2&page=' + this.queryInfo_Self.page\n            );\n\n            if (data.code !== 20000) {\n                if (data.code === 40400) {\n                    console.log('data:', data);\n                    this.taskList_Self = [];\n                    this.totalPageNum = 0;\n                    this.total_Self = 0;\n                    return this.$message.error('本用户未添加任务！');\n                }\n\n                return this.$message.error('获取本用户任务列表失败！');\n            }\n\n            this.taskList_Self = data.data.details;\n\n            this.totalPageNum = data.data.pages;\n            // if (this.queryInfo_Self.page > this.totalPageNum) {\n            //     this.queryInfo_Self.page = this.totalPageNum;\n            // }\n            console.log('this.taskList_Self:', this.taskList_Self);\n\n            this.total_Self = this.totalPageNum * 10;\n        },\n        async SearchTask_Self() {\n            if (this.formInline_Self.searchType === '') {\n                return this.$message.error('请输入查询方式！');\n            }\n            var flag = 0;\n            var search_params = '';\n            if (this.formInline_Self.searchType === '生成方法') {\n                // search_params = '/task/augmentation_method/search/?augmentation_method=' + this.formInline_Self.searchTaskInfo;\n                search_params =\n                    '/task/augmentation_method/search/?augmentation_method=' +\n                    this.generate_func_self +\n                    '&page=' +\n                    this.queryInfo_Self.page;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                console.log('this.queryInfo_Self.page:', this.queryInfo_Self.page);\n            } else {\n                if (this.formInline_Self.searchTaskInfo === '') {\n                    return this.$message.error('请输入搜索内容！');\n                }\n\n                if (this.formInline_Self.searchType === '任务名称') {\n                    search_params =\n                        '/task/name/search/?augmentation_type=2&task_name=' +\n                        this.formInline_Self.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch +\n                        '&page=' +\n                        this.queryInfo_Self.page;\n                } else {\n                    search_params =\n                        '/task/id/search/?augmentation_type=2&task_id=' +\n                        this.formInline_Self.searchTaskInfo +\n                        '&page=' +\n                        this.queryInfo_Self.page;\n                }\n            }\n            const { data: data } = await this.$http.get(search_params);\n            console.log('data:', data);\n            if (data.code !== 20000) {\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return this.$message.error('未搜索到该任务！');\n            }\n            if (this.formInline_Self.searchType === '任务id') {\n                flag = 1;\n                this.taskList_Self = [];\n                this.taskList_Self.push(data.data);\n            } else {\n                this.taskList_Self = data.data.details;\n            }\n            console.log('data:', data);\n            // this.total_Self = this.taskList_Self ? this.taskList_Self.length : 0;\n            this.totalPageNum = data.data.pages;\n            // if (this.queryInfo_Self.page > this.totalPageNum) {\n            //     this.queryInfo_Self.page = this.totalPageNum;\n            // }\n            this.total_Self = this.totalPageNum * 10;\n            this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n            if (flag) {\n                this.total_Self = this.taskList_Self.length;\n            }\n        },\n        // 获取所有用户任务列表\n        async getTaskList_All() {\n            console.log('this.generate_func_all:', this.generate_func_all);\n            console.log('this.formInline_All.searchType:', this.formInline_All.searchType);\n            if (\n                this.formInline_All.searchType !== '生成方法' &&\n                (this.formInline_All.searchType === '' || this.formInline_All.searchTaskInfo === '')\n            ) {\n                // const { data: data } = await this.$http.get('task/all/admin/search/' + '?page=' + this.queryInfo_All.page);\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/?augmentation_type=2&page=' + this.queryInfo_All.page\n                );\n                if (data.code == 40400) {\n                    console.log('data:', data);\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('所有用户都未添加任务！');\n                }\n                if (data.code !== 20000) {\n                    console.log('所有用户data:', data);\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取任务列表失败[所有用户]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '用户id') {\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/' +\n                        '?augmentation_type=2&page=' +\n                        this.queryInfo_All.page +\n                        '&user_id=' +\n                        this.formInline_All.searchTaskInfo\n                );\n\n                if (data.code !== 20000) {\n                    console.log('data:', data);\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取任务列表失败[用户id]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '任务名称') {\n                const { data: data } = await this.$http.get(\n                    '/task/name/admin/search/' +\n                        '?augmentation_type=2&page=' +\n                        this.queryInfo_All.page +\n                        '&task_name=' +\n                        this.formInline_All.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch\n                );\n                console.log('data:', data);\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[任务名称]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '任务id') {\n                const { data: data } = await this.$http.get(\n                    '/task/id/admin/search/' +\n                        '?augmentation_type=2&page=' +\n                        this.queryInfo_All.page +\n                        '&task_id=' +\n                        this.formInline_All.searchTaskInfo\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[任务id]！' + '错误原因：' + data.msg);\n                }\n                console.log('data:', data);\n                console.log('this.taskList_All:', this.taskList_All);\n                this.taskList_Self = [];\n                this.taskList_Self.push(data.data.details);\n                this.totalPageNum = data.data.pages;\n                // this.total_All = this.taskList_All;\n                this.total_All = this.taskList_All.length;\n            } else if (this.formInline_All.searchType === '生成类型id') {\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/' +\n                        '?page=' +\n                        this.queryInfo_All.page +\n                        '&augmentation_type=' +\n                        this.formInline_All.searchTaskInfo\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[生成类型]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '生成方法') {\n                console.log('here,this.generate_func_all22222:', this.generate_func_all);\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_method/admin/search/' +\n                        '?page=' +\n                        this.queryInfo_All.page +\n                        '&augmentation_method=' +\n                        this.generate_func_all\n                );\n                console.log('data:', data);\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[生成方法]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '用户名') {\n                const { data: data } = await this.$http.get(\n                    '/task/master/admin/search/' +\n                        '?augmentation_type=2&page=' +\n                        this.queryInfo_All.page +\n                        '&username=' +\n                        this.formInline_All.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取任务列表失败[用户名]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                console.log('this.taskList_All:', this.taskList_All);\n                this.total_All = this.totalPageNum * 10;\n            }\n            // console.log('所有用户data:', data);\n        },\n        async generate_change(type) {\n            if (type == '本用户') {\n                let search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                const { data: data } = await this.$http.get(search_params);\n                if (data.code !== 20000) {\n                    this.taskList_Self = [];\n                    this.total_Self = 0;\n                    return this.$message.error('未搜索到该任务！');\n                }\n                console.log('data:', data);\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n                console.log('this.total_Self:', this.total_Self);\n                console.log('this.totalPageNum:', this.totalPageNum);\n            } else {\n                let search_params = '/task/augmentation_method/admin/search/?augmentation_method=' + this.generate_func_all;\n                const { data: data } = await this.$http.get(search_params);\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.total_All = 0;\n                    return this.$message.error('未搜索到该任务！');\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                this.total_All = this.total_All ? this.taskList_All.length : 0;\n            }\n        },\n        // 是否启用模糊搜索\n        isFuzzySearch(flag) {\n            this.FuzzySearch = flag;\n        },\n        // 清空二级搜索框\n        clearSecondSelect_All() {\n            this.generate_func_all = '';\n            this.formInline_All.searchTaskInfo = '';\n        },\n        clearSecondSelect_Self() {\n            this.generate_func_self = '';\n            this.formInline_Self.searchTaskInfo = '';\n        },\n        // >>>>>>>>>>分页部分>>>>>>>>>>>>>>>>>>>\n        handleSizeChange_Self(newSize) {\n            this.queryInfo_Self.pagesize = newSize;\n            console.log('newSize-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n            console.log('newSize-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n            this.getTaskList_Self();\n        },\n        handleCurrentChange_Self(newPage) {\n            this.queryInfo_Self.page = newPage;\n            console.log('newPage-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n            console.log('newPage-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n\n            if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                this.getTaskList_Self();\n            } else {\n                this.SearchTask_Self();\n            }\n        },\n        handleSizeChange_All(newSize) {\n            this.queryInfo_All.pagesize = newSize;\n            console.log('newSize-this.formInline_All.searchType:', this.formInline_All.searchType);\n            console.log('newSize-this.queryInfo_All.page:', this.queryInfo_All.page);\n            this.getTaskList_All();\n        },\n        handleCurrentChange_All(newPage) {\n            this.queryInfo_All.page = newPage;\n            console.log('newPage-this.formInline_All.searchType:', this.formInline_All.searchType);\n            console.log('newPage-this.queryInfo_All.page:', this.queryInfo_All.page);\n            this.getTaskList_All();\n            // if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n            //     this.getTaskList_All();\n            // } else {\n            //     this.SearchTask_All();\n            // }\n            // this.queryInfo_All.page = newPage;\n            // this.getTaskList_All();\n        },\n        pageReflash_All() {\n            this.queryInfo_All.page = 1;\n        },\n        pageReflash_Self() {\n            this.queryInfo_Self.page = 1;\n        },\n        // >>>>>>>>>>>>>下载文件部分>>>>>>>>>>>>>>\n        originalfileDownloadTemp(data) {\n            var task_id = data['task_id'];\n            var flag = data['flag'];\n            this.originalfileDownload(task_id, flag);\n        },\n        async originalfileDownload(task_id, flag) {\n            const loading = this.full_loading_flag\n                ? ''\n                : this.$loading({\n                      lock: true,\n                      text: 'Loading',\n                      spinner: 'el-icon-loading',\n                      background: 'rgba(0, 0, 0, 0.7)'\n                  });\n            this.original_fileContent = '';\n            const data = await this.$http.get('/task/file/?task_id=' + task_id + '&file_type=0&format=json', {\n                responseType: 'blob',\n                headers: { 'Content-Type': 'application/json; application/octet-stream' }\n            });\n\n            console.log('data:', data);\n\n            var file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n            this.fileName = file_name1[file_name1.length - 1];\n            this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n            var dot = this.fileName.lastIndexOf('.');\n            this.original_is_Zip = false;\n            if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                this.original_is_Zip = true;\n            } else {\n                this.original_blob = data.data;\n            }\n            if (!this.full_loading_flag) {\n                loading.close();\n            }\n            if (!flag) {\n                fileDownload(data.data, this.fileName);\n            }\n            return data;\n        },\n        generatefileDownloadTemp(data) {\n            var task_id = data['task_id'];\n            var flag = data['flag'];\n            this.generatefileDownload(task_id, flag);\n        },\n        async generatefileDownload(task_id, flag) {\n            const loading = this.full_loading_flag\n                ? ''\n                : this.$loading({\n                      lock: true,\n                      text: 'Loading',\n                      spinner: 'el-icon-loading',\n                      background: 'rgba(0, 0, 0, 0.7)'\n                  });\n            const data = await this.$http.get('/task/file/?task_id=' + task_id + '&file_type=1&format=json', {\n                responseType: 'blob',\n                headers: { 'Content-Type': 'application/json; application/octet-stream' }\n            });\n            var file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n            this.fileName = file_name1[file_name1.length - 1];\n            this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n\n            var dot = this.fileName.lastIndexOf('.');\n            this.generate_is_Zip = false;\n            if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                this.generate_is_Zip = true;\n            } else {\n                this.generate_blob = data.data;\n            }\n            if (!this.full_loading_flag) {\n                loading.close();\n            }\n            if (!flag) {\n                fileDownload(data.data, this.fileName);\n            }\n            return data;\n        },\n        // >>>>>>>>>>>>操作按钮部分>>>>>>>>>>>>>\n        async removeTaskById(task_id) {\n            const confirmResult = await this.$confirm('此操作将永久删除该任务, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).catch(err => err);\n            if (confirmResult !== 'confirm') {\n                return this.$message.info('已取消删除');\n            }\n            const { data: data } = await this.$http.delete('/task/?task_id=' + task_id);\n            if (data.code !== 20000) {\n                return this.$message.error('删除任务失败！' + '错误原因：' + data.msg);\n            }\n            this.$message.success('删除任务成功！');\n            if (this.activeName === 'self') {\n                this.queryInfo_Self.page = 1;\n                if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                    this.getTaskList_Self();\n                } else {\n                    this.SearchTask_Self();\n                }\n            } else {\n                this.queryInfo_All.page = 1;\n                if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n                    this.getTaskList_All();\n                } else {\n                    this.SearchTask_All();\n                }\n            }\n        },\n        showeditForm() {\n            console.log('this.editForm_Self:', this.editForm_Self);\n        },\n        async showEditDialog(row) {\n            this.editForm_Self = JSON.parse(JSON.stringify(row));\n\n            this.editForm_Self.params = JSON.parse(row.params);\n\n            for (var i in this.editForm_Self.params) {\n                this.$set(this.editForm_Self, i, this.editForm_Self.params[i]);\n            }\n            this.editForm_Self.urgency_level = this.editForm_Self.urgency_level;\n            this.editForm_Self.aug_object_truck =\n                this.editForm_Self.aug_count_truck == '0' || !this.editForm_Self.aug_count_truck\n                    ? null\n                    : this.editForm_Self.aug_object_truck;\n            this.editForm_Self.aug_object_car =\n                this.editForm_Self.aug_count_car == '0' || !this.editForm_Self.aug_count_car ? null : this.editForm_Self.aug_object_car;\n            this.editForm_Self.aug_object_cyclist =\n                this.editForm_Self.aug_count_cyclist == '0' || !this.editForm_Self.aug_count_cyclist\n                    ? null\n                    : this.editForm_Self.aug_object_cyclist;\n\n            this.editForm_Self.aug_count_truck = parseInt(this.editForm_Self.aug_count_truck);\n            this.editForm_Self.aug_count_car = parseInt(this.editForm_Self.aug_count_car);\n            this.editForm_Self.aug_count_cyclist = parseInt(this.editForm_Self.aug_count_cyclist);\n            this.editForm_Self.angle = parseFloat(this.editForm_Self.angle);\n\n            console.log('this.editForm_Self:', this.editForm_Self);\n            this.editDialogSelfVisible = true;\n        },\n        editDialogClosed() {\n            this.editForm_Self = {\n                task_id: 0,\n                master: this.$store.getters.userId,\n                name: '',\n                params: '',\n                file: {},\n                augmentation_method_name: ''\n            };\n        },\n        editTaskInfo() {\n            this.editForm_Self.master = this.$store.state.userId;\n            if (this.editForm_Self.epsilon) {\n                this.editForm_Self.epsilon = this.editForm_Self.epsilon.replace('，', ',');\n            }\n            this.$refs.editFormRef.validate(async valid => {\n                if (!valid) return;\n\n                var adddata = new FormData();\n                adddata.append('task_id', this.editForm_Self.id);\n                adddata.append('name', this.editForm_Self.name);\n                adddata.append('master', this.editForm_Self.master);\n\n                adddata.append('urgency_level', this.editForm_Self.urgency_level);\n                var temp_params = {};\n                if (this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达') {\n                    temp_params = {\n                        aug_object_car: this.editForm_Self.aug_object_car ? this.editForm_Self.aug_object_car : '1',\n                        aug_object_truck: this.editForm_Self.aug_object_truck ? this.editForm_Self.aug_object_truck : '1',\n                        aug_object_cyclist: this.editForm_Self.aug_object_cyclist ? this.editForm_Self.aug_object_cyclist : '1',\n                        aug_count_car: this.editForm_Self.aug_count_car + '',\n                        aug_count_truck: this.editForm_Self.aug_count_truck + '',\n                        aug_count_cyclist: this.editForm_Self.aug_count_cyclist + ''\n                    };\n                } else if (this.editForm_Self.augmentation_method_name === '场景物体旋转蜕变-激光雷达') {\n                    temp_params = {\n                        angle: this.editForm_Self.angle + ''\n                    };\n                } else if (this.editForm_Self.augmentation_method_name === '极端场景蜕变-激光雷达') {\n                    temp_params = {\n                        aug_Truck: this.editForm_Self.aug_Truck,\n                        aug_Car: this.editForm_Self.aug_Car,\n                        aug_Cyclist: this.editForm_Self.aug_Cyclist\n                    };\n                }\n\n                temp_params = JSON.stringify(temp_params);\n\n                adddata.append('params', temp_params);\n                this.editForm_Self.file = document.getElementById('filetemp').files[0];\n                if (this.editForm_Self.file) {\n                    adddata.append('file', this.editForm_Self.file);\n                }\n                for (var [a, b] of adddata.entries()) {\n                }\n                const { data: data } = await this.$http({\n                    url: '/task/',\n                    data: adddata,\n                    method: 'put'\n                });\n                if (data.code !== 20000) {\n                    return this.$message.error('修改任务失败！' + '错误原因：' + data.msg);\n                }\n                this.$message.success('修改任务成功！');\n                this.editDialogSelfVisible = false;\n                this.$refs.editFormRef.resetFields();\n                this.editForm_Self.augmentation_type = '';\n                this.editForm_Self.augmentation_method = '';\n                this.editForm_Self.file = {};\n                this.getTaskList_Self();\n                this.getTaskList_All();\n            });\n        },\n        async getdata(reader, self) {\n            return (reader.onload = await function() {\n                self.fileContent = this.result;\n            });\n        },\n        // 标记任务异常\n        async taskException() {\n            this.$confirm('是否确定将该任务标记成异常状态？')\n                .then(async _ => {\n                    var adddata = new FormData();\n                    adddata.append('task_id', this.methodDetail.id);\n                    const { data: data } = await this.$http({\n                        url: '/task/exception/',\n                        data: adddata,\n                        method: 'post'\n                    });\n                    if (data.code !== 20000) {\n                        return this.$message.error('添加生成任务失败！' + '错误原因：' + data.msg);\n                    }\n                    this.$message.success('标记成异常成功！');\n                })\n                .catch(_ => {});\n        },\n        //任务详情对话框\n        async MethodDetail(id) {\n            // id = data\n            console.log('this.methodDetail:', this.methodDetail);\n            this.methodDialogSelfVisible = true;\n            const { data: data } = await this.$http.get('/task/' + '?task_id=' + id);\n            if (data.code !== 20000) {\n                return this.$message.error('获取本用户任务详情失败！' + '错误原因：' + data.msg);\n            }\n\n            this.methodDetail = data.data;\n        },\n        methodDialogClose() {\n            console.log('this.methodDetail:', this.methodDetail);\n            this.methodDetail = [];\n        },\n        // >>>>>>>>>>点云预览部分>>>>>>>>>>>>>>>\n        // point_cloud_preview-previewHandleChange-make_format_data-get_preview\n        async point_cloud_preview(task_id) {\n            this.full_loading_flag = true;\n            const loading = this.$loading({\n                lock: true,\n                text: 'Loading',\n                spinner: 'el-icon-loading',\n                background: 'rgba(0, 0, 0, 0.7)'\n            });\n            // console.log('loading:', loading);\n            // console.log('this.$loading.lock:', this.$loading.lock);\n            // this.previewDialogVisible = true;\n            var preview_options = [];\n            var original_res = await this.originalfileDownload(task_id, 1);\n\n            // 处理原始压缩文件\n            let original_files_zip = new window.File([original_res.data], this.fileName, { type: 'zip' });\n            let original_files = new JSZip();\n            var orignal_names = [];\n            this.original_files_zip = original_files_zip;\n            let me = this;\n            await original_files.loadAsync(this.original_files_zip).then(function(zip) {\n                console.log('original_files.files:', original_files.files);\n                var index = 0;\n                for (var i in original_files.files) {\n                    // console.log('file_i:', i);\n                    if (i.indexOf('velodyne_txt/0') != -1) {\n                        var temp_object = {};\n                        var temp_name = i.split('/');\n                        temp_name = temp_name[temp_name.length - 1];\n                        console.log('temp_name:', temp_name);\n                        orignal_names.push(i);\n                        temp_object['point'] = i;\n                        temp_object['value'] = index;\n                        temp_object['label'] = temp_name;\n                        temp_object['label_real'] = 'training/label_2/' + temp_name;\n                        temp_object['children'] = [];\n                        preview_options.push(temp_object);\n                        index = index + 1;\n                    }\n                }\n                console.log('preview_options_original:', preview_options);\n                me.original_files_zip = original_files_zip;\n            });\n\n            // 处理生成压缩文件\n            var generate_res = await this.generatefileDownload(task_id, 1);\n            let generate_files_zip = new window.File([generate_res.data], this.fileName, { type: 'zip' });\n            var generate_files = new JSZip();\n            var generate_names = [];\n            var original_is_Zip = this.original_is_Zip;\n            await generate_files.loadAsync(generate_files_zip).then(function(generate_files_zip) {\n                console.log('generate_files.files:', generate_files.files);\n\n                for (var i in preview_options) {\n                    // console.log('index:', index);\n                    var temp_object = {};\n                    var label_real = '';\n                    // var temp_name = i.split('/');\n\n                    // temp_object['value'] = index;\n                    // index = index + 1;\n                    var label_dir = preview_options[i]['label'].split('.')[0];\n                    // console.log('i: preview_options[i][\"label\"].split(\".\")[0]:', i, preview_options[i]['label'].split('.')[0]);\n\n                    var index = 0;\n                    for (var j in generate_files.files) {\n                        if (j.indexOf(label_dir + '/points') != -1) {\n                            console.log('j:', j);\n                            var temp_object = {};\n                            var label_real = '';\n                            var temp_name = j.split('/');\n                            temp_object['value'] = index;\n                            index = index + 1;\n\n                            temp_object['label'] = temp_name[1];\n                            temp_object['name'] = j;\n                            // j.indexOf(i.substring(i.length - 6, i.length)) != -1\n                            temp_object['label_real'] = label_dir + '/label_real' + j.substring(j.length - 6, j.length);\n                            preview_options[i].children.push(temp_object);\n                        }\n                    }\n                }\n                console.log('preview_options:', preview_options);\n            });\n\n            this.generate_files_zip = generate_files_zip;\n\n            loading.close();\n            this.full_loading_flag = false;\n            this.previewDialogVisible = true;\n            this.$message.success('已获取文件列表，请选择需预览的文件！');\n            this.preview_options = preview_options;\n\n            this.loading = false;\n        },\n        make_format_data(content, flag) {\n            var format_data = null;\n            var label_temp = [];\n            let arr = null;\n            format_data = content.replaceAll('\\r\\n', '\\n').split('\\n');\n\n            format_data.forEach(item => {\n                arr = item.split(' ');\n                for (var k in arr) {\n                    if (k < 3 && parseFloat(arr[k]) > this.maxAxisValue) {\n                        this.maxAxisValue = parseFloat(arr[k]);\n                    }\n                    if (k < 3 && parseFloat(arr[k]) < this.minAxisValue) {\n                        this.minAxisValue = parseFloat(arr[k]);\n                    }\n                }\n                if ((flag === 2 || flag === 3) && arr[0] != 'DontCare' && arr[0] != '') {\n                    var label_temp_item = [];\n                    label_temp_item.push(parseFloat(arr[13]));\n                    label_temp_item.push(-1 * parseFloat(arr[11]));\n                    label_temp_item.push(-1 * parseFloat(arr[12]));\n                    label_temp.push(label_temp_item);\n                    console.log('label_temp:', label_temp);\n                }\n                if (flag === 0) {\n                    this.originalPointCloudData.push(arr);\n                } else if (flag === 1) {\n                    this.generatePointCloudData.push(arr);\n                }\n            });\n            if (flag === 2) {\n                this.originalLabelData = label_temp;\n            } else if (flag === 3) {\n                this.generateLabelData = label_temp;\n            }\n\n            if (flag == 0) {\n                console.log('this.originalPointCloudData:', this.originalPointCloudData);\n            } else if (flag == 1) {\n                console.log('this.generatePointCloudData:', this.generatePointCloudData);\n            } else if (flag == 2) {\n                console.log('this.originalLabelData:', this.originalLabelData);\n            } else if (flag == 3) {\n                console.log('this.generateLabelData:', this.generateLabelData);\n            }\n        },\n        get_preview() {\n            var myChart = echarts.init(document.getElementById('preview'));\n            this.option = {\n                title: {\n                    text: '点云生成预览'\n                },\n                tooltip: {\n                    show: false,\n                    showCcontant: true,\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        label: {\n                            backgroundColor: '#6a7985'\n                        }\n                    }\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                legend: {\n                    type: 'plain',\n                    data: ['original_data', 'generate_data', 'original_label', 'generate_label'],\n                    top: '10%'\n                },\n                grid3D: {\n                    containLabel: true,\n                    viewControl: {\n                        projection: 'orthographic'\n                    }\n                },\n                xAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                yAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                zAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                series: [\n                    {\n                        name: 'original_data',\n                        type: 'scatter3D',\n                        data: this.originalPointCloudData,\n                        symbolSize: 2,\n                        encode: {\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    },\n                    {\n                        name: 'generate_data',\n                        type: 'scatter3D',\n                        data: this.generatePointCloudData,\n                        symbolSize: 2,\n                        encode: {\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    },\n                    {\n                        name: 'original_label',\n                        type: 'scatter3D',\n                        data: this.originalLabelData,\n                        symbolSize: 10,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    },\n                    {\n                        name: 'generate_label',\n                        type: 'scatter3D',\n                        data: this.generateLabelData,\n                        symbolSize: 5,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    }\n                ]\n            };\n            myChart.setOption(this.option);\n            var myChart_original = echarts.init(document.getElementById('preview_original'));\n            this.option_original = {\n                title: {\n                    text: '原始图'\n                },\n                tooltip: {\n                    show: false,\n                    showCcontant: true,\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        label: {\n                            backgroundColor: '#6a7985'\n                        }\n                    }\n                },\n                legend: {\n                    // 就是显示哪些东西\n                    type: 'plain',\n                    data: ['original_data', 'original_label'],\n                    top: '10%'\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                grid3D: {\n                    containLabel: true,\n                    viewControl: {\n                        projection: 'orthographic'\n                    }\n                },\n                xAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                yAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                zAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                series: [\n                    {\n                        name: 'original_data',\n                        type: 'scatter3D',\n                        data: this.originalPointCloudData,\n                        symbolSize: 2,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    },\n                    {\n                        name: 'original_label',\n                        type: 'scatter3D',\n                        data: this.originalLabelData,\n                        symbolSize: 10,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    }\n                ]\n            };\n            myChart_original.setOption(this.option_original);\n            var myChart_generate = echarts.init(document.getElementById('preview_generate'));\n            this.option_generate = {\n                title: {\n                    text: '生成图'\n                },\n                tooltip: {\n                    show: true,\n                    showCcontant: true,\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        label: {\n                            backgroundColor: '#6a7985'\n                        }\n                    }\n                },\n                legend: {\n                    // 就是显示哪些东西\n                    type: 'plain',\n                    data: ['generate_data', 'generate_label'],\n                    top: '10%'\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                grid3D: {\n                    containLabel: true,\n                    viewControl: {\n                        projection: 'orthographic'\n                    }\n                },\n                xAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                yAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                zAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                series: [\n                    {\n                        name: 'generate_data',\n                        type: 'scatter3D',\n                        data: this.generatePointCloudData,\n                        symbolSize: 2,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    },\n                    {\n                        name: 'generate_label',\n                        type: 'scatter3D',\n                        data: this.generateLabelData,\n                        symbolSize: 10,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    }\n                ]\n            };\n            myChart_generate.setOption(this.option_generate);\n        },\n        async previewHandleChange() {\n            this.full_loading_flag = true;\n            const loading = this.$loading({\n                lock: true,\n                text: 'Loading',\n                spinner: 'el-icon-loading',\n                background: 'rgba(0, 0, 0, 0.7)'\n            });\n\n            this.originalPointCloudData = [];\n            this.generatePointCloudData = [];\n            this.originalLabelData = [];\n            this.generateLabelData = [];\n            console.log('this.preview_value[0]:', this.preview_value[0]);\n            console.log('this.preview_value[1]:', this.preview_value[1]);\n            // this.preview_value[0]: velodyne_txt/000009.txt\n            // this.preview_value[1]: 2\n            var original_points_name = this.preview_options[this.preview_value[0]]['point'];\n            var generate_points_name = this.preview_options[this.preview_value[0]]['children'][this.preview_value[1]]['name'];\n            console.log('original_points_name:', original_points_name);\n            console.log('generate_points_name:', generate_points_name);\n            // console.log('this.preview_options:', this.preview_options);\n\n            var original_label_name = this.preview_options[this.preview_value[0]]['label_real'];\n            var generate_label_name = this.preview_options[this.preview_value[0]]['children'][this.preview_value[1]]['label_real'];\n            console.log('original_label_name:', original_label_name);\n            console.log('generate_label_name:', generate_label_name);\n\n            var original_pointscloud = null;\n            var generate_pointscloud = null;\n            var original_label = null;\n            var generate_label = null;\n\n            var original_files = new JSZip();\n            await original_files.loadAsync(this.original_files_zip).then(async function(file) {\n                await original_files\n                    .file(original_points_name)\n                    .async('string')\n                    .then(function(content) {\n                        original_pointscloud = content;\n                    });\n                await original_files\n                    .file(original_label_name)\n                    .async('string')\n                    .then(function(content) {\n                        original_label = content;\n                    });\n            });\n\n            console.log('original_pointscloud:', original_pointscloud);\n\n            this.make_format_data(original_pointscloud, 0);\n            this.make_format_data(original_label, 2);\n            console.log('this.originalPointCloudData:', this.originalPointCloudData);\n            console.log('this.originalLabelData:', this.originalLabelData);\n\n            var generate_files = new JSZip();\n            // console.log('this.generate_files_zip:', this.generate_files_zip);\n            // console.log('generate_points_name:', generate_points_name);\n            // console.log('generate_label_name:', generate_label_name);\n            await generate_files.loadAsync(this.generate_files_zip).then(async function(file) {\n                await generate_files\n                    .file(generate_points_name)\n                    .async('string')\n                    .then(function(content) {\n                        generate_pointscloud = content;\n                    });\n                await generate_files\n                    .file(generate_label_name)\n                    .async('string')\n                    .then(function(content) {\n                        generate_label = content;\n                    });\n            });\n            // console.log('generate_pointscloud:', generate_pointscloud);\n            // console.log('generate_label:', generate_label);\n\n            this.make_format_data(generate_pointscloud, 1);\n            this.make_format_data(generate_label, 3);\n            console.log('this.generatePointCloudData:', this.generatePointCloudData);\n            console.log('this.generateLabelData:', this.generateLabelData);\n\n            // this.generatePointCloudData = [];\n            this.get_preview();\n            loading.close();\n            this.full_loading_flag = false;\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n                .then(_ => {\n                    this.previewDialogVisible = false;\n                    this.fileName = '';\n                    this.preview_value = [];\n                    this.preview_options = [];\n                    this.previewDialogVisible = false;\n                    this.loading = true;\n                    this.original_files_zip = null;\n                    this.generate_files_zip = null;\n                    this.originalPointCloudData = [];\n                    this.generatePointCloudData = [];\n                    this.maxAxisValue = -10000;\n                    this.minAxisValue = 10000;\n                })\n                .catch(_ => {});\n        },\n        changeAxios_xz() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][0], this.originalPointCloudData[i][2]] = [\n                    this.originalPointCloudData[i][2],\n                    this.originalPointCloudData[i][0]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][0], this.generatePointCloudData[i][2]] = [\n                    this.generatePointCloudData[i][2],\n                    this.generatePointCloudData[i][0]\n                ];\n            }\n            this.get_preview();\n        },\n        changeAxios_yz() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][1], this.originalPointCloudData[i][2]] = [\n                    this.originalPointCloudData[i][2],\n                    this.originalPointCloudData[i][1]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][1], this.generatePointCloudData[i][2]] = [\n                    this.generatePointCloudData[i][2],\n                    this.generatePointCloudData[i][1]\n                ];\n            }\n            this.get_preview();\n        },\n        changeAxios_xy() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][0], this.originalPointCloudData[i][1]] = [\n                    this.originalPointCloudData[i][1],\n                    this.originalPointCloudData[i][0]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][0], this.generatePointCloudData[i][1]] = [\n                    this.generatePointCloudData[i][1],\n                    this.generatePointCloudData[i][0]\n                ];\n            }\n            this.get_preview();\n        },\n        // >>>>>>>>>>表格空白部分填充>>>>>>>>>>>>>>>>\n        isBlank_num(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '-- --';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            return value;\n        },\n        isBlank_start(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '未开始';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n            return value;\n        },\n        isBlank_end(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '未结束';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n            return value;\n        }\n    }\n};\n</script>\n<style scoped>\n.juzhog {\n    width: 600px;\n    height: 530px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -300px;\n    margin-top: -265px;\n    background-color: #fff;\n}\n.search {\n    margin-bottom: 10px !important;\n}\n.right {\n    margin-right: 5px !important;\n}\n.right10 {\n    margin-right: 10px !important;\n}\n.user-info-list {\n    padding-left: 10px;\n    background-color: rgba(255, 255, 255, 0.4);\n    font-size: 14px;\n    color: #000;\n    line-height: 25px;\n}\n.el-input__inner {\n    width: 600px !important;\n}\n.view1 {\n    width: 600px;\n    height: 530px;\n    margin: 0 10px 0 0;\n    background-color: #fff;\n    float: left;\n}\n.el-dialog {\n    display: flex;\n    flex-direction: column;\n    margin: 0 !important;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    max-height: calc(100% - 30px);\n    max-width: calc(100% - 30px);\n}\n.el-dialog .el-dialog__body {\n    flex: 1;\n    overflow: auto;\n}\n/* .inlineBlock {\n    display: inline-block;\n} */\n</style>\n"]}]}