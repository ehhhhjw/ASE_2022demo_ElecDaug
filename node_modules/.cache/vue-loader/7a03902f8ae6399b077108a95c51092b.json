{"remainingRequest":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-main\\src\\components\\page\\Log.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-main\\src\\components\\page\\Log.vue","mtime":1636360192744},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nexport default {\n    name: 'baseform',\n    data() {\n        return {\n            activeName: 'first',\n            logData: {},\n            logShow_old: [],\n            logShow_new_one: [],\n            logShow_new_two: [],\n            logShow_new_three: [],\n            logDownload: ''\n        };\n    },\n    methods: {\n        async getOne() {\n            const { data: data } = await this.$http.get('log/recent_twenty_four_hours/');\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '获取24小时内日志数据失败！' + '错误原因：' + data.msg,\n                    offset: 70\n                });\n            }\n            this.logData = data.data;\n            console.log('this.logData1:', this.logData);\n\n            var temp = this.logData;\n            Object.keys(temp).forEach(function(key) {\n                // console.log(key, temp[key]);\n                var temp_val = {};\n                temp_val['User-defined'] = temp[key]['场景物体添加蜕变-激光雷达'];\n                temp_val['Automatically defined by PointMe'] = temp[key]['极端场景蜕变-激光雷达'];\n                temp[key] = temp_val;\n            });\n            console.log('this.logData1:', this.logData);\n            this.showData(1);\n        },\n        async getTwo() {\n            const { data: data } = await this.$http.get('log/recent_fifteen_days/');\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '获取近15日系统日志数据失败！' + '错误原因：' + data.msg,\n                    offset: 70\n                });\n            }\n            this.logData = data.data;\n\n            this.showData(2);\n        },\n        async getThree() {\n            const { data: data } = await this.$http.get('log/recent_six_months/');\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '获取近6个月系统日志数据失败！' + '错误原因：' + data.msg,\n                    offset: 70\n                });\n            }\n            this.logData = data.data;\n            this.showData(3);\n        },\n        handleClick(tab, event) {},\n        fileDownload() {\n            fileDownload(this.logDownload, 'logData.json');\n        },\n        showData(num) {\n            var logShow = [];\n            for (var date in this.logData) {\n                var units2_new = [];\n                for (var method in this.logData[date]) {\n                    var unit4 = {};\n                    unit4 = JSON.parse(JSON.stringify(this.logData[date][method]));\n                    unit4.label4 = method;\n                    units2_new.push(unit4);\n                }\n                var unit1_new = {};\n                unit1_new.label1 = date;\n                unit1_new.children = units2_new;\n                logShow.push(unit1_new);\n            }\n\n            if (num === 1) {\n                this.logShow_new_one = logShow;\n            } else if (num === 2) {\n                this.logShow_new_two = logShow;\n            } else {\n                this.logShow_new_three = logShow;\n            }\n        }\n    },\n    mounted() {\n        this.getOne();\n        this.getTwo();\n        this.getThree();\n    }\n};\n",{"version":3,"sources":["Log.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Log.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item> <i class=\"el-icon-reading\"></i> Log Management </el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <el-card>\n            <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n                <el-tab-pane label=\"System log within 24 hours\" name=\"first\">\n                    <el-table :data=\"logShow_new_one\" style=\"width: 99%\" stripe>\n                        <el-table-column type=\"index\"></el-table-column>\n                        <el-table-column type=\"expand\" style=\"background:rgba(150, 154, 184,0.05);\">\n                            <template slot-scope=\"scope\">\n                                <el-table :data=\"scope.row.children\" style=\"width: 54%\">\n                                    <el-table-column prop=\"label4\" label=\"Method\" width=\"200\"> </el-table-column>\n                                    <el-table-column prop=\"finish_task_number\" label=\"Number of completed tasks\" width=\"170\">\n                                    </el-table-column>\n                                    <el-table-column prop=\"ran_task_number\" label=\"Number of running tasks\" width=\"170\"> </el-table-column>\n                                    <el-table-column prop=\"generate_data_number\" label=\"Number of generated data\" width=\"170\">\n                                    </el-table-column>\n                                </el-table>\n                            </template>\n                        </el-table-column>\n                        <el-table-column prop=\"label1\" label=\"Log Time\" align=\"left\"> </el-table-column>\n                    </el-table>\n                </el-tab-pane>\n                <el-tab-pane label=\"System logs for the past 15 days\" name=\"second\">\n                    <el-table :data=\"logShow_new_two\" style=\"width: 99%\" stripe>\n                        <el-table-column type=\"index\"></el-table-column>\n                        <el-table-column type=\"expand\" style=\"background:rgba(150, 154, 184,0.05);\">\n                            <template slot-scope=\"scope\">\n                                <el-table :data=\"scope.row.children\" style=\"width: 54%\">\n                                    <el-table-column prop=\"label4\" label=\"Method\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"finish_task_number\" label=\"Number of completed tasks\" width=\"180\">\n                                    </el-table-column>\n                                    <el-table-column prop=\"ran_task_number\" label=\"Number of running tasks\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"generate_data_number\" label=\"Number of generated data\" width=\"180\">\n                                    </el-table-column>\n                                </el-table>\n                            </template>\n                        </el-table-column>\n                        <el-table-column prop=\"label1\" label=\"Log Time\" align=\"left\"> </el-table-column>\n                    </el-table>\n                </el-tab-pane>\n                <el-tab-pane label=\"System log for the past 6 months\" name=\"third\">\n                    <el-table :data=\"logShow_new_three\" style=\"width: 99%\" stripe>\n                        <el-table-column type=\"index\"></el-table-column>\n                        <el-table-column type=\"expand\" style=\"background:rgba(150, 154, 184,0.05);\">\n                            <template slot-scope=\"scope\">\n                                <el-table :data=\"scope.row.children\" style=\"width: 54%\">\n                                    <el-table-column prop=\"label4\" label=\"Method\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"finish_task_number\" label=\"Number of completed tasks\" width=\"180\">\n                                    </el-table-column>\n                                    <el-table-column prop=\"ran_task_number\" label=\"Number of running tasks\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"generate_data_number\" label=\"Number of generated data\" width=\"180\">\n                                    </el-table-column>\n                                </el-table>\n                            </template>\n                        </el-table-column>\n                        <el-table-column prop=\"label1\" label=\"Log Time\" align=\"left\"> </el-table-column>\n                    </el-table>\n                </el-tab-pane>\n            </el-tabs>\n        </el-card>\n    </div>\n</template>\n<script>\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nexport default {\n    name: 'baseform',\n    data() {\n        return {\n            activeName: 'first',\n            logData: {},\n            logShow_old: [],\n            logShow_new_one: [],\n            logShow_new_two: [],\n            logShow_new_three: [],\n            logDownload: ''\n        };\n    },\n    methods: {\n        async getOne() {\n            const { data: data } = await this.$http.get('log/recent_twenty_four_hours/');\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '获取24小时内日志数据失败！' + '错误原因：' + data.msg,\n                    offset: 70\n                });\n            }\n            this.logData = data.data;\n            console.log('this.logData1:', this.logData);\n\n            var temp = this.logData;\n            Object.keys(temp).forEach(function(key) {\n                // console.log(key, temp[key]);\n                var temp_val = {};\n                temp_val['User-defined'] = temp[key]['场景物体添加蜕变-激光雷达'];\n                temp_val['Automatically defined by PointMe'] = temp[key]['极端场景蜕变-激光雷达'];\n                temp[key] = temp_val;\n            });\n            console.log('this.logData1:', this.logData);\n            this.showData(1);\n        },\n        async getTwo() {\n            const { data: data } = await this.$http.get('log/recent_fifteen_days/');\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '获取近15日系统日志数据失败！' + '错误原因：' + data.msg,\n                    offset: 70\n                });\n            }\n            this.logData = data.data;\n\n            this.showData(2);\n        },\n        async getThree() {\n            const { data: data } = await this.$http.get('log/recent_six_months/');\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '获取近6个月系统日志数据失败！' + '错误原因：' + data.msg,\n                    offset: 70\n                });\n            }\n            this.logData = data.data;\n            this.showData(3);\n        },\n        handleClick(tab, event) {},\n        fileDownload() {\n            fileDownload(this.logDownload, 'logData.json');\n        },\n        showData(num) {\n            var logShow = [];\n            for (var date in this.logData) {\n                var units2_new = [];\n                for (var method in this.logData[date]) {\n                    var unit4 = {};\n                    unit4 = JSON.parse(JSON.stringify(this.logData[date][method]));\n                    unit4.label4 = method;\n                    units2_new.push(unit4);\n                }\n                var unit1_new = {};\n                unit1_new.label1 = date;\n                unit1_new.children = units2_new;\n                logShow.push(unit1_new);\n            }\n\n            if (num === 1) {\n                this.logShow_new_one = logShow;\n            } else if (num === 2) {\n                this.logShow_new_two = logShow;\n            } else {\n                this.logShow_new_three = logShow;\n            }\n        }\n    },\n    mounted() {\n        this.getOne();\n        this.getTwo();\n        this.getThree();\n    }\n};\n</script>\n<style scoped>\n.el-table,\n.el-table__expanded-cell {\n    background-color: #409eff;\n}\n.el-table th,\n.el-table tr {\n    background-color: #409eff;\n}\n</style>\n"]}]}