{"remainingRequest":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-main\\src\\components\\page\\System_Setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-main\\src\\components\\page\\System_Setting.vue","mtime":1628741922000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data() {\n        return {\n            micro_service_List: [],\n            userRight: ''\n        };\n    },\n    created() {\n        this.userRight = window.sessionStorage.getItem('user_group_name');\n    },\n    methods: {\n        async resetService() {\n            this.$confirm('!警告：该操作不可逆，是否重置所有微服务？')\n                .then(async (_) => {\n                    \n                    const { data: data } = await this.$http({\n                        url: '/micro_service/',\n                        method: 'post'\n                    });\n                    if (data.code !== 20000) {\n                        \n                        \n                        return this.$message.error('重置微服务失败！' + '错误原因：' + data.msg);\n                    }\n                    this.$message.success('重置微服务成功！');\n                })\n                .catch((_) => {\n                    \n                });\n        },\n        async update() {\n            this.micro_service_List = [];\n            this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n            const { data: data } = await this.$http.get('/micro_service/');\n            \n            if (data.code !== 20000) {\n                \n                \n                return this.$message.error('获取微服务信息失败！' + '错误原因：' + data.msg);\n            }\n            for (var i in data.data) {\n                var temp = {},\n                    info = [];\n                temp['micro_service_name'] = i;\n                for (var j in data.data[i]) {\n                    let temp_info = {};\n                    temp_info['IP_and_port'] = j;\n                    if (data.data[i][j]) {\n                        temp_info['state'] = '空闲';\n                    } else {\n                        temp_info['state'] = '忙碌';\n                    }\n                    info.push(temp_info);\n                }\n                temp['info'] = info;\n                this.micro_service_List.push(temp);\n            }\n            \n        }\n    },\n    async mounted() {\n        this.update();\n    }\n};\n",{"version":3,"sources":["System_Setting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"System_Setting.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item> <i class=\"el-icon-s-tools\"></i> 管理系统 </el-breadcrumb-item>\n                <el-breadcrumb-item>系统设置</el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <el-card>\n            <el-button v-if=\"this.userRight === '超级管理员'\" @click=\"resetService\" type=\"danger\" style=\"margin-bottom: 10px\"\n                >重置所有微服务</el-button\n            >\n            <el-button type=\"primary\" @click=\"update\" style=\"margin-bottom: 10px\">刷新</el-button>\n            <el-table :data=\"micro_service_List\" style=\"width: 99%\" stripe>\n                <el-table-column type=\"index\"></el-table-column>\n                <el-table-column type=\"expand\" style=\"background: rgba(150, 154, 184, 0.05)\">\n                    <template slot-scope=\"scope\">\n                        <el-table :data=\"scope.row.info\" style=\"width: 360px\">\n                            <el-table-column prop=\"IP_and_port\" label=\"IP与端口\" width=\"180\"></el-table-column>\n                            <el-table-column prop=\"state\" label=\"状态\" width=\"180\"> </el-table-column>\n                        </el-table>\n                    </template>\n                </el-table-column>\n                <el-table-column prop=\"micro_service_name\" label=\"微服务名称\" align=\"left\"> </el-table-column>\n            </el-table>\n        </el-card>\n    </div>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            micro_service_List: [],\n            userRight: ''\n        };\n    },\n    created() {\n        this.userRight = window.sessionStorage.getItem('user_group_name');\n    },\n    methods: {\n        async resetService() {\n            this.$confirm('!警告：该操作不可逆，是否重置所有微服务？')\n                .then(async (_) => {\n                    \n                    const { data: data } = await this.$http({\n                        url: '/micro_service/',\n                        method: 'post'\n                    });\n                    if (data.code !== 20000) {\n                        \n                        \n                        return this.$message.error('重置微服务失败！' + '错误原因：' + data.msg);\n                    }\n                    this.$message.success('重置微服务成功！');\n                })\n                .catch((_) => {\n                    \n                });\n        },\n        async update() {\n            this.micro_service_List = [];\n            this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n            const { data: data } = await this.$http.get('/micro_service/');\n            \n            if (data.code !== 20000) {\n                \n                \n                return this.$message.error('获取微服务信息失败！' + '错误原因：' + data.msg);\n            }\n            for (var i in data.data) {\n                var temp = {},\n                    info = [];\n                temp['micro_service_name'] = i;\n                for (var j in data.data[i]) {\n                    let temp_info = {};\n                    temp_info['IP_and_port'] = j;\n                    if (data.data[i][j]) {\n                        temp_info['state'] = '空闲';\n                    } else {\n                        temp_info['state'] = '忙碌';\n                    }\n                    info.push(temp_info);\n                }\n                temp['info'] = info;\n                this.micro_service_List.push(temp);\n            }\n            \n        }\n    },\n    async mounted() {\n        this.update();\n    }\n};\n</script>\n<style scoped></style>\n"]}]}