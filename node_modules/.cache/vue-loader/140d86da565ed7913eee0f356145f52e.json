{"remainingRequest":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\Image_T_AugTaskAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\Image_T_AugTaskAdd.vue","mtime":1637254022677},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport qs from 'qs';\n\nexport default {\n    name: 'baseform',\n    inject: ['reload'],\n    data() {\n        // var checkMethod = (rule, value, callback) => {\n        //     console.log('method:' + value);\n        //     if (value === '') {\n        //         return callback(new Error('生成方法不能为空'));\n        //     }\n        // };\n        return {\n            method_value: [],\n            type_value: '',\n            temp: [1, 1],\n            temp_marks: {\n                0: '0',\n                100: '100'\n            },\n            mark_group: {\n                marks1_10: {\n                    1: '1',\n                    10: {\n                        style: {\n                            width: '30px'\n                        },\n                        label: '10'\n                    }\n                }\n            },\n            checked_currency_group: {\n                checked0: false,\n                checked1: false,\n                checked2: false,\n                checked3: false,\n                checked4: false,\n\n                checked9: false,\n                checked10: false,\n\n                checked12: false,\n\n                checked27: false,\n                checked28: false,\n\n                checked50: false\n            },\n            checked_field_group: {\n                checked11: false,\n                checked24: false,\n                checked25: false,\n                checked35: false,\n                checked36: false,\n                checked37: false,\n                checked38: false,\n                checked41: false,\n                checked42: false,\n                checked43: false,\n                checked44: false,\n\n                checked48: false,\n                checked49: false,\n\n                checked52: false\n            },\n            activeNames: [null],\n            activeName: 'first',\n            form: {\n                augmentation_method_name: '',\n                augmentation_type_name: '',\n                params: 1,\n                file: {}\n            },\n            FormRules: {\n                // // 验证用户名是否合法\n                // name: [{ required: true, message: '任务名不可为空', trigger: 'blur' }],\n                // // 验证密码是否合法\n                // augmentation_method: [{ required: true, message: '生成方法不可为空', trigger: 'blur' }]\n            },\n            // loadingMethod: false,\n            methods: [],\n            fileList: [],\n            typeList: [],\n            value: [],\n            options: [\n                {\n                    value: 'Universal Metamorphic Methods',\n                    label: 'Universal Metamorphic Methods',\n                    children: [\n                        {\n                            value: 'Gaussian Noise',\n                            label: 'Gaussian Noise'\n                        },\n                        {\n                            value: 'Random Erase',\n                            label: 'Random Erase'\n                        },\n                        {\n                            value: 'Fuzzy',\n                            label: 'Fuzzy'\n                        }\n                    ]\n                },\n                {\n                    value: 'Domanial Metamorphic Methods',\n                    label: 'Domanial Metamorphic Methods',\n                    children: [\n                        {\n                            value: 'Sequence Transformation',\n                            label: 'Sequence Transformation'\n                        },\n                        {\n                            value: 'Zooming',\n                            label: 'Zooming'\n                        }\n                    ]\n                }\n            ]\n        };\n    },\n    methods: {\n        clickfiletemp() {\n            document.getElementById('filetemp').click();\n        },\n        reloadPage() {\n            this.reload();\n        },\n\n        handleChange(value) {\n            console.log(value);\n            this.form.augmentation_type_name = value[0];\n            this.form.augmentation_method_name = value[1];\n            console.log('this.form.augmentation_type_name:', this.form.augmentation_type_name);\n            console.log('this.form.augmentation_method_name:', this.form.augmentation_method_name);\n        },\n        // 发送添加任务申请\n        onSubmit() {\n            this.loading = true;\n            this.form.master = this.$store.state.userId;\n            this.$refs.formRef.validate(async valid => {\n                if (1) {\n                    var adddata = new FormData();\n\n                    // name\n                    if (this.form.augmentation_type_name) {\n                        adddata.append('augmentation_type_name', this.form.augmentation_type_name);\n                    } else {\n                        this.loading = false;\n                        return this.$message.error('Please select the method! ');\n                    }\n\n                    if (this.form.augmentation_method_name) {\n                        adddata.append('augmentation_method_name', this.form.augmentation_method_name);\n                    } else {\n                        this.loading = false;\n                        return this.$message.error('Please select the method! ');\n                    }\n\n                    adddata.append('params', this.form.params);\n\n                    // file\n                    this.form.file = document.getElementById('filetemp').files[0];\n                    if (this.form.file) {\n                        adddata.append('file', this.form.file);\n                    } else {\n                        this.loading = false;\n                        return this.$message.error('Please upload the file! ');\n                    }\n\n                    for (var [a, b] of adddata.entries()) {\n                        console.log(a, b);\n                    }\n\n                    const { data: data } = await this.$http({\n                        url: '/uploadwave',\n                        data: adddata,\n                        method: 'post'\n                        // dataType: 'jsonp'\n                        // header(\"Access-Control-Allow-Origin: *\");\n                    });\n\n                    // this.$http({\n                    //     type: 'POST',\n                    //     url: '/uploadwave',\n                    //     data: adddata,\n                    //     dataType: 'jsonp', //改成了jsonp格式，解决了跨域访问的问题\n                    //     success: function(data) {\n                    //         console.log(data);\n                    //     }\n                    // });\n\n                    console.log('data:', data);\n                    this.$message.success('提交成功！');\n                    // 重置表单\n\n                    console.log('重置表单');\n                    this.reload();\n                    // this.$store.commit('storeToken', data.data.token);\n                }\n            });\n        },\n        // 上传文件[this.form.file赋值]\n        fileLoad() {\n            const selectedFile = this.$refs.image_t_file_ref.files[0];\n\n            let fileName = selectedFile.name;\n            let pos = fileName.lastIndexOf('.');\n            let lastName = fileName.substring(pos, fileName.length);\n            console.log(lastName, lastName.toLowerCase());\n            console.log('lastName:', lastName);\n            if (lastName.toLowerCase() !== '.json') {\n                this.$message.error('文件必须为 .json 类型');\n                // this.$refs.lidar_t_file_ref.clearFiles;\n                this.$refs.image_t_file_ref.value = ''; // 清空file文件\n                // return false;\n            } else {\n                this.form.file = selectedFile;\n                var str = document.getElementById('filetemp').value;\n                str = str.split('\\\\')[str.split('\\\\').length - 1];\n                document.getElementById('inputFileAgent').value = str;\n            }\n        },\n        clickLoad() {\n            this.$refs.refFile.dispatchEvent(new MouseEvent('click'));\n        }\n    }\n};\n",{"version":3,"sources":["Image_T_AugTaskAdd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Image_T_AugTaskAdd.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item> <i class=\"el-icon-picture\"></i> Welcome to ElsMed! </el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <div class=\"container\">\n            <div>\n                <el-row :gutter=\"20\">\n                    <el-form ref=\"formRef\" :model=\"form\" :rules=\"FormRules\" label-width=\"100px\">\n                        <!-- <el-form-item label=\"Task Name\" prop=\"name\">\n                            <el-input v-model=\"form.name\" style=\"width: 500px\"></el-input>\n                        </el-form-item> -->\n\n                        <el-form-item label=\"Method\">\n                            <div class=\"block\">\n                                <el-cascader\n                                    style=\"width: 350px\"\n                                    v-model=\"method_value\"\n                                    :options=\"options\"\n                                    :props=\"{ expandTrigger: 'hover' }\"\n                                    @change=\"handleChange\"\n                                    placeholder=\"Select the method\"\n                                ></el-cascader>\n                            </div>\n                        </el-form-item>\n\n                        <el-form-item label=\"Params\">\n                            <div class=\"block\">\n                                <el-slider\n                                    v-model=\"form.params\"\n                                    :min=\"1\"\n                                    :max=\"10\"\n                                    :step=\"1\"\n                                    :marks=\"mark_group.marks1_10\"\n                                    style=\"width: 300px\"\n                                >\n                                </el-slider>\n                            </div>\n                        </el-form-item>\n\n                        <!-- <el-form-item label=\"上传文件\">\n                            <input type=\"file\" id=\"filetemp\" prop=\"form.file\" ref=\"image_t_file_ref\" @change=\"fileLoad\" />\n                        </el-form-item> -->\n\n                        <el-form-item label=\"Upload file\">\n                            <input\n                                type=\"file\"\n                                id=\"filetemp\"\n                                prop=\"form.file\"\n                                ref=\"image_t_file_ref\"\n                                style=\"display:none\"\n                                @change=\"fileLoad\"\n                            />\n                            <input type=\"text\" value=\"\" style=\"width: 200px\" disabled id=\"inputFileAgent\" />\n                            <input type=\"button\" @click=\"clickfiletemp\" value=\"Browse...\" />\n                            <br />\n                        </el-form-item>\n\n                        <!-- <el-form-item label=\"参数说明\">\n                            <el-input type=\"textarea\" v-model=\"form.desc\" autosize disabled></el-input>\n                        </el-form-item> -->\n                        <el-form-item>\n                            <el-button type=\"primary\" @click=\"onSubmit\">Submit</el-button>\n                            <el-button type=\"primary\" @click=\"onSubmit\">DownLoad</el-button>\n                            <el-button type=\"primary\" @click=\"onSubmit\">Preview</el-button>\n                            <el-button type=\"primary\" @click=\"onSubmit\">Reset</el-button>\n                        </el-form-item>\n                    </el-form>\n                </el-row>\n                <!-- </el-row> -->\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport qs from 'qs';\n\nexport default {\n    name: 'baseform',\n    inject: ['reload'],\n    data() {\n        // var checkMethod = (rule, value, callback) => {\n        //     console.log('method:' + value);\n        //     if (value === '') {\n        //         return callback(new Error('生成方法不能为空'));\n        //     }\n        // };\n        return {\n            method_value: [],\n            type_value: '',\n            temp: [1, 1],\n            temp_marks: {\n                0: '0',\n                100: '100'\n            },\n            mark_group: {\n                marks1_10: {\n                    1: '1',\n                    10: {\n                        style: {\n                            width: '30px'\n                        },\n                        label: '10'\n                    }\n                }\n            },\n            checked_currency_group: {\n                checked0: false,\n                checked1: false,\n                checked2: false,\n                checked3: false,\n                checked4: false,\n\n                checked9: false,\n                checked10: false,\n\n                checked12: false,\n\n                checked27: false,\n                checked28: false,\n\n                checked50: false\n            },\n            checked_field_group: {\n                checked11: false,\n                checked24: false,\n                checked25: false,\n                checked35: false,\n                checked36: false,\n                checked37: false,\n                checked38: false,\n                checked41: false,\n                checked42: false,\n                checked43: false,\n                checked44: false,\n\n                checked48: false,\n                checked49: false,\n\n                checked52: false\n            },\n            activeNames: [null],\n            activeName: 'first',\n            form: {\n                augmentation_method_name: '',\n                augmentation_type_name: '',\n                params: 1,\n                file: {}\n            },\n            FormRules: {\n                // // 验证用户名是否合法\n                // name: [{ required: true, message: '任务名不可为空', trigger: 'blur' }],\n                // // 验证密码是否合法\n                // augmentation_method: [{ required: true, message: '生成方法不可为空', trigger: 'blur' }]\n            },\n            // loadingMethod: false,\n            methods: [],\n            fileList: [],\n            typeList: [],\n            value: [],\n            options: [\n                {\n                    value: 'Universal Metamorphic Methods',\n                    label: 'Universal Metamorphic Methods',\n                    children: [\n                        {\n                            value: 'Gaussian Noise',\n                            label: 'Gaussian Noise'\n                        },\n                        {\n                            value: 'Random Erase',\n                            label: 'Random Erase'\n                        },\n                        {\n                            value: 'Fuzzy',\n                            label: 'Fuzzy'\n                        }\n                    ]\n                },\n                {\n                    value: 'Domanial Metamorphic Methods',\n                    label: 'Domanial Metamorphic Methods',\n                    children: [\n                        {\n                            value: 'Sequence Transformation',\n                            label: 'Sequence Transformation'\n                        },\n                        {\n                            value: 'Zooming',\n                            label: 'Zooming'\n                        }\n                    ]\n                }\n            ]\n        };\n    },\n    methods: {\n        clickfiletemp() {\n            document.getElementById('filetemp').click();\n        },\n        reloadPage() {\n            this.reload();\n        },\n\n        handleChange(value) {\n            console.log(value);\n            this.form.augmentation_type_name = value[0];\n            this.form.augmentation_method_name = value[1];\n            console.log('this.form.augmentation_type_name:', this.form.augmentation_type_name);\n            console.log('this.form.augmentation_method_name:', this.form.augmentation_method_name);\n        },\n        // 发送添加任务申请\n        onSubmit() {\n            this.loading = true;\n            this.form.master = this.$store.state.userId;\n            this.$refs.formRef.validate(async valid => {\n                if (1) {\n                    var adddata = new FormData();\n\n                    // name\n                    if (this.form.augmentation_type_name) {\n                        adddata.append('augmentation_type_name', this.form.augmentation_type_name);\n                    } else {\n                        this.loading = false;\n                        return this.$message.error('Please select the method! ');\n                    }\n\n                    if (this.form.augmentation_method_name) {\n                        adddata.append('augmentation_method_name', this.form.augmentation_method_name);\n                    } else {\n                        this.loading = false;\n                        return this.$message.error('Please select the method! ');\n                    }\n\n                    adddata.append('params', this.form.params);\n\n                    // file\n                    this.form.file = document.getElementById('filetemp').files[0];\n                    if (this.form.file) {\n                        adddata.append('file', this.form.file);\n                    } else {\n                        this.loading = false;\n                        return this.$message.error('Please upload the file! ');\n                    }\n\n                    for (var [a, b] of adddata.entries()) {\n                        console.log(a, b);\n                    }\n\n                    const { data: data } = await this.$http({\n                        url: '/uploadwave',\n                        data: adddata,\n                        method: 'post'\n                        // dataType: 'jsonp'\n                        // header(\"Access-Control-Allow-Origin: *\");\n                    });\n\n                    // this.$http({\n                    //     type: 'POST',\n                    //     url: '/uploadwave',\n                    //     data: adddata,\n                    //     dataType: 'jsonp', //改成了jsonp格式，解决了跨域访问的问题\n                    //     success: function(data) {\n                    //         console.log(data);\n                    //     }\n                    // });\n\n                    console.log('data:', data);\n                    this.$message.success('提交成功！');\n                    // 重置表单\n\n                    console.log('重置表单');\n                    this.reload();\n                    // this.$store.commit('storeToken', data.data.token);\n                }\n            });\n        },\n        // 上传文件[this.form.file赋值]\n        fileLoad() {\n            const selectedFile = this.$refs.image_t_file_ref.files[0];\n\n            let fileName = selectedFile.name;\n            let pos = fileName.lastIndexOf('.');\n            let lastName = fileName.substring(pos, fileName.length);\n            console.log(lastName, lastName.toLowerCase());\n            console.log('lastName:', lastName);\n            if (lastName.toLowerCase() !== '.json') {\n                this.$message.error('文件必须为 .json 类型');\n                // this.$refs.lidar_t_file_ref.clearFiles;\n                this.$refs.image_t_file_ref.value = ''; // 清空file文件\n                // return false;\n            } else {\n                this.form.file = selectedFile;\n                var str = document.getElementById('filetemp').value;\n                str = str.split('\\\\')[str.split('\\\\').length - 1];\n                document.getElementById('inputFileAgent').value = str;\n            }\n        },\n        clickLoad() {\n            this.$refs.refFile.dispatchEvent(new MouseEvent('click'));\n        }\n    }\n};\n</script>\n\n<style scoped>\n.marginRight {\n    margin-right: 10px !important;\n}\n</style>\n"]}]}