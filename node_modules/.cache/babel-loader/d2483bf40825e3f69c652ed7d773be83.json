{"remainingRequest":"E:\\LidarPlatformFrontend-main\\node_modules\\babel-loader\\lib\\index.js!E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-main\\src\\components\\page\\card_methods.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-main\\src\\components\\page\\card_methods.vue","mtime":1636256393082},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:/LidarPlatformFrontend-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      OnlineUsersNum: 0,\n      RunningTask_final: [],\n      Lidar_A: -1,\n      Lidar_T: -1,\n      Image_A: -1,\n      Image_T: -1\n    };\n  },\n  methods: {\n    getRunningTask: function () {\n      var _getRunningTask = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('/system_status/running_task/');\n\n              case 2:\n                _yield$this$$http$get = _context.sent;\n                data = _yield$this$$http$get.data;\n                // console.log('getRunningTask_data:', data);\n                console.log('getRunningTaskdata:', data);\n\n                if (!(data.code !== 20000)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: '获取正在运行各生成任务失败！' + '错误原因：' + data.msg,\n                  offset: 70\n                }));\n\n              case 7:\n                this.RunningTask = data.data;\n                this.Lidar_A = data.data['FGSM-激光雷达'] + data.data['I-FGSM(BIM)-激光雷达'] + data.data['JSMA-激光雷达'];\n                this.Lidar_T = data.data['场景物体旋转蜕变-激光雷达'] + data.data['场景物体添加蜕变-激光雷达'] + data.data['极端场景蜕变-激光雷达'];\n                this.Image_A = data.data['FGSM-合成孔径雷达'] + data.data['I-FGSM(BIM)-合成孔径雷达'] + data.data['JSMA-合成孔径雷达'] + data.data['SIMBA-合成孔径雷达'];\n                this.Image_T = data.data['通用蜕变系列方法-合成孔径雷达'] + data.data['领域蜕变系列方法-合成孔径雷达']; // console.log('Lidar_A, Lidar_T, Image_A, Image_T:', this.Lidar_A, this.Lidar_T, this.Image_A, this.Image_T);\n                // console.log('data.data[\"FGSM-激光雷达\"]:', data.data['FGSM-激光雷达']);\n                // console.log('data.data[\"I-FGSM(BIM)-激光雷达\"]:', data.data['I-FGSM(BIM)-激光雷达']);\n                // console.log('data.data[\"JSMA-激光雷达\"]:', data.data['JSMA-激光雷达']);\n                // this.RunningTask_name = Object.keys(this.RunningTask);\n                // this.RunningTask_num = Object.values(this.RunningTask);\n                // let rf = [];\n                // for (var i = 0; i < this.RunningTask_name.length; i++) {\n                //     var x = {};\n                //     x.name = this.RunningTask_name[i];\n                //     x.num = this.RunningTask_num[i];\n                //     rf.push(x);\n                // }\n                // this.RunningTask_final = rf;\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getRunningTask() {\n        return _getRunningTask.apply(this, arguments);\n      }\n\n      return getRunningTask;\n    }(),\n    getOnlineUser: function () {\n      var _getOnlineUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$$http$get2, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get('/system_status/online_user/');\n\n              case 2:\n                _yield$this$$http$get2 = _context2.sent;\n                data = _yield$this$$http$get2.data;\n\n                if (!(data.code !== 20000)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: '获取在线人数失败！' + '错误原因：' + data.msg,\n                  offset: 70\n                }));\n\n              case 6:\n                this.OnlineUsersNum = data.data.online_user;\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getOnlineUser() {\n        return _getOnlineUser.apply(this, arguments);\n      }\n\n      return getOnlineUser;\n    }()\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.getOnlineUser();\n    this.getRunningTask();\n    this.timer = setInterval(function () {\n      _this.getOnlineUser();\n\n      _this.getRunningTask();\n    }, 1000 * 60);\n  }\n};",{"version":3,"sources":["card_methods.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <!-- 方法信息 -->\n        <el-card shadow=\"hover\" style=\"height: 360px\">\n            <!-- <el-card shadow=\"hover\" :body-style=\"{ padding: '0px' }\">\n                <div class=\"grid-content grid-con-1\">\n                    <img src=\"../../assets/peoples.png\" class=\"lidarPic\" alt=\"\" />\n                    <div class=\"grid-cont-right\">\n                        <div class=\"grid-num\" :title=\"OnlineUsersNum\">{{ OnlineUsersNum }}</div>\n                        <div>在线用户</div>\n                    </div>\n                </div>\n            </el-card> -->\n            <el-card shadow=\"hover\" style=\"margin: 8px 0\" :body-style=\"{ padding: '0px' }\">\n                <div class=\"grid-content grid-con-1\">\n                    <img src=\"../../assets/FGSM.png\" class=\"lidarPic\" alt=\"\" />\n                    <div class=\"grid-cont-right\">\n                        <div class=\"grid-num\">{{ Lidar_A }}</div>\n                        <div>{{ '激光雷达对抗' }}</div>\n                    </div>\n                </div>\n            </el-card>\n            <el-card shadow=\"hover\" style=\"margin: 8px 0\" :body-style=\"{ padding: '0px' }\">\n                <div class=\"grid-content grid-con-2\">\n                    <img src=\"../../assets/lidar_t.png\" class=\"lidarPic\" alt=\"\" />\n                    <div class=\"grid-cont-right\">\n                        <div class=\"grid-num\">{{ Lidar_T }}</div>\n                        <div>{{ '激光雷达蜕变' }}</div>\n                    </div>\n                </div>\n            </el-card>\n            <el-card shadow=\"hover\" style=\"margin: 8px 0\" :body-style=\"{ padding: '0px' }\">\n                <div class=\"grid-content grid-con-3\">\n                    <img src=\"../../assets/BIM.png\" class=\"lidarPic\" alt=\"\" />\n                    <div class=\"grid-cont-right\">\n                        <div class=\"grid-num\">{{ Image_A }}</div>\n                        <div>{{ '合成孔径雷达对抗' }}</div>\n                    </div>\n                </div>\n            </el-card>\n            <el-card shadow=\"hover\" style=\"margin: 8px 0\" :body-style=\"{ padding: '0px' }\">\n                <div class=\"grid-content grid-con-4\">\n                    <img src=\"../../assets/JSMA.png\" class=\"lidarPic\" alt=\"\" />\n                    <div class=\"grid-cont-right\">\n                        <div class=\"grid-num\">{{ Image_T }}</div>\n                        <div>{{ '合成孔径雷达蜕变' }}</div>\n                    </div>\n                </div>\n            </el-card>\n        </el-card>\n    </div>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            OnlineUsersNum: 0,\n            RunningTask_final: [],\n            Lidar_A: -1,\n            Lidar_T: -1,\n            Image_A: -1,\n            Image_T: -1\n        };\n    },\n    methods: {\n        async getRunningTask() {\n            const { data: data } = await this.$http.get('/system_status/running_task/');\n            // console.log('getRunningTask_data:', data);\n            console.log('getRunningTaskdata:', data);\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '获取正在运行各生成任务失败！' + '错误原因：' + data.msg,\n                    offset: 70\n                });\n            }\n            this.RunningTask = data.data;\n            this.Lidar_A = data.data['FGSM-激光雷达'] + data.data['I-FGSM(BIM)-激光雷达'] + data.data['JSMA-激光雷达'];\n            this.Lidar_T =\n                data.data['场景物体旋转蜕变-激光雷达'] + data.data['场景物体添加蜕变-激光雷达'] + data.data['极端场景蜕变-激光雷达'];\n            this.Image_A =\n                data.data['FGSM-合成孔径雷达'] +\n                data.data['I-FGSM(BIM)-合成孔径雷达'] +\n                data.data['JSMA-合成孔径雷达'] +\n                data.data['SIMBA-合成孔径雷达'];\n            this.Image_T = data.data['通用蜕变系列方法-合成孔径雷达'] + data.data['领域蜕变系列方法-合成孔径雷达'];\n            // console.log('Lidar_A, Lidar_T, Image_A, Image_T:', this.Lidar_A, this.Lidar_T, this.Image_A, this.Image_T);\n            // console.log('data.data[\"FGSM-激光雷达\"]:', data.data['FGSM-激光雷达']);\n            // console.log('data.data[\"I-FGSM(BIM)-激光雷达\"]:', data.data['I-FGSM(BIM)-激光雷达']);\n            // console.log('data.data[\"JSMA-激光雷达\"]:', data.data['JSMA-激光雷达']);\n            // this.RunningTask_name = Object.keys(this.RunningTask);\n            // this.RunningTask_num = Object.values(this.RunningTask);\n            // let rf = [];\n            // for (var i = 0; i < this.RunningTask_name.length; i++) {\n            //     var x = {};\n            //     x.name = this.RunningTask_name[i];\n            //     x.num = this.RunningTask_num[i];\n            //     rf.push(x);\n            // }\n            // this.RunningTask_final = rf;\n        },\n        async getOnlineUser() {\n            const { data: data } = await this.$http.get('/system_status/online_user/');\n            if (data.code !== 20000) {\n                return this.$message.error({\n                    showClose: true,\n                    message: '获取在线人数失败！' + '错误原因：' + data.msg,\n                    offset: 70\n                });\n            }\n            this.OnlineUsersNum = data.data.online_user;\n        }\n    },\n    mounted() {\n        this.getOnlineUser();\n        this.getRunningTask();\n        this.timer = setInterval(() => {\n            this.getOnlineUser();\n            this.getRunningTask();\n        }, 1000 * 60);\n    }\n};\n</script>\n<style scoped>\n.el-card {\n    border-radius: 3%;\n}\n.el-row {\n    margin-bottom: 20px;\n}\n.grid-content {\n    display: flex;\n    align-items: center;\n    height: 70px;\n}\n.grid-cont-right {\n    flex: 1;\n    text-align: center;\n    font-size: 14px;\n    color: #999;\n}\n.grid-num {\n    font-size: 30px;\n    font-weight: bold;\n}\n.grid-con-icon {\n    font-size: 50px;\n    width: 70px;\n    height: 100px;\n    text-align: center;\n    line-height: 100px;\n    color: #fff;\n}\n.grid-con-1 .grid-con-icon {\n    background: rgb(45, 140, 240);\n}\n.grid-con-1 .grid-num {\n    color: rgb(45, 140, 240);\n}\n.grid-con-2 .grid-con-icon {\n    background: rgb(100, 213, 114);\n}\n.grid-con-2 .grid-num {\n    color: rgb(100, 213, 114);\n}\n.grid-con-3 .grid-con-icon {\n    background: #e6a23c;\n}\n.grid-con-3 .grid-num {\n    color: #e6a23c;\n}\n.grid-con-4 .grid-con-icon {\n    background: #f56c6c;\n}\n.grid-con-4 .grid-num {\n    color: #f56c6c;\n}\n.lidarPic {\n    width: 50px;\n    height: 50px;\n    text-align: center;\n    margin-left: 8px;\n}\n.table-icon {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: 35px;\n    background: #f4f4f5;\n    width: 100%;\n    height: 100px;\n    border-radius: 4px;\n}\n.table-icon:hover {\n    background: lightgrey;\n}\na {\n    color: rgb(83, 83, 83);\n    text-decoration: none;\n}\n</style>\n"],"sourceRoot":"src/components/page"}]}