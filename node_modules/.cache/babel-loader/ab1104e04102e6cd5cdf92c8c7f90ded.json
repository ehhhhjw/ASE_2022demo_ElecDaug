{"remainingRequest":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js!/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/src/components/page/Lidar_A_AugTaskAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/src/components/page/Lidar_A_AugTaskAdd.vue","mtime":1637414022000},{"path":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _slicedToArray from \"/Users/hejiawei/Desktop/\\u4E94\\u6708/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/hejiawei/Desktop/\\u4E94\\u6708/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport qs from 'qs';\nexport default {\n  name: 'baseform',\n  inject: ['reload'],\n  data: function data() {\n    var generate_per_file_and_paramsRule = function generate_per_file_and_paramsRule(rule, value, callback) {\n      if (value < 1) {\n        callback(new Error('只能为大于等于1整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNum = function isNum(rule, value, callback) {\n      var age = /^[0-9]*$/;\n\n      if (!age.test(value)) {\n        callback(new Error('只能为非负数字'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNotNag = function isNotNag(rule, value, callback) {\n      if (value < 0) {\n        callback(new Error('只能为非负数'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      mark_group: {\n        marks1_2: {\n          1: '1',\n          2: '2'\n        },\n        marks0001_2: {\n          0.001: '0.001',\n          2: '2'\n        },\n        marks0001_1: {\n          0.001: '0.001',\n          1: '1'\n        },\n        marks1_100: {\n          1: '1',\n          100: '100'\n        },\n        marks1_1000: {\n          1: '1',\n          1000: '1000'\n        },\n        marks1_15000: {\n          1: '1',\n          15000: '15000'\n        },\n        marks0_5: {\n          0: '0',\n          5: '5'\n        },\n        marks1_5: {\n          1: '1',\n          5: '5'\n        }\n      },\n      loading: false,\n      form: {\n        name: '',\n        augmentation_method: null,\n        epsilon: '',\n        domains: [{\n          value: 0\n        }],\n        ite_epsilon2: null,\n        ite_epsilon3: null,\n        ite_limit: null,\n        whether_to_rotate: false,\n        generate_per_file_and_params: null,\n        generate_per_file: null,\n        boundary_constraint: null,\n        strict_mode: false,\n        master: this.$store.state.userId,\n        urgency_level: 0,\n        file: {}\n      },\n      methods: [],\n      fileList: [],\n      typeList: [],\n      params_id: 0,\n      is_available_to_submit: true // rules1: {\n      //     augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }]\n      //     // epsilon: [\n      //     //     { required: true, message: '不能为空', trigger: 'blur' },\n      //     //     { validator: epsilonRule, trigger: 'blur' }\n      //     // ],\n      //     // generate_per_file_and_params: [\n      //     //     { required: true, message: '请输入数字', trigger: 'blur' },\n      //     //     { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n      //     //     { validator: isNum, trigger: 'blur' }\n      //     // ],\n      //     // urgency_level: [\n      //     //     { required: true, message: '请输入数字', trigger: 'blur' },\n      //     //     { validator: isNotNag_int, trigger: 'blur' }\n      //     // ]\n      // },\n      // rules2: {\n      //     augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n      //     ite_epsilon2: [\n      //         { required: true, message: '请输入数字', trigger: 'blur' },\n      //         { validator: isNotNag, trigger: 'blur' }\n      //     ],\n      //     ite_limit: [\n      //         { required: true, message: '请输入数字', trigger: 'blur' },\n      //         { validator: isNum, trigger: 'blur' }\n      //     ],\n      //     generate_per_file: [\n      //         { required: true, message: '请输入数字', trigger: 'blur' },\n      //         { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n      //         { validator: isNum, trigger: 'blur' }\n      //     ]\n      // },\n      // rules3: {\n      //     augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n      //     ite_epsilon3: [\n      //         { required: true, message: '请输入数字', trigger: 'blur' },\n      //         { validator: isNotNag, trigger: 'blur' }\n      //     ],\n      //     ite_limit: [\n      //         { required: true, message: '请输入数字', trigger: 'blur' },\n      //         { validator: isNum, trigger: 'blur' }\n      //     ],\n      //     generate_per_file: [\n      //         { required: true, message: '请输入数字', trigger: 'blur' },\n      //         { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n      //         { validator: isNum, trigger: 'blur' }\n      //     ],\n      //     boundary_constraint: [\n      //         { required: true, message: '请输入数字', trigger: 'blur' },\n      //         { validator: isNotNag, trigger: 'blur' }\n      //     ]\n      // }\n\n    };\n  },\n  computed: {\n    rulesList: function rulesList() {\n      if (this.params_id === 1) {\n        return this.rules1;\n      } else if (this.params_id === 2) {\n        return this.rules2;\n      } else {\n        return this.rules3;\n      }\n    }\n  },\n  methods: {\n    clickfiletemp: function clickfiletemp() {\n      document.getElementById('filetemp').click();\n    },\n    resetForm: function resetForm(formName) {\n      console.log('formName:', formName);\n      this.form.domains = [{\n        value: 0\n      }];\n    },\n    removeDomain: function removeDomain(item) {\n      if (this.form.domains.length == 1) {\n        this.$message.error('扰动幅度不可为空!');\n      } else {\n        var item_index = this.form.domains.indexOf(item);\n\n        if (item_index !== -1) {\n          this.form.domains.splice(item_index, 1);\n        }\n      }\n    },\n    addDomain: function addDomain() {\n      this.form.domains.push({\n        value: 0,\n        key: Date.now()\n      });\n    },\n    trim: function trim(str) {\n      return str.replace(/(^s*)|(s*$)/g, '');\n    },\n    onSubmit: function onSubmit() {\n      var _this = this;\n\n      this.loading = true;\n      this.form.master = this.$store.state.userId, this.$refs.formRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(valid) {\n          var adddata, temp_params, temp, x, _iterator, _step, _step$value, a, b, _yield$_this$$http, data;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!valid) {\n                    _context.next = 35;\n                    break;\n                  }\n\n                  if (!(_this.form.augmentation_method === '')) {\n                    _context.next = 4;\n                    break;\n                  }\n\n                  _this.loading = false;\n                  return _context.abrupt(\"return\", _this.$message.error('请选择生成方法!'));\n\n                case 4:\n                  adddata = new FormData();\n\n                  if (_this.form.name) {\n                    adddata.append('name', _this.form.name);\n                  }\n\n                  adddata.append('augmentation_method', _this.form.augmentation_method);\n                  adddata.append('master', _this.form.master);\n                  adddata.append('urgency_level', _this.form.urgency_level + '');\n                  temp_params = {};\n\n                  if (_this.form.augmentation_method === 1) {\n                    temp = [];\n\n                    for (x in _this.form.domains) {\n                      console.log('this.form.domains[x][\"value\"]:', _this.form.domains[x]['value']);\n                      temp.push(_this.form.domains[x]['value']);\n                    }\n\n                    temp_params.epsilon = '[' + temp.toString() + ']'; // console.log(\"'[' + this.form.epsilon + ']':\", '[' + this.form.epsilon + ']');\n\n                    temp_params = {\n                      epsilon: temp_params.epsilon,\n                      whether_to_rotate: _this.form.whether_to_rotate,\n                      generate_per_file_and_params: _this.form.generate_per_file_and_params,\n                      strict_mode: _this.form.strict_mode\n                    };\n                  } else if (_this.form.augmentation_method === 2) {\n                    temp_params = {\n                      ite_epsilon: _this.form.ite_epsilon2 + '',\n                      ite_limit: _this.form.ite_limit + '',\n                      whether_to_rotate: _this.form.whether_to_rotate,\n                      generate_per_file: _this.form.generate_per_file + '',\n                      strict_mode: _this.form.strict_mode\n                    };\n                  } else if (_this.form.augmentation_method === 3) {\n                    temp_params = {\n                      ite_epsilon: _this.form.ite_epsilon3 + '',\n                      ite_limit: _this.form.ite_limit + '',\n                      whether_to_rotate: _this.form.whether_to_rotate,\n                      generate_per_file: _this.form.generate_per_file + '',\n                      boundary_constraint: _this.form.boundary_constraint + '',\n                      strict_mode: _this.form.strict_mode\n                    };\n                  }\n\n                  temp_params.whether_to_rotate = _this.form.whether_to_rotate ? '1' : '0';\n                  temp_params.strict_mode = _this.form.strict_mode ? '1' : '0';\n                  temp_params = JSON.stringify(temp_params);\n                  adddata.append('params', temp_params);\n                  _this.form.file = document.getElementById('filetemp').files[0];\n\n                  if (!_this.form.file) {\n                    _context.next = 20;\n                    break;\n                  }\n\n                  adddata.append('file', _this.form.file);\n                  _context.next = 22;\n                  break;\n\n                case 20:\n                  _this.loading = false;\n                  return _context.abrupt(\"return\", _this.$message.error('请上传文件！'));\n\n                case 22:\n                  _iterator = _createForOfIteratorHelper(adddata.entries());\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      _step$value = _slicedToArray(_step.value, 2), a = _step$value[0], b = _step$value[1];\n                      console.log(a, b);\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  _context.next = 26;\n                  return _this.$http({\n                    url: '/task/',\n                    data: adddata,\n                    method: 'post'\n                  });\n\n                case 26:\n                  _yield$_this$$http = _context.sent;\n                  data = _yield$_this$$http.data;\n\n                  if (!(data.code !== 20000)) {\n                    _context.next = 31;\n                    break;\n                  }\n\n                  _this.loading = false;\n                  return _context.abrupt(\"return\", _this.$message.error('添加生成任务失败！' + '错误原因：' + data.msg));\n\n                case 31:\n                  _this.$message.success('提交成功！');\n\n                  _this.reload();\n\n                  _context.next = 36;\n                  break;\n\n                case 35:\n                  _this.loading = false;\n\n                case 36:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    methodChanged: function () {\n      var _methodChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(method_id) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.params_id = method_id;\n                this.form.augmentation_method = this.params_id;\n                this.is_available_to_submit = false;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function methodChanged(_x2) {\n        return _methodChanged.apply(this, arguments);\n      }\n\n      return methodChanged;\n    }(),\n    fileLoad: function fileLoad() {\n      var selectedFile = this.$refs.lidar_t_file_ref.files[0]; // console.log('selectedFile:', selectedFile);\n\n      if (selectedFile == undefined) {\n        document.getElementById('inputFileAgent').value = '';\n      } else {\n        var fileName = selectedFile.name;\n        var pos = fileName.lastIndexOf('.');\n        var lastName = fileName.substring(pos, fileName.length);\n        console.log(lastName, lastName.toLowerCase());\n        console.log('lastName:', lastName);\n\n        if (pos != -1 && lastName.toLowerCase() !== '.zip') {\n          this.$message.error({\n            showClose: true,\n            message: 'The type of uploaded file is limited to no suffix or \".zip\".',\n            offset: 70\n          }); // this.$refs.lidar_t_file_ref.clearFiles;\n\n          this.$refs.lidar_t_file_ref.value = ''; // 清空file文件\n\n          return false;\n        }\n\n        this.form.file = selectedFile;\n        var str = document.getElementById('filetemp').value;\n        str = str.split('\\\\')[str.split('\\\\').length - 1];\n        document.getElementById('inputFileAgent').value = str;\n      }\n    },\n    clickLoad: function clickLoad() {\n      this.$refs.refFile.dispatchEvent(new MouseEvent('click'));\n    },\n    getTypeList: function () {\n      var _getTypeList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$http.get('/augmentation_type/');\n\n              case 2:\n                _yield$this$$http$get = _context3.sent;\n                data = _yield$this$$http$get.data;\n\n                if (!(data.code !== 20000)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('获取任务列表失败！' + '错误原因：' + data.msg));\n\n              case 6:\n                this.typeList = data.data;\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getTypeList() {\n        return _getTypeList.apply(this, arguments);\n      }\n\n      return getTypeList;\n    }()\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var id, _yield$this$$http$get2, data;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n              id = 1;\n              _context4.next = 4;\n              return this.$http.get('/augmentation_method/?augmentation_type=' + id);\n\n            case 4:\n              _yield$this$$http$get2 = _context4.sent;\n              data = _yield$this$$http$get2.data;\n\n              if (!(data.code === 45000)) {\n                _context4.next = 8;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", this.$message.error('该生成类型暂无方法！'));\n\n            case 8:\n              if (!(data.code !== 20000)) {\n                _context4.next = 10;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", this.$message.error('查询生成方法失败！' + '错误原因：' + data.msg));\n\n            case 10:\n              this.methods = data.data.filter(function (item) {\n                return item.augmentation_type_id === id;\n              });\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  created: function created() {\n    this.getTypeList();\n  }\n};",{"version":3,"sources":["Lidar_A_AugTaskAdd.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"container\">\n            <div class=\"form-box\">\n                <el-form ref=\"formRef\" :model=\"form\" :rules=\"rulesList\" label-width=\"120px\">\n                    <el-form-item label=\"Task Name\" prop=\"name\">\n                        <el-input v-model=\"form.name\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"Augmentation Type\">\n                        <el-select v-model=\"form.augmentation_method\" placeholder=\"Please select augmentation type\" @change=\"methodChanged\">\n                            <el-option v-for=\"item in this.methods\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"> </el-option>\n                        </el-select>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id == 1 || params_id == 2 || params_id == 3\" label=\"Urgency Level\">\n                        <div style=\"float: left; margin-right: 5px; width:300px\">\n                            <!-- <el-input type=\"text\" v-model=\"form.urgency_level\"></el-input> -->\n                            <el-slider v-model=\"form.urgency_level\" :min=\"1\" :max=\"5\" :step=\"1\" :marks=\"mark_group.marks1_5\"> </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"Description of Urgency level:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"The urgency of the task, the system will schedule the task according to the urgency level.\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id == 1\" label=\"扰动幅度\" prop=\"epsilon\">\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"扰动幅度:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示攻击中对点云参数的扰动值，此处可批量设置\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                        <div class=\"block\" style=\"float: left; margin-right: 5px; width: 450px\">\n                            <!-- <el-input type=\"text\" v-model=\"form.epsilon\"></el-input> -->\n                            <el-form-item\n                                v-for=\"(domain, index) in form.domains\"\n                                :label=\"'幅度' + (index + 1)\"\n                                :key=\"domain.key\"\n                                label-width=\"50px\"\n                            >\n                                <el-slider\n                                    v-model=\"domain.value\"\n                                    show-input\n                                    :min=\"0.001\"\n                                    :max=\"2\"\n                                    :step=\"0.001\"\n                                    :marks=\"mark_group.marks0001_2\"\n                                >\n                                </el-slider\n                                ><el-button @click.prevent=\"removeDomain(domain)\" style=\"margin-left: 20px\">delete</el-button>\n                            </el-form-item>\n                            <el-form-item>\n                                <el-button @click=\"addDomain()\">新增幅度</el-button>\n                                <el-button @click=\"resetForm('form')\">reset</el-button>\n                            </el-form-item>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id == 2\" label=\"单步扰动幅度\">\n                        <div style=\"float: left; margin-right: 5px; width:400px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.ite_epsilon2\"></el-input> -->\n                            <el-slider\n                                v-model=\"form.ite_epsilon2\"\n                                show-input\n                                :min=\"0.001\"\n                                :max=\"1\"\n                                :step=\"0.001\"\n                                :marks=\"mark_group.marks0001_1\"\n                            >\n                            </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"单步扰动幅度:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示迭代攻击中每步对点云参数的扰动值\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id == 3\" label=\"单步扰动幅度\">\n                        <div style=\"float: left; margin-right: 5px; width:400px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.ite_epsilon3\"></el-input> -->\n                            <el-slider\n                                v-model=\"form.ite_epsilon3\"\n                                show-input\n                                :min=\"0.001\"\n                                :max=\"2\"\n                                :step=\"0.001\"\n                                :marks=\"mark_group.marks0001_2\"\n                            >\n                            </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"单步扰动幅度:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示迭代攻击中每步对点云参数的扰动值\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id == 2 || params_id == 3\" label=\"扰动次数上限\">\n                        <div style=\"float: left; margin-right: 5px; width:400px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.ite_limit\"></el-input> -->\n                            <el-slider\n                                v-if=\"params_id == 2\"\n                                v-model=\"form.ite_limit\"\n                                show-input\n                                :min=\"1\"\n                                :max=\"1000\"\n                                :step=\"1\"\n                                :marks=\"mark_group.marks1_1000\"\n                            >\n                            </el-slider>\n                            <el-slider\n                                v-if=\"params_id == 3\"\n                                v-model=\"form.ite_limit\"\n                                show-input\n                                :min=\"1\"\n                                :max=\"15000\"\n                                :step=\"1\"\n                                :marks=\"mark_group.marks1_15000\"\n                            >\n                            </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"扰动次数上限:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示可对点云单步扰动的最大次数\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id == 1 || params_id == 2 || params_id == 3\" label=\"是否旋转\">\n                        <div style=\"float: left; margin-right: 5px\">\n                            <el-switch v-model=\"form.whether_to_rotate\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"是否旋转:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示是否允许点云旋转\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id == 1\" label=\"单文件生成数量\">\n                        <div style=\"float: left; margin-right: 5px; width: 400px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.generate_per_file_and_params\"></el-input> -->\n                            <el-slider\n                                v-model=\"form.generate_per_file_and_params\"\n                                show-input\n                                :min=\"1\"\n                                :max=\"100\"\n                                :step=\"1\"\n                                :marks=\"mark_group.marks1_100\"\n                            >\n                            </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"单文件生成数量及参数:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示每个参数及点云所期望生成的点云数量\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id == 2 || params_id == 3\" label=\"单文件生成数量\">\n                        <div style=\"float: left; margin-right: 5px; width:400px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.generate_per_file\"></el-input> -->\n                            <el-slider\n                                v-model=\"form.generate_per_file\"\n                                show-input\n                                :min=\"1\"\n                                :max=\"100\"\n                                :step=\"1\"\n                                :marks=\"mark_group.marks1_100\"\n                            >\n                            </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"单文件生成数量:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示每个文件所期望的扩增数量\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id == 3\" label=\"边界约束\">\n                        <div style=\"float: left; margin-right: 5px; width:400px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.boundary_constraint\"></el-input> -->\n                            <el-slider\n                                v-model=\"form.boundary_constraint\"\n                                show-input\n                                :min=\"1\"\n                                :max=\"2\"\n                                :step=\"0.001\"\n                                :marks=\"mark_group.marks1_2\"\n                            >\n                            </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"边界约束:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示点云能扰动的最大比例\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id == 1 || params_id == 2 || params_id == 3\" label=\"严格模式\">\n                        <div style=\"float: left; margin-right: 5px\">\n                            <el-switch v-model=\"form.strict_mode\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"严格模式:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示是否是严格模式(“是”，表示生成结果必须使得模型做出错误判断才算扩增数据；“否”，表示直接经过参数设定生成的数据即视为扩增数据)\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id == 1 || params_id == 2 || params_id == 3\" label=\"Upload file\">\n                        <input type=\"file\" id=\"filetemp\" prop=\"form.file\" ref=\"lidar_t_file_ref\" style=\"display:none\" @change=\"fileLoad\" />\n                        <input type=\"text\" value=\"\" disabled id=\"inputFileAgent\" />\n                        <input type=\"button\" @click=\"clickfiletemp\" value=\"Browse...\" />\n                        <el-popover\n                            placement=\"right-start\"\n                            title=\"The upload file type required by this method is limited to no suffix or '.zip'\"\n                            width=\"200\"\n                            trigger=\"hover\"\n                            style=\"white-space: pre-wrap\"\n                        >\n                        </el-popover>\n                        <br />\n                    </el-form-item>\n\n                    <!-- <el-form-item v-if=\"params_id == 1 || params_id == 2 || params_id == 3\" label=\"上传文件\">\n                        <input type=\"file\" id=\"filetemp\" prop=\"form.file\" ref=\"lidar_a_file_ref\" @change=\"fileLoad\" />\n                        <el-popover\n                            placement=\"right-start\"\n                            title=\"上传文件:\"\n                            width=\"200\"\n                            trigger=\"hover\"\n                            content=\"该方法所需上传文件类型限制为 无后缀/.zip 类型\"\n                        >\n                            <i class=\"el-icon-info\" slot=\"reference\"></i>\n                        </el-popover>\n                        <br />\n                    </el-form-item> -->\n                    <el-form-item>\n                        <el-button\n                            type=\"primary\"\n                            :disabled=\"is_available_to_submit\"\n                            @click=\"onSubmit\"\n                            :loading=\"loading\"\n                            element-loading-spinner=\"el-icon-loading\"\n                            element-loading-text=\"Submitting\"\n                            >Submit</el-button\n                        >\n                        <!-- <el-button type=\"primary\" :disabled=\"is_available_to_submit\" @click=\"onSubmit\">表单提交</el-button> -->\n                    </el-form-item>\n                </el-form>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport qs from 'qs';\nexport default {\n    name: 'baseform',\n    inject: ['reload'],\n    data() {\n        const generate_per_file_and_paramsRule = (rule, value, callback) => {\n            if (value < 1) {\n                callback(new Error('只能为大于等于1整数'));\n            } else {\n                callback();\n            }\n        };\n        const isNum = (rule, value, callback) => {\n            const age = /^[0-9]*$/;\n            if (!age.test(value)) {\n                callback(new Error('只能为非负数字'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag = (rule, value, callback) => {\n            if (value < 0) {\n                callback(new Error('只能为非负数'));\n            } else {\n                callback();\n            }\n        };\n        return {\n            mark_group: {\n                marks1_2: {\n                    1: '1',\n                    2: '2'\n                },\n                marks0001_2: {\n                    0.001: '0.001',\n                    2: '2'\n                },\n                marks0001_1: {\n                    0.001: '0.001',\n                    1: '1'\n                },\n                marks1_100: {\n                    1: '1',\n                    100: '100'\n                },\n                marks1_1000: {\n                    1: '1',\n                    1000: '1000'\n                },\n                marks1_15000: {\n                    1: '1',\n                    15000: '15000'\n                },\n                marks0_5: {\n                    0: '0',\n                    5: '5'\n                },\n                marks1_5: {\n                    1: '1',\n                    5: '5'\n                }\n            },\n            loading: false,\n            form: {\n                name: '',\n                augmentation_method: null,\n                epsilon: '',\n                domains: [\n                    {\n                        value: 0\n                    }\n                ],\n\n                ite_epsilon2: null,\n                ite_epsilon3: null,\n                ite_limit: null,\n                whether_to_rotate: false,\n                generate_per_file_and_params: null,\n                generate_per_file: null,\n                boundary_constraint: null,\n                strict_mode: false,\n\n                master: this.$store.state.userId,\n                urgency_level: 0,\n                file: {}\n            },\n            methods: [],\n            fileList: [],\n            typeList: [],\n            params_id: 0,\n            is_available_to_submit: true\n            // rules1: {\n            //     augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }]\n            //     // epsilon: [\n            //     //     { required: true, message: '不能为空', trigger: 'blur' },\n            //     //     { validator: epsilonRule, trigger: 'blur' }\n            //     // ],\n            //     // generate_per_file_and_params: [\n            //     //     { required: true, message: '请输入数字', trigger: 'blur' },\n            //     //     { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n            //     //     { validator: isNum, trigger: 'blur' }\n            //     // ],\n            //     // urgency_level: [\n            //     //     { required: true, message: '请输入数字', trigger: 'blur' },\n            //     //     { validator: isNotNag_int, trigger: 'blur' }\n            //     // ]\n            // },\n            // rules2: {\n            //     augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n            //     ite_epsilon2: [\n            //         { required: true, message: '请输入数字', trigger: 'blur' },\n            //         { validator: isNotNag, trigger: 'blur' }\n            //     ],\n            //     ite_limit: [\n            //         { required: true, message: '请输入数字', trigger: 'blur' },\n            //         { validator: isNum, trigger: 'blur' }\n            //     ],\n            //     generate_per_file: [\n            //         { required: true, message: '请输入数字', trigger: 'blur' },\n            //         { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n            //         { validator: isNum, trigger: 'blur' }\n            //     ]\n            // },\n            // rules3: {\n            //     augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n            //     ite_epsilon3: [\n            //         { required: true, message: '请输入数字', trigger: 'blur' },\n            //         { validator: isNotNag, trigger: 'blur' }\n            //     ],\n            //     ite_limit: [\n            //         { required: true, message: '请输入数字', trigger: 'blur' },\n            //         { validator: isNum, trigger: 'blur' }\n            //     ],\n            //     generate_per_file: [\n            //         { required: true, message: '请输入数字', trigger: 'blur' },\n            //         { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n            //         { validator: isNum, trigger: 'blur' }\n            //     ],\n            //     boundary_constraint: [\n            //         { required: true, message: '请输入数字', trigger: 'blur' },\n            //         { validator: isNotNag, trigger: 'blur' }\n            //     ]\n            // }\n        };\n    },\n    computed: {\n        rulesList: function() {\n            if (this.params_id === 1) {\n                return this.rules1;\n            } else if (this.params_id === 2) {\n                return this.rules2;\n            } else {\n                return this.rules3;\n            }\n        }\n    },\n    methods: {\n        clickfiletemp() {\n            document.getElementById('filetemp').click();\n        },\n        resetForm(formName) {\n            console.log('formName:', formName);\n\n            this.form.domains = [\n                {\n                    value: 0\n                }\n            ];\n        },\n        removeDomain(item) {\n            if (this.form.domains.length == 1) {\n                this.$message.error('扰动幅度不可为空!');\n            } else {\n                var item_index = this.form.domains.indexOf(item);\n                if (item_index !== -1) {\n                    this.form.domains.splice(item_index, 1);\n                }\n            }\n        },\n        addDomain() {\n            this.form.domains.push({\n                value: 0,\n                key: Date.now()\n            });\n        },\n        trim(str) {\n            return str.replace(/(^s*)|(s*$)/g, '');\n        },\n        onSubmit() {\n            this.loading = true;\n            (this.form.master = this.$store.state.userId),\n                this.$refs.formRef.validate(async valid => {\n                    if (valid) {\n                        if (this.form.augmentation_method === '') {\n                            this.loading = false;\n                            return this.$message.error('请选择生成方法!');\n                        }\n\n                        var adddata = new FormData();\n                        if (this.form.name) {\n                            adddata.append('name', this.form.name);\n                        }\n                        adddata.append('augmentation_method', this.form.augmentation_method);\n                        adddata.append('master', this.form.master);\n                        adddata.append('urgency_level', this.form.urgency_level + '');\n                        var temp_params = {};\n                        if (this.form.augmentation_method === 1) {\n                            var temp = [];\n                            for (var x in this.form.domains) {\n                                console.log('this.form.domains[x][\"value\"]:', this.form.domains[x]['value']);\n                                temp.push(this.form.domains[x]['value']);\n                            }\n                            temp_params.epsilon = '[' + temp.toString() + ']';\n                            // console.log(\"'[' + this.form.epsilon + ']':\", '[' + this.form.epsilon + ']');\n                            temp_params = {\n                                epsilon: temp_params.epsilon,\n                                whether_to_rotate: this.form.whether_to_rotate,\n                                generate_per_file_and_params: this.form.generate_per_file_and_params,\n                                strict_mode: this.form.strict_mode\n                            };\n                        } else if (this.form.augmentation_method === 2) {\n                            temp_params = {\n                                ite_epsilon: this.form.ite_epsilon2 + '',\n                                ite_limit: this.form.ite_limit + '',\n                                whether_to_rotate: this.form.whether_to_rotate,\n                                generate_per_file: this.form.generate_per_file + '',\n                                strict_mode: this.form.strict_mode\n                            };\n                        } else if (this.form.augmentation_method === 3) {\n                            temp_params = {\n                                ite_epsilon: this.form.ite_epsilon3 + '',\n                                ite_limit: this.form.ite_limit + '',\n                                whether_to_rotate: this.form.whether_to_rotate,\n                                generate_per_file: this.form.generate_per_file + '',\n                                boundary_constraint: this.form.boundary_constraint + '',\n                                strict_mode: this.form.strict_mode\n                            };\n                        }\n                        temp_params.whether_to_rotate = this.form.whether_to_rotate ? '1' : '0';\n                        temp_params.strict_mode = this.form.strict_mode ? '1' : '0';\n\n                        temp_params = JSON.stringify(temp_params);\n                        adddata.append('params', temp_params);\n                        this.form.file = document.getElementById('filetemp').files[0];\n\n                        if (this.form.file) {\n                            adddata.append('file', this.form.file);\n                        } else {\n                            this.loading = false;\n                            return this.$message.error('请上传文件！');\n                        }\n\n                        for (var [a, b] of adddata.entries()) {\n                            console.log(a, b);\n                        }\n                        const { data: data } = await this.$http({\n                            url: '/task/',\n                            data: adddata,\n                            method: 'post'\n                        });\n                        if (data.code !== 20000) {\n                            this.loading = false;\n                            return this.$message.error('添加生成任务失败！' + '错误原因：' + data.msg);\n                        }\n                        this.$message.success('提交成功！');\n                        this.reload();\n                    } else {\n                        this.loading = false;\n                    }\n                });\n        },\n        async methodChanged(method_id) {\n            this.params_id = method_id;\n            this.form.augmentation_method = this.params_id;\n\n            this.is_available_to_submit = false;\n        },\n        fileLoad() {\n            const selectedFile = this.$refs.lidar_t_file_ref.files[0];\n            // console.log('selectedFile:', selectedFile);\n            if (selectedFile == undefined) {\n                document.getElementById('inputFileAgent').value = '';\n            } else {\n                let fileName = selectedFile.name;\n                let pos = fileName.lastIndexOf('.');\n                let lastName = fileName.substring(pos, fileName.length);\n                console.log(lastName, lastName.toLowerCase());\n                console.log('lastName:', lastName);\n                if (pos != -1 && lastName.toLowerCase() !== '.zip') {\n                    this.$message.error({\n                        showClose: true,\n                        message: 'The type of uploaded file is limited to no suffix or \".zip\".',\n                        offset: 70\n                    });\n                    // this.$refs.lidar_t_file_ref.clearFiles;\n                    this.$refs.lidar_t_file_ref.value = ''; // 清空file文件\n                    return false;\n                }\n\n                this.form.file = selectedFile;\n                var str = document.getElementById('filetemp').value;\n                str = str.split('\\\\')[str.split('\\\\').length - 1];\n                document.getElementById('inputFileAgent').value = str;\n            }\n        },\n        clickLoad() {\n            this.$refs.refFile.dispatchEvent(new MouseEvent('click'));\n        },\n        async getTypeList() {\n            const { data: data } = await this.$http.get('/augmentation_type/');\n            if (data.code !== 20000) {\n                return this.$message.error('获取任务列表失败！' + '错误原因：' + data.msg);\n            }\n\n            this.typeList = data.data;\n        }\n    },\n    async mounted() {\n        this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n\n        var id = 1;\n        const { data: data } = await this.$http.get('/augmentation_method/?augmentation_type=' + id);\n        if (data.code === 45000) {\n            return this.$message.error('该生成类型暂无方法！');\n        }\n        if (data.code !== 20000) {\n            return this.$message.error('查询生成方法失败！' + '错误原因：' + data.msg);\n        }\n        this.methods = data.data.filter(item => {\n            return item.augmentation_type_id === id;\n        });\n    },\n    created() {\n        this.getTypeList();\n    }\n};\n</script>\n<style scoped>\n.marginRight {\n    margin-right: 10px !important;\n}\n</style>\n"],"sourceRoot":"src/components/page"}]}