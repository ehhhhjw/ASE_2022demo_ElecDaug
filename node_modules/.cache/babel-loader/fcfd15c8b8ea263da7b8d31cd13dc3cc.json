{"remainingRequest":"E:\\LidarPlatformFrontend-main\\node_modules\\babel-loader\\lib\\index.js!E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-main\\src\\components\\page\\Image_A_AugTaskList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-main\\src\\components\\page\\Image_A_AugTaskList.vue","mtime":1628741922000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _slicedToArray from \"E:/LidarPlatformFrontend-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:/LidarPlatformFrontend-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/LidarPlatformFrontend-main/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"E:/LidarPlatformFrontend-main/node_modules/@babel/runtime/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as echarts from 'echarts';\nimport 'echarts-gl';\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport vTable from \"./Table.vue\";\nexport default {\n  data: function data() {\n    var _ref;\n\n    var isNotNag_int_urg = function isNotNag_int_urg(rule, value, callback) {\n      var boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n      if (value !== 0 && !boolean) {\n        callback(new Error('请输入非负整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNotNag_int = function isNotNag_int(rule, value, callback) {\n      var boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n      if (value !== '0' && !boolean) {\n        callback(new Error('请输入非负整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var generate_per_file_and_paramsRule = function generate_per_file_and_paramsRule(rule, value, callback) {\n      if (value < 1) {\n        callback(new Error('只能为大于等于1整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNum = function isNum(rule, value, callback) {\n      var age = /^[0-9]*$/;\n\n      if (!age.test(value)) {\n        callback(new Error('只能为非负数字'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNotNag = function isNotNag(rule, value, callback) {\n      if (value < 0) {\n        callback(new Error('只能为非负数'));\n      } else {\n        callback();\n      }\n    };\n\n    var epsilonRule = function epsilonRule(rule, value, callback) {\n      value = value.replace('[', '');\n      value = value.replace(']', '');\n      value = value.replace('，', ',');\n      var list = value.split(',');\n\n      for (var i in list) {\n        if (!_typeof(parseFloat(list[i])) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n          callback(new Error('请填写合理的非负数字列表'));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    return _ref = {\n      ite_limit_bili_marks: {\n        1: '1%',\n        100: {\n          style: {\n            width: '50px'\n          },\n          label: '100%'\n        }\n      },\n      directional: [{\n        value: '0',\n        label: '定向',\n        children: [{\n          value: '0',\n          label: '2S1'\n        }, {\n          value: '1',\n          label: 'BMP2'\n        }, {\n          value: '2',\n          label: 'BRDM_2'\n        }, {\n          value: '3',\n          label: 'BTR60'\n        }, {\n          value: '4',\n          label: 'BTR70'\n        }, {\n          value: '5',\n          label: 'D7'\n        }, {\n          value: '6',\n          label: 'T62'\n        }, {\n          value: '7',\n          label: 'T72'\n        }, {\n          value: '8',\n          label: 'ZIL131'\n        }, {\n          value: '9',\n          label: 'ZSU_23_4'\n        }]\n      }, {\n        value: '10',\n        label: '非定向',\n        children: [{\n          // Guassian_noise\n          value: '10',\n          label: '随机'\n        }]\n      }],\n      directional_id: [null, null],\n      mark_group: {\n        mark1_50: {\n          1: '1',\n          50: {\n            style: {\n              width: '20px'\n            },\n            label: '50'\n          }\n        },\n        mark0: {\n          0: '0'\n        },\n        mark01_255: {\n          0.1: '0.1',\n          255: {\n            style: {\n              width: '50px'\n            },\n            label: '255'\n          }\n        },\n        marks0_5: {\n          0: '0',\n          5: '5'\n        },\n        marks1_5: {\n          1: '1',\n          5: '5'\n        }\n      },\n      radio_epsilon_4: '1',\n      radio_epsilon_5: '1',\n      radio_epsilon_6: '1',\n      radio_epsilon_7: '1',\n      full_loading_flag: false,\n      generate_func_self: '',\n      generate_func_all: '',\n      generate_func_list: [],\n      queryInfo_Self: {\n        page: 1\n      },\n      taskList_Self: [],\n      total_Self: 0,\n      formInline_Self: {\n        searchType: '',\n        searchTaskInfo: ''\n      },\n      editDialogSelfVisible: false,\n      domain_4: [{\n        value: 0\n      }],\n      domain_5: [{\n        value: 0\n      }],\n      domain_6: [{\n        value: 0\n      }],\n      domain_7: [{\n        value: 0\n      }],\n      range_epsilon_7: [0.1, 0.1],\n      range_epsilon_4: [0.1, 0.1],\n      range_epsilon_5: [0.1, 0.1],\n      range_epsilon_6: [0.1, 0.1],\n      editForm_Self: {\n        task_id: 0,\n        master: this.$store.getters.userId,\n        name: '',\n        params: '',\n        file: {},\n        augmentation_method_name: '',\n        epsilon_7: null,\n        epsilon_4: null,\n        epsilon_5: null,\n        epsilon_6: null\n      },\n      editFormSelfRules: {\n        name: [{\n          required: true,\n          message: '请输入任务名',\n          trigger: 'blur'\n        }]\n      },\n      queryInfo_All: {\n        page: 1\n      },\n      taskList_All: [],\n      total_All: 0,\n      formInline_All: {\n        searchType: '',\n        searchTaskInfo: ''\n      },\n      editDialogAllVisible: false,\n      editForm_All: {},\n      editFormAllRules: {\n        name: [{\n          required: true,\n          message: '请输入任务名',\n          trigger: 'blur'\n        }]\n      },\n      FuzzySearch: 1,\n      activeName: 'self'\n    }, _defineProperty(_ref, \"taskList_All\", []), _defineProperty(_ref, \"userRight\", ''), _defineProperty(_ref, \"methodDialogSelfVisible\", false), _defineProperty(_ref, \"methodDetail\", []), _defineProperty(_ref, \"mohu\", true), _defineProperty(_ref, \"fileName\", ''), _defineProperty(_ref, \"preview_value\", []), _defineProperty(_ref, \"preview_options\", []), _defineProperty(_ref, \"previewDialogVisible\", false), _defineProperty(_ref, \"loading\", true), _defineProperty(_ref, \"original_files_zip\", null), _defineProperty(_ref, \"generate_files_zip\", null), _defineProperty(_ref, \"originalPointCloudData\", []), _defineProperty(_ref, \"generatePointCloudData\", []), _defineProperty(_ref, \"maxAxisValue\", -10000), _defineProperty(_ref, \"minAxisValue\", 10000), _defineProperty(_ref, \"original_is_Zip\", false), _defineProperty(_ref, \"generate_is_Zip\", false), _defineProperty(_ref, \"original_fileContent\", ''), _defineProperty(_ref, \"generate_fileContent\", ''), _defineProperty(_ref, \"original_blob\", null), _defineProperty(_ref, \"generate_blob\", null), _defineProperty(_ref, \"test_text\", 'djshdkjdhkadh'), _defineProperty(_ref, \"change_axios_buttom\", false), _defineProperty(_ref, \"editForm\", {}), _defineProperty(_ref, \"rules1\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: epsilonRule,\n        trigger: 'blur'\n      }],\n      generate_per_file_and_params: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"rules2\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      ite_epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      ite_limit: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      generate_per_file: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"rules3\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      ite_epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      ite_limit: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      generate_per_file: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      boundary_constraint: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"originalpicture\", null), _defineProperty(_ref, \"generatepicture\", null), _defineProperty(_ref, \"tempurl\", null), _ref;\n  },\n  components: {\n    vTable: vTable\n  },\n  computed: {\n    rulesList: function rulesList() {\n      if (this.editForm_Self.augmentation_method_name === 'FGSM') {\n        return this.rules1;\n      } else if (this.editForm_Self.augmentation_method_name === 'JSMA') {\n        return this.rules3;\n      } else {\n        return this.rules2;\n      }\n    }\n  },\n  created: function created() {\n    this.userRight = window.sessionStorage.getItem('user_group_name');\n    this.getTaskList_Self();\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var data;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n              _context.next = 3;\n              return this.$http.get('/augmentation_method/?augmentation_type=3');\n\n            case 3:\n              data = _context.sent;\n              // ?id=1\n              console.log('data:', data);\n              this.generate_func_list = data.data.data; // console.log('this.generate_func_list:', this.generate_func_list);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    resetForm: function resetForm(formName, index) {\n      console.log('formName:', formName); // this.$refs[formName].resetFields();\n\n      if (index == 4) {\n        this.domain_4 = [{\n          value: 0\n        }];\n      } else if (index == 5) {\n        this.domain_5 = [{\n          value: 0\n        }];\n      } else if (index == 6) {\n        this.domain_6 = [{\n          value: 0\n        }];\n      } else if (index == 7) {\n        this.domain_7 = [{\n          value: 0\n        }];\n      }\n    },\n    removeDomain: function removeDomain(item, index) {\n      if (index == 4) {\n        if (this.domain_4.length == 1) {\n          this.$message.error('扰动幅度不可为空!');\n        } else {\n          var item_index = this.domain_4.indexOf(item);\n\n          if (item_index !== -1) {\n            this.domain_4.splice(item_index, 1);\n          }\n        }\n      } else if (index == 5) {\n        if (this.domain_5.length == 1) {\n          this.$message.error('单步扰动幅度不可为空!');\n        } else {\n          var item_index = this.domain_5.indexOf(item);\n\n          if (item_index !== -1) {\n            this.domain_5.splice(item_index, 1);\n          }\n        }\n      } else if (index == 6) {\n        if (this.domain_6.length == 1) {\n          this.$message.error('单步扰动幅度不可为空!');\n        } else {\n          var item_index = this.domain_6.indexOf(item);\n\n          if (item_index !== -1) {\n            this.domain_6.splice(item_index, 1);\n          }\n        }\n      } else if (index == 7) {\n        if (this.domain_7.length == 1) {\n          this.$message.error('单步扰动幅度不可为空!');\n        } else {\n          var item_index = this.domain_7.indexOf(item);\n\n          if (item_index !== -1) {\n            this.domain_7.splice(item_index, 1);\n          }\n        }\n      }\n    },\n    addDomain: function addDomain(index) {\n      if (index == 4) {\n        this.domain_4.push({\n          value: 0,\n          key: Date.now()\n        });\n      } else if (index == 5) {\n        this.domain_5.push({\n          value: 0,\n          key: Date.now()\n        });\n      } else if (index == 6) {\n        this.domain_6.push({\n          value: 0,\n          key: Date.now()\n        });\n      } else if (index == 7) {\n        this.domain_7.push({\n          value: 0,\n          key: Date.now()\n        });\n      }\n    },\n    previewClose: function previewClose() {\n      this.originalpicture = null;\n      this.generatepicture = null;\n    },\n    // >>>>>>>>>el-tab部分>>>>>>>>>>>>>>>.\n    handleClick: function handleClick(tab, event) {\n      if (tab.index === '1') {\n        this.getTaskList_All();\n      }\n    },\n    // >>>>>>>>>>>>>获取任务列表以及查询部分>>>>>>>>>>>>>>>\n    // 获取子组件getList指令\n    handleSelectClear: function handleSelectClear() {\n      this.getTaskList_Self();\n      this.generate_func_self = '';\n    },\n    handleGetList: function handleGetList(data) {\n      if (!data) {\n        this.getTaskList_Self();\n      } else {\n        this.getTaskList_All();\n      }\n    },\n    getTaskList_Self: function () {\n      var _getTaskList_Self = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get('/task/augmentation_type/search/?augmentation_type=3&page=' + this.queryInfo_Self.page);\n\n              case 2:\n                _yield$this$$http$get = _context2.sent;\n                data = _yield$this$$http$get.data;\n\n                if (!(data.code !== 20000)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                if (!(data.code === 40400)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                console.log('data:', data);\n                this.taskList_Self = [];\n                this.totalPageNum = 0;\n                this.total_Self = 0;\n                return _context2.abrupt(\"return\", this.$message.error('本用户未添加任务！'));\n\n              case 11:\n                return _context2.abrupt(\"return\", this.$message.error('获取本用户任务列表失败！'));\n\n              case 12:\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages; // if (this.queryInfo_Self.page > this.totalPageNum) {\n                //     this.queryInfo_Self.page = this.totalPageNum;\n                // }\n                // console.log('this.taskList_Self:', this.taskList_Self);\n\n                this.total_Self = this.totalPageNum * 10;\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getTaskList_Self() {\n        return _getTaskList_Self.apply(this, arguments);\n      }\n\n      return getTaskList_Self;\n    }(),\n    SearchTask_Self: function () {\n      var _SearchTask_Self = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var flag, search_params, _yield$this$$http$get2, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.formInline_Self.searchType === '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('请输入查询方式！'));\n\n              case 2:\n                flag = 0;\n                search_params = '';\n\n                if (!(this.formInline_Self.searchType === '生成方法')) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                // search_params = '/task/augmentation_method/search/?augmentation_method=' + this.formInline_Self.searchTaskInfo;\n                search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self + '&page=' + this.queryInfo_Self.page;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                console.log('this.queryInfo_Self.page:', this.queryInfo_Self.page);\n                _context3.next = 13;\n                break;\n\n              case 10:\n                if (!(this.formInline_Self.searchTaskInfo === '')) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('请输入搜索内容！'));\n\n              case 12:\n                if (this.formInline_Self.searchType === '任务名称') {\n                  search_params = '/task/name/search/?augmentation_type=3&task_name=' + this.formInline_Self.searchTaskInfo + '&search_type=' + this.FuzzySearch + '&page=' + this.queryInfo_Self.page;\n                } else {\n                  search_params = '/task/id/search/?augmentation_type=3&task_id=' + this.formInline_Self.searchTaskInfo + '&page=' + this.queryInfo_Self.page;\n                }\n\n              case 13:\n                _context3.next = 15;\n                return this.$http.get(search_params);\n\n              case 15:\n                _yield$this$$http$get2 = _context3.sent;\n                data = _yield$this$$http$get2.data;\n                console.log('data:', data);\n\n                if (!(data.code !== 20000)) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return _context3.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 22:\n                if (this.formInline_Self.searchType === '任务id') {\n                  flag = 1;\n                  this.taskList_Self = [];\n                  this.taskList_Self.push(data.data);\n                } else {\n                  this.taskList_Self = data.data.details;\n                }\n\n                console.log('data:', data); // this.total_Self = this.taskList_Self ? this.taskList_Self.length : 0;\n\n                this.totalPageNum = data.data.pages; // if (this.queryInfo_Self.page > this.totalPageNum) {\n                //     this.queryInfo_Self.page = this.totalPageNum;\n                // }\n\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n\n                if (flag) {\n                  this.total_Self = this.taskList_Self.length;\n                }\n\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function SearchTask_Self() {\n        return _SearchTask_Self.apply(this, arguments);\n      }\n\n      return SearchTask_Self;\n    }(),\n    // 获取所有用户任务列表\n    getTaskList_All: function () {\n      var _getTaskList_All = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$this$$http$get3, data, _yield$this$$http$get4, _data, _yield$this$$http$get5, _data2, _yield$this$$http$get6, _data3, _yield$this$$http$get7, _data4, _yield$this$$http$get8, _data5, _yield$this$$http$get9, _data6;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log('this.generate_func_all:', this.generate_func_all);\n                console.log('this.formInline_All.searchType:', this.formInline_All.searchType);\n\n                if (!(this.formInline_All.searchType !== '生成方法' && (this.formInline_All.searchType === '' || this.formInline_All.searchTaskInfo === ''))) {\n                  _context4.next = 23;\n                  break;\n                }\n\n                _context4.next = 5;\n                return this.$http.get('/task/augmentation_type/admin/search/?augmentation_type=3&page=' + this.queryInfo_All.page);\n\n              case 5:\n                _yield$this$$http$get3 = _context4.sent;\n                data = _yield$this$$http$get3.data;\n\n                if (!(data.code == 40400)) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                console.log('data:', data);\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('所有用户都未添加任务！'));\n\n              case 13:\n                if (!(data.code !== 20000)) {\n                  _context4.next = 18;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[所有用户]！' + '错误原因：' + data.msg));\n\n              case 18:\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 118;\n                break;\n\n              case 23:\n                if (!(this.formInline_All.searchType === '用户id')) {\n                  _context4.next = 38;\n                  break;\n                }\n\n                _context4.next = 26;\n                return this.$http.get('/task/augmentation_type/admin/search/' + '?augmentation_type=3&page=' + this.queryInfo_All.page + '&user_id=' + this.formInline_All.searchTaskInfo);\n\n              case 26:\n                _yield$this$$http$get4 = _context4.sent;\n                _data = _yield$this$$http$get4.data;\n\n                if (!(_data.code !== 20000)) {\n                  _context4.next = 33;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[用户id]！' + '错误原因：' + _data.msg));\n\n              case 33:\n                this.taskList_All = _data.data.details;\n                this.totalPageNum = _data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 118;\n                break;\n\n              case 38:\n                if (!(this.formInline_All.searchType === '任务名称')) {\n                  _context4.next = 54;\n                  break;\n                }\n\n                _context4.next = 41;\n                return this.$http.get('/task/name/admin/search/' + '?augmentation_type=3&page=' + this.queryInfo_All.page + '&task_name=' + this.formInline_All.searchTaskInfo + '&search_type=' + this.FuzzySearch);\n\n              case 41:\n                _yield$this$$http$get5 = _context4.sent;\n                _data2 = _yield$this$$http$get5.data;\n                console.log('data:', _data2);\n\n                if (!(_data2.code !== 20000)) {\n                  _context4.next = 49;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[任务名称]！' + '错误原因：' + _data2.msg));\n\n              case 49:\n                this.taskList_All = _data2.data.details;\n                this.totalPageNum = _data2.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 118;\n                break;\n\n              case 54:\n                if (!(this.formInline_All.searchType === '任务id')) {\n                  _context4.next = 72;\n                  break;\n                }\n\n                _context4.next = 57;\n                return this.$http.get('/task/id/admin/search/' + '?augmentation_type=3&page=' + this.queryInfo_All.page + '&task_id=' + this.formInline_All.searchTaskInfo);\n\n              case 57:\n                _yield$this$$http$get6 = _context4.sent;\n                _data3 = _yield$this$$http$get6.data;\n\n                if (!(_data3.code !== 20000)) {\n                  _context4.next = 64;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[任务id]！' + '错误原因：' + _data3.msg));\n\n              case 64:\n                console.log('data:', _data3);\n                console.log('this.taskList_All:', this.taskList_All);\n                this.taskList_Self = [];\n                this.taskList_Self.push(_data3.data.details);\n                this.totalPageNum = _data3.data.pages; // this.total_All = this.taskList_All;\n\n                this.total_All = this.taskList_All.length;\n                _context4.next = 118;\n                break;\n\n              case 72:\n                if (!(this.formInline_All.searchType === '生成类型id')) {\n                  _context4.next = 87;\n                  break;\n                }\n\n                _context4.next = 75;\n                return this.$http.get('/task/augmentation_type/admin/search/' + '?page=' + this.queryInfo_All.page + '&augmentation_type=' + this.formInline_All.searchTaskInfo);\n\n              case 75:\n                _yield$this$$http$get7 = _context4.sent;\n                _data4 = _yield$this$$http$get7.data;\n\n                if (!(_data4.code !== 20000)) {\n                  _context4.next = 82;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[生成类型]！' + '错误原因：' + _data4.msg));\n\n              case 82:\n                this.taskList_All = _data4.data.details;\n                this.totalPageNum = _data4.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 118;\n                break;\n\n              case 87:\n                if (!(this.formInline_All.searchType === '生成方法')) {\n                  _context4.next = 104;\n                  break;\n                }\n\n                console.log('here,this.generate_func_all22222:', this.generate_func_all);\n                _context4.next = 91;\n                return this.$http.get('/task/augmentation_method/admin/search/' + '?page=' + this.queryInfo_All.page + '&augmentation_method=' + this.generate_func_all);\n\n              case 91:\n                _yield$this$$http$get8 = _context4.sent;\n                _data5 = _yield$this$$http$get8.data;\n                console.log('data:', _data5);\n\n                if (!(_data5.code !== 20000)) {\n                  _context4.next = 99;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[生成方法]！' + '错误原因：' + _data5.msg));\n\n              case 99:\n                this.taskList_All = _data5.data.details;\n                this.totalPageNum = _data5.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 118;\n                break;\n\n              case 104:\n                if (!(this.formInline_All.searchType === '用户名')) {\n                  _context4.next = 118;\n                  break;\n                }\n\n                _context4.next = 107;\n                return this.$http.get('/task/master/admin/search/' + '?augmentation_type=3&page=' + this.queryInfo_All.page + '&username=' + this.formInline_All.searchTaskInfo + '&search_type=' + this.FuzzySearch);\n\n              case 107:\n                _yield$this$$http$get9 = _context4.sent;\n                _data6 = _yield$this$$http$get9.data;\n\n                if (!(_data6.code !== 20000)) {\n                  _context4.next = 114;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[用户名]！' + '错误原因：' + _data6.msg));\n\n              case 114:\n                this.taskList_All = _data6.data.details;\n                this.totalPageNum = _data6.data.pages;\n                console.log('this.taskList_All:', this.taskList_All);\n                this.total_All = this.totalPageNum * 10;\n\n              case 118:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getTaskList_All() {\n        return _getTaskList_All.apply(this, arguments);\n      }\n\n      return getTaskList_All;\n    }(),\n    generate_change: function () {\n      var _generate_change = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(type) {\n        var search_params, _yield$this$$http$get10, data, _search_params, _yield$this$$http$get11, _data7;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(type == '本用户')) {\n                  _context5.next = 20;\n                  break;\n                }\n\n                search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                _context5.next = 5;\n                return this.$http.get(search_params);\n\n              case 5:\n                _yield$this$$http$get10 = _context5.sent;\n                data = _yield$this$$http$get10.data;\n\n                if (!(data.code !== 20000)) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return _context5.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 11:\n                console.log('data:', data);\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n                console.log('this.total_Self:', this.total_Self);\n                console.log('this.totalPageNum:', this.totalPageNum);\n                _context5.next = 33;\n                break;\n\n              case 20:\n                _search_params = '/task/augmentation_method/admin/search/?augmentation_method=' + this.generate_func_all;\n                _context5.next = 23;\n                return this.$http.get(_search_params);\n\n              case 23:\n                _yield$this$$http$get11 = _context5.sent;\n                _data7 = _yield$this$$http$get11.data;\n\n                if (!(_data7.code !== 20000)) {\n                  _context5.next = 29;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.total_All = 0;\n                return _context5.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 29:\n                this.taskList_All = _data7.data.details;\n                this.totalPageNum = _data7.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                this.total_All = this.total_All ? this.taskList_All.length : 0;\n\n              case 33:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function generate_change(_x) {\n        return _generate_change.apply(this, arguments);\n      }\n\n      return generate_change;\n    }(),\n    // 是否启用模糊搜索\n    isFuzzySearch: function isFuzzySearch(flag) {\n      this.FuzzySearch = flag;\n    },\n    // 清空二级搜索框\n    clearSecondSelect_All: function clearSecondSelect_All() {\n      this.generate_func_all = '';\n      this.formInline_All.searchTaskInfo = '';\n    },\n    clearSecondSelect_Self: function clearSecondSelect_Self() {\n      this.generate_func_self = '';\n      this.formInline_Self.searchTaskInfo = '';\n    },\n    // >>>>>>>>>>分页部分>>>>>>>>>>>>>>>>>>>\n    handleSizeChange_Self: function handleSizeChange_Self(newSize) {\n      this.queryInfo_Self.pagesize = newSize;\n      console.log('newSize-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n      console.log('newSize-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n      this.getTaskList_Self();\n    },\n    handleCurrentChange_Self: function handleCurrentChange_Self(newPage) {\n      this.queryInfo_Self.page = newPage;\n      console.log('newPage-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n      console.log('newPage-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n\n      if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n        this.getTaskList_Self();\n      } else {\n        this.SearchTask_Self();\n      }\n    },\n    handleSizeChange_All: function handleSizeChange_All(newSize) {\n      this.queryInfo_All.pagesize = newSize;\n      console.log('newSize-this.formInline_All.searchType:', this.formInline_All.searchType);\n      console.log('newSize-this.queryInfo_All.page:', this.queryInfo_All.page);\n      this.getTaskList_All();\n    },\n    handleCurrentChange_All: function handleCurrentChange_All(newPage) {\n      this.queryInfo_All.page = newPage;\n      console.log('newPage-this.formInline_All.searchType:', this.formInline_All.searchType);\n      console.log('newPage-this.queryInfo_All.page:', this.queryInfo_All.page);\n      this.getTaskList_All(); // if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n      //     this.getTaskList_All();\n      // } else {\n      //     this.SearchTask_All();\n      // }\n      // this.queryInfo_All.page = newPage;\n      // this.getTaskList_All();\n    },\n    pageReflash_All: function pageReflash_All() {\n      this.queryInfo_All.page = 1;\n    },\n    pageReflash_Self: function pageReflash_Self() {\n      this.queryInfo_Self.page = 1;\n    },\n    // >>>>>>>>>>>>>下载文件部分>>>>>>>>>>>>>>\n    originalfileDownloadTemp: function originalfileDownloadTemp(data) {\n      var task_id = data['task_id'];\n      var flag = data['flag'];\n      this.originalfileDownload(task_id, flag);\n    },\n    originalfileDownload: function () {\n      var _originalfileDownload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(task_id, flag) {\n        var loading, data, file_name1, dot;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                loading = this.full_loading_flag ? '' : this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                this.original_fileContent = '';\n                _context6.next = 4;\n                return this.$http.get('/task/file/?task_id=' + task_id + '&file_type=0&format=json', {\n                  responseType: 'blob',\n                  contentType: 'application/x-www-form-urlencoded'\n                });\n\n              case 4:\n                data = _context6.sent;\n                console.log('original_image_data:', data);\n                file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n                this.fileName = file_name1[file_name1.length - 1];\n                this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n                dot = this.fileName.lastIndexOf('.');\n                this.original_is_Zip = false;\n\n                if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                  this.original_is_Zip = true;\n                } else {\n                  this.original_blob = data.data;\n                  console.log('this.original_blob:', this.original_blob);\n                }\n\n                if (!this.full_loading_flag) {\n                  loading.close();\n                }\n\n                if (!flag) {\n                  fileDownload(data.data, this.fileName);\n                }\n\n                return _context6.abrupt(\"return\", data);\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function originalfileDownload(_x2, _x3) {\n        return _originalfileDownload.apply(this, arguments);\n      }\n\n      return originalfileDownload;\n    }(),\n    generatefileDownloadTemp: function generatefileDownloadTemp(data) {\n      var task_id = data['task_id'];\n      var flag = data['flag'];\n      this.generatefileDownload(task_id, flag);\n    },\n    generatefileDownload: function () {\n      var _generatefileDownload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(task_id, flag) {\n        var loading, data, file_name1, dot;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                loading = this.full_loading_flag ? '' : this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                _context7.next = 3;\n                return this.$http.get('/task/file/?task_id=' + task_id + '&file_type=1&format=json', {\n                  responseType: 'blob',\n                  headers: {\n                    'Content-Type': 'application/json; application/octet-stream'\n                  }\n                });\n\n              case 3:\n                data = _context7.sent;\n                file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n                this.fileName = file_name1[file_name1.length - 1];\n                this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n                dot = this.fileName.lastIndexOf('.');\n                this.generate_is_Zip = false;\n\n                if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                  this.generate_is_Zip = true;\n                } else {\n                  this.generate_blob = data.data;\n                }\n\n                if (!this.full_loading_flag) {\n                  loading.close();\n                }\n\n                if (!flag) {\n                  fileDownload(data.data, this.fileName);\n                }\n\n                return _context7.abrupt(\"return\", data);\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function generatefileDownload(_x4, _x5) {\n        return _generatefileDownload.apply(this, arguments);\n      }\n\n      return generatefileDownload;\n    }(),\n    blobToBase64: function blobToBase64(blob) {\n      return new Promise(function (resolve, reject) {\n        var fileReader = new FileReader();\n\n        fileReader.onload = function (e) {\n          resolve(e.target.result);\n        }; // readAsDataURL\n\n\n        console.log('blob:', _typeof(blob));\n        fileReader.readAsDataURL(blob);\n\n        fileReader.onerror = function () {\n          reject(new Error('blobToBase64 error'));\n        };\n      });\n    },\n    // >>>>>>>>>>>>操作按钮部分>>>>>>>>>>>>>\n    removeTaskById: function () {\n      var _removeTaskById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(task_id) {\n        var confirmResult, _yield$this$$http$del, data;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.$confirm('此操作将永久删除该任务, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context8.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.info('已取消删除'));\n\n              case 5:\n                _context8.next = 7;\n                return this.$http.delete('/task/?task_id=' + task_id);\n\n              case 7:\n                _yield$this$$http$del = _context8.sent;\n                data = _yield$this$$http$del.data;\n\n                if (!(data.code !== 20000)) {\n                  _context8.next = 11;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.error('删除任务失败！' + '错误原因：' + data.msg));\n\n              case 11:\n                this.$message.success('删除任务成功！');\n\n                if (this.activeName === 'self') {\n                  this.queryInfo_Self.page = 1;\n\n                  if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                    this.getTaskList_Self();\n                  } else {\n                    this.SearchTask_Self();\n                  }\n                } else {\n                  this.queryInfo_All.page = 1;\n\n                  if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n                    this.getTaskList_All();\n                  } else {\n                    this.SearchTask_All();\n                  }\n                }\n\n              case 13:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function removeTaskById(_x6) {\n        return _removeTaskById.apply(this, arguments);\n      }\n\n      return removeTaskById;\n    }(),\n    showEditDialog: function () {\n      var _showEditDialog = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(row) {\n        var i, temp_array, temp, temp_item;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.editForm_Self = JSON.parse(JSON.stringify(row));\n                this.editForm_Self.params = JSON.parse(row.params);\n\n                for (i in this.editForm_Self.params) {\n                  this.$set(this.editForm_Self, i, this.editForm_Self.params[i]);\n                }\n\n                this.editForm_Self.urgency_level = this.editForm_Self.urgency_level;\n                this.editForm_Self.strict_mode = this.editForm_Self.strict_mode === '1' ? true : false;\n\n                if (this.editForm_Self.augmentation_method_name === 'FGSM-合成孔径雷达') {\n                  if (this.editForm_Self.generate_per_file) {\n                    console.log('扰动为范围');\n                    this.radio_epsilon_4 = '2';\n                    this.range_epsilon_4 = [];\n                    this.range_epsilon_4.push(parseFloat(this.editForm_Self.epsilon_lower_limit));\n                    this.range_epsilon_4.push(parseFloat(this.editForm_Self.epsilon_upper_limit));\n                    this.editForm_Self.generate_per_file = parseInt(this.editForm_Self.generate_per_file);\n                    console.log('this.editForm_Self:', this.editForm_Self);\n                  } else {\n                    console.log('扰动为列表');\n                    this.radio_epsilon_4 = '1';\n                    temp_array = this.editForm_Self.epsilon.replace('[', '').replace(']', '').split(',');\n                    console.log('temp_array:', temp_array);\n                    temp = [];\n\n                    for (i in temp_array) {\n                      temp_item = {};\n                      temp_item.value = parseFloat(temp_array[i]);\n                      temp.push(temp_item);\n                    }\n\n                    console.log('temp:', temp);\n                    this.domain_4 = temp;\n                  }\n                } else if (this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-合成孔径雷达') {\n                  this.editForm_Self.ite_limit = parseInt(this.editForm_Self.ite_limit);\n\n                  if (this.editForm_Self.generate_per_file) {\n                    console.log('扰动为范围');\n                    this.radio_epsilon_5 = '2';\n                    this.range_epsilon_5 = [];\n                    this.range_epsilon_5.push(parseFloat(this.editForm_Self.epsilon_lower_limit));\n                    this.range_epsilon_5.push(parseFloat(this.editForm_Self.epsilon_upper_limit));\n                    this.editForm_Self.generate_per_file = parseInt(this.editForm_Self.generate_per_file);\n                    console.log('this.editForm_Self:', this.editForm_Self);\n                  } else {\n                    console.log('扰动为列表');\n                    this.radio_epsilon_5 = '1';\n                    temp_array = this.editForm_Self.epsilon.replace('[', '').replace(']', '').split(',');\n                    console.log('temp_array:', temp_array);\n                    temp = [];\n\n                    for (i in temp_array) {\n                      temp_item = {};\n                      temp_item.value = parseFloat(temp_array[i]);\n                      temp.push(temp_item);\n                    }\n\n                    console.log('temp:', temp);\n                    this.domain_5 = temp;\n                  }\n                } else if (this.editForm_Self.augmentation_method_name === 'JSMA-合成孔径雷达') {\n                  this.editForm_Self.gamma = parseFloat(this.editForm_Self.gamma) * 100; // this.editForm_Self.positive = this.editForm_Self.positive === '1' ? true : false;\n\n                  if (this.editForm_Self.target) {\n                    this.directional_id = ['0', this.editForm_Self.target];\n                  } else {\n                    this.directional_id = ['10', '10'];\n                  }\n\n                  if (this.editForm_Self.generate_per_file) {\n                    console.log('扰动为范围');\n                    this.radio_epsilon_6 = '2';\n                    this.range_epsilon_6 = [];\n                    this.range_epsilon_6.push(parseFloat(this.editForm_Self.epsilon_lower_limit));\n                    this.range_epsilon_6.push(parseFloat(this.editForm_Self.epsilon_upper_limit));\n                    this.editForm_Self.generate_per_file = parseInt(this.editForm_Self.generate_per_file);\n                    console.log('this.editForm_Self:', this.editForm_Self);\n                  } else {\n                    console.log('扰动为列表');\n                    this.radio_epsilon_6 = '1';\n                    temp_array = this.editForm_Self.epsilon.replace('[', '').replace(']', '').split(',');\n                    console.log('temp_array:', temp_array);\n                    temp = [];\n\n                    for (i in temp_array) {\n                      temp_item = {};\n                      temp_item.value = parseFloat(temp_array[i]);\n                      temp.push(temp_item);\n                    }\n\n                    console.log('temp:', temp);\n                    this.domain_6 = temp;\n                  }\n                } else if (this.editForm_Self.augmentation_method_name === 'SIMBA-合成孔径雷达') {\n                  this.editForm_Self.num_iters = parseInt(this.editForm_Self.num_iters);\n\n                  if (this.editForm_Self.generate_per_file) {\n                    console.log('扰动为范围');\n                    this.radio_epsilon_7 = '2';\n                    this.range_epsilon_7 = [];\n                    this.range_epsilon_7.push(parseFloat(this.editForm_Self.epsilon_lower_limit));\n                    this.range_epsilon_7.push(parseFloat(this.editForm_Self.epsilon_upper_limit));\n                    this.editForm_Self.generate_per_file = parseInt(this.editForm_Self.generate_per_file);\n                    console.log('this.editForm_Self:', this.editForm_Self);\n                  } else {\n                    console.log('扰动为列表');\n                    this.radio_epsilon_7 = '1';\n                    temp_array = this.editForm_Self.epsilon.replace('[', '').replace(']', '').split(',');\n                    console.log('temp_array:', temp_array);\n                    temp = [];\n\n                    for (i in temp_array) {\n                      temp_item = {};\n                      temp_item.value = parseFloat(temp_array[i]);\n                      temp.push(temp_item);\n                    }\n\n                    console.log('temp:', temp);\n                    this.domain_7 = temp;\n                  }\n                }\n\n                console.log('this.editForm_Self:', this.editForm_Self); // console.log('this.domain_4:', this.domain_4);\n\n                this.editDialogSelfVisible = true;\n\n              case 8:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function showEditDialog(_x7) {\n        return _showEditDialog.apply(this, arguments);\n      }\n\n      return showEditDialog;\n    }(),\n    editDialogClosed: function editDialogClosed() {\n      this.editForm_Self = {\n        task_id: 0,\n        master: this.$store.getters.userId,\n        name: '',\n        params: '',\n        file: {},\n        augmentation_method_name: ''\n      };\n      this.domain_4 = [{\n        value: 0\n      }];\n      this.domain_5 = [{\n        value: 0\n      }];\n      this.domain_6 = [{\n        value: 0\n      }];\n      this.domain_7 = [{\n        value: 0\n      }];\n      this.range_epsilon_7 = [0.1, 0.1];\n      this.range_epsilon_4 = [0.1, 0.1];\n      this.range_epsilon_5 = [0.1, 0.1];\n      this.range_epsilon_6 = [0.1, 0.1];\n      this.radio_epsilon_4 = '1';\n      this.radio_epsilon_5 = '1';\n      this.radio_epsilon_6 = '1';\n      this.radio_epsilon_7 = '1';\n    },\n    editTaskInfo: function editTaskInfo() {\n      var _this = this;\n\n      this.editForm_Self.master = this.$store.state.userId;\n\n      if (this.editForm_Self.epsilon) {\n        this.editForm_Self.epsilon = this.editForm_Self.epsilon.replace('，', ',');\n      }\n\n      this.$refs.editFormRef.validate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(valid) {\n          var adddata, temp_params, temp, x, _iterator, _step, _step$value, a, b, _yield$_this$$http, data;\n\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  if (valid) {\n                    _context10.next = 2;\n                    break;\n                  }\n\n                  return _context10.abrupt(\"return\");\n\n                case 2:\n                  adddata = new FormData();\n                  adddata.append('task_id', _this.editForm_Self.id);\n                  adddata.append('name', _this.editForm_Self.name);\n                  adddata.append('master', _this.editForm_Self.master);\n                  adddata.append('urgency_level', _this.editForm_Self.urgency_level);\n                  temp_params = {};\n                  temp_params.strict_mode = _this.editForm_Self.strict_mode ? '1' : '0';\n\n                  if (_this.editForm_Self.augmentation_method_name === 'FGSM-合成孔径雷达') {\n                    if (_this.radio_epsilon_4 == '1') {\n                      console.log('扰动为列表');\n                      temp = [];\n\n                      for (x in _this.domain_4) {\n                        console.log('this.domain_4[x][\"value\"]:', _this.domain_4[x]['value']);\n                        temp.push(_this.domain_4[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                    } else {\n                      console.log('扰动为范围');\n                      temp_params.epsilon_upper_limit = _this.range_epsilon_4[1] + '';\n                      temp_params.epsilon_lower_limit = _this.range_epsilon_4[0] + '';\n                      temp_params.generate_per_file = _this.editForm_Self.generate_per_file + '';\n                    }\n\n                    console.log('temp_params:', temp_params);\n                  } else if (_this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-合成孔径雷达') {\n                    temp_params.ite_limit = _this.editForm_Self.ite_limit + '';\n\n                    if (_this.radio_epsilon_5 == '1') {\n                      console.log('扰动为列表[发送5]');\n                      temp = [];\n\n                      for (x in _this.domain_5) {\n                        console.log('this.domain_5[x][\"value\"]:', _this.domain_5[x]['value']);\n                        temp.push(_this.domain_5[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                    } else {\n                      console.log('扰动为范围[发送5]');\n                      temp_params.epsilon_upper_limit = _this.range_epsilon_5[1] + '';\n                      temp_params.epsilon_lower_limit = _this.range_epsilon_5[0] + '';\n                      temp_params.generate_per_file = _this.editForm_Self.generate_per_file + '';\n                    }\n\n                    console.log('temp_params:', temp_params);\n                  } else if (_this.editForm_Self.augmentation_method_name === 'JSMA-合成孔径雷达') {\n                    temp_params.gamma = _this.editForm_Self.gamma / 100.0 + '';\n                    temp_params.positive = _this.editForm_Self.positive;\n                    console.log('this.directional_id:', _this.directional_id);\n\n                    if (_this.directional_id[1] != '10') {\n                      temp_params.target = _this.directional_id[1];\n                    }\n\n                    if (_this.radio_epsilon_6 == '1') {\n                      console.log('扰动为列表[发送6]');\n                      temp = [];\n\n                      for (x in _this.domain_6) {\n                        console.log('this.domain_6[x][\"value\"]:', _this.domain_6[x]['value']);\n                        temp.push(_this.domain_6[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                    } else {\n                      console.log('扰动为范围[发送6]');\n                      temp_params.epsilon_upper_limit = _this.range_epsilon_6[1] + '';\n                      temp_params.epsilon_lower_limit = _this.range_epsilon_6[0] + '';\n                      temp_params.generate_per_file = _this.editForm_Self.generate_per_file + '';\n                    }\n\n                    console.log('temp_params:', temp_params);\n                  } else if (_this.editForm_Self.augmentation_method_name === 'SIMBA-合成孔径雷达') {\n                    temp_params.num_iters = _this.editForm_Self.num_iters + '';\n\n                    if (_this.radio_epsilon_7 == '1') {\n                      console.log('扰动为列表[发送7]');\n                      temp = [];\n                      console.log('this.domain_7:', _this.domain_7);\n\n                      for (x in _this.domain_7) {\n                        console.log('this.domain_7[x][\"value\"]:', _this.domain_7[x]['value']);\n                        temp.push(_this.domain_7[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                    } else {\n                      console.log('扰动为范围[发送7]');\n                      temp_params.epsilon_upper_limit = _this.range_epsilon_7[1] + '';\n                      temp_params.epsilon_lower_limit = _this.range_epsilon_7[0] + '';\n                      temp_params.generate_per_file = _this.editForm_Self.generate_per_file + '';\n                    }\n\n                    console.log('temp_params:', temp_params);\n                  }\n\n                  temp_params.strict_mode = _this.editForm_Self.strict_mode ? '1' : '0';\n                  temp_params = JSON.stringify(temp_params);\n                  adddata.append('params', temp_params);\n                  _this.editForm_Self.file = document.getElementById('filetemp').files[0];\n\n                  if (_this.editForm_Self.file) {\n                    adddata.append('file', _this.editForm_Self.file);\n                  }\n\n                  _iterator = _createForOfIteratorHelper(adddata.entries());\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      _step$value = _slicedToArray(_step.value, 2), a = _step$value[0], b = _step$value[1];\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  _context10.next = 19;\n                  return _this.$http({\n                    url: '/task/',\n                    data: adddata,\n                    method: 'put'\n                  });\n\n                case 19:\n                  _yield$_this$$http = _context10.sent;\n                  data = _yield$_this$$http.data;\n\n                  if (!(data.code !== 20000)) {\n                    _context10.next = 23;\n                    break;\n                  }\n\n                  return _context10.abrupt(\"return\", _this.$message.error('修改任务失败！' + '错误原因：' + data.msg));\n\n                case 23:\n                  _this.$message.success('修改任务成功！');\n\n                  _this.editDialogSelfVisible = false;\n\n                  _this.$refs.editFormRef.resetFields();\n\n                  _this.editForm_Self.augmentation_type = '';\n                  _this.editForm_Self.augmentation_method = '';\n                  _this.editForm_Self.file = {};\n\n                  _this.getTaskList_Self();\n\n                  _this.getTaskList_All();\n\n                case 31:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x8) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    getdata: function () {\n      var _getdata = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(reader, self) {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return function () {\n                  self.fileContent = this.result;\n                };\n\n              case 2:\n                return _context11.abrupt(\"return\", reader.onload = _context11.sent);\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function getdata(_x9, _x10) {\n        return _getdata.apply(this, arguments);\n      }\n\n      return getdata;\n    }(),\n    // 标记任务异常\n    taskException: function () {\n      var _taskException = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this.$confirm('是否确定将该任务标记成异常状态？').then( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(_) {\n                    var adddata, _yield$_this2$$http, data;\n\n                    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                      while (1) {\n                        switch (_context12.prev = _context12.next) {\n                          case 0:\n                            adddata = new FormData();\n                            adddata.append('task_id', _this2.methodDetail.id);\n                            _context12.next = 4;\n                            return _this2.$http({\n                              url: '/task/exception/',\n                              data: adddata,\n                              method: 'post'\n                            });\n\n                          case 4:\n                            _yield$_this2$$http = _context12.sent;\n                            data = _yield$_this2$$http.data;\n\n                            if (!(data.code !== 20000)) {\n                              _context12.next = 8;\n                              break;\n                            }\n\n                            return _context12.abrupt(\"return\", _this2.$message.error('添加生成任务失败！' + '错误原因：' + data.msg));\n\n                          case 8:\n                            _this2.$message.success('标记成异常成功！');\n\n                          case 9:\n                          case \"end\":\n                            return _context12.stop();\n                        }\n                      }\n                    }, _callee12);\n                  }));\n\n                  return function (_x11) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }()).catch(function (_) {});\n\n              case 1:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function taskException() {\n        return _taskException.apply(this, arguments);\n      }\n\n      return taskException;\n    }(),\n    //任务详情对话框\n    MethodDetail: function () {\n      var _MethodDetail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(id) {\n        var _yield$this$$http$get12, data;\n\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                // id = data\n                console.log('this.methodDetail:', this.methodDetail);\n                this.methodDialogSelfVisible = true;\n                _context14.next = 4;\n                return this.$http.get('/task/' + '?task_id=' + id);\n\n              case 4:\n                _yield$this$$http$get12 = _context14.sent;\n                data = _yield$this$$http$get12.data;\n\n                if (!(data.code !== 20000)) {\n                  _context14.next = 8;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", this.$message.error('获取本用户任务详情失败！' + '错误原因：' + data.msg));\n\n              case 8:\n                this.methodDetail = data.data;\n\n              case 9:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function MethodDetail(_x12) {\n        return _MethodDetail.apply(this, arguments);\n      }\n\n      return MethodDetail;\n    }(),\n    methodDialogClose: function methodDialogClose() {\n      console.log('this.methodDetail:', this.methodDetail);\n      this.methodDetail = [];\n    },\n    // >>>>>>>>>>图像预览部分>>>>>>>>>>>>>>>\n    point_cloud_preview: function () {\n      var _point_cloud_preview = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(task_id) {\n        var loading, preview_options, original_res, original_files_zip, original_files, orignal_names, me, temp_object, generate_res, generate_files_zip, generate_files, generate_names, original_is_Zip;\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                this.full_loading_flag = true;\n                loading = this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                }); // console.log('loading:', loading);\n                // console.log('this.$loading.lock:', this.$loading.lock);\n                // this.previewDialogVisible = true;\n\n                preview_options = [];\n                _context15.next = 5;\n                return this.originalfileDownload(task_id, 1);\n\n              case 5:\n                original_res = _context15.sent;\n\n                if (!this.original_is_Zip) {\n                  _context15.next = 16;\n                  break;\n                }\n\n                original_files_zip = new window.File([original_res.data], this.fileName, {\n                  type: 'zip'\n                });\n                original_files = new JSZip();\n                orignal_names = [];\n                this.original_files_zip = original_files_zip;\n                me = this;\n                _context15.next = 14;\n                return original_files.loadAsync(this.original_files_zip).then(function (zip) {\n                  for (var i in original_files.files) {\n                    var temp_object = {};\n                    orignal_names.push(i);\n                    temp_object['value'] = i;\n                    temp_object['label'] = i;\n                    temp_object['children'] = [];\n                    preview_options.push(temp_object);\n                  }\n\n                  me.original_files_zip = original_files_zip;\n                });\n\n              case 14:\n                _context15.next = 21;\n                break;\n\n              case 16:\n                temp_object = {};\n                temp_object['value'] = this.fileName;\n                temp_object['label'] = this.fileName;\n                temp_object['children'] = [];\n                preview_options.push(temp_object);\n\n              case 21:\n                _context15.next = 23;\n                return this.generatefileDownload(task_id, 1);\n\n              case 23:\n                generate_res = _context15.sent;\n\n                if (!this.generate_is_Zip) {\n                  _context15.next = 34;\n                  break;\n                }\n\n                generate_files_zip = new window.File([generate_res.data], this.fileName, {\n                  type: 'zip'\n                });\n                generate_files = new JSZip();\n                generate_names = [];\n                original_is_Zip = this.original_is_Zip;\n                _context15.next = 31;\n                return generate_files.loadAsync(generate_files_zip).then(function (generate_files_zip) {\n                  // console.log('generate_files.files:', generate_files.files);\n                  for (var i in generate_files.files) {\n                    generate_names.push(i);\n                  }\n\n                  if (original_is_Zip) {\n                    // console.log('orignal_names:', orignal_names);\n                    // console.log('generate_names:', generate_names);\n                    for (var i in orignal_names) {\n                      for (var j in generate_names) {\n                        // 原始文件和生成文进行对应\n                        // if (generate_names[j].search(orignal_names[i]) != -1) {\n                        //     var temp_object = {};\n                        //     temp_object['value'] = generate_names[j];\n                        //     temp_object['label'] = generate_names[j];\n                        //     preview_options[i].children.push(temp_object);\n                        // }\n                        if (generate_names[j].search(orignal_names[i].split('.')[0]) != -1) {\n                          var temp_object = {};\n                          temp_object['value'] = generate_names[j];\n                          temp_object['label'] = generate_names[j];\n                          preview_options[i].children.push(temp_object);\n                        }\n                      }\n                    }\n                  } else {\n                    for (var j in generate_names) {\n                      var temp_object = {};\n                      temp_object['value'] = generate_names[j];\n                      temp_object['label'] = generate_names[j];\n                      preview_options[0].children.push(temp_object);\n                    }\n                  }\n                });\n\n              case 31:\n                this.generate_files_zip = generate_files_zip;\n                _context15.next = 38;\n                break;\n\n              case 34:\n                temp_object = {};\n                temp_object['value'] = this.fileName;\n                temp_object['label'] = this.fileName;\n                preview_options[0].children.push(temp_object);\n\n              case 38:\n                loading.close();\n                this.full_loading_flag = false;\n                this.previewDialogVisible = true;\n                this.$message.success('已获取文件列表，请选择需预览的文件！');\n                this.preview_options = preview_options;\n                console.log('preview_options:', preview_options);\n                this.loading = false;\n\n              case 45:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function point_cloud_preview(_x13) {\n        return _point_cloud_preview.apply(this, arguments);\n      }\n\n      return point_cloud_preview;\n    }(),\n    make_format_data: function make_format_data(images_name, images, flag) {\n      // 灰度图仅支持.jpg或.jpeg形式\n      var format_data = null;\n      var dot = images_name.lastIndexOf('.');\n      var data_type = images_name.substr(dot);\n\n      if (data_type === '.jpg' || data_type === '.jpeg') {\n        var me = this; // console.log('here');\n\n        if (!flag) {\n          console.log('this.originalpicture:', this.originalpicture);\n          var blob = new Blob([images], {\n            type: 'image/jpeg'\n          });\n          var url = window.URL.createObjectURL(blob);\n          this.originalpicture = url; // console.log('url:', url);\n          // console.log('me.tempurl:', me.tempurl);\n        } else {\n          var _blob = new Blob([images], {\n            type: 'image/jpeg'\n          });\n\n          var _url = window.URL.createObjectURL(_blob);\n\n          this.generatepicture = _url;\n        }\n      } else {\n        this.$message.error('文件格式错误！【灰度图仅支持.jpg或.jpeg形式】');\n      }\n    },\n    get_preview: function get_preview() {},\n    previewHandleChange: function () {\n      var _previewHandleChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n        var original_points_name, generate_points_name, original_pointscloud, generate_pointscloud, original_files, generate_files, reader, me;\n        return regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                this.originalPointCloudData = [];\n                this.generatePointCloudData = [];\n                original_points_name = this.preview_value[0];\n                generate_points_name = this.preview_value[1];\n                original_pointscloud = null;\n                generate_pointscloud = null;\n\n                if (!this.original_is_Zip) {\n                  _context21.next = 19;\n                  break;\n                }\n\n                original_files = new JSZip();\n                _context21.next = 10;\n                return original_files.loadAsync(this.original_files_zip).then( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(file) {\n                    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                      while (1) {\n                        switch (_context16.prev = _context16.next) {\n                          case 0:\n                            _context16.next = 2;\n                            return original_files.file(original_points_name).async('blob').then(function (content) {\n                              original_pointscloud = content;\n                            });\n\n                          case 2:\n                          case \"end\":\n                            return _context16.stop();\n                        }\n                      }\n                    }, _callee16);\n                  }));\n\n                  return function (_x14) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n\n              case 10:\n                this.make_format_data(original_points_name, original_pointscloud, 0);\n                console.log('original_image:', original_pointscloud);\n                generate_files = new JSZip();\n                _context21.next = 15;\n                return generate_files.loadAsync(this.generate_files_zip).then( /*#__PURE__*/function () {\n                  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(generate_files_zip) {\n                    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                      while (1) {\n                        switch (_context17.prev = _context17.next) {\n                          case 0:\n                            _context17.next = 2;\n                            return generate_files.file(generate_points_name).async('blob').then(function (content) {\n                              generate_pointscloud = content;\n                            });\n\n                          case 2:\n                          case \"end\":\n                            return _context17.stop();\n                        }\n                      }\n                    }, _callee17);\n                  }));\n\n                  return function (_x15) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }());\n\n              case 15:\n                this.make_format_data(generate_points_name, generate_pointscloud, 1);\n                console.log('generate_image:', generate_pointscloud);\n                _context21.next = 24;\n                break;\n\n              case 19:\n                reader = new FileReader();\n                console.log('this.original_blob:', this.original_blob);\n                reader.readAsDataURL(this.original_blob);\n                me = this;\n                reader.onload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n                  var original_content, generate_files, reader2;\n                  return regeneratorRuntime.wrap(function _callee20$(_context20) {\n                    while (1) {\n                      switch (_context20.prev = _context20.next) {\n                        case 0:\n                          original_content = this.result;\n                          console.log('original_content:', original_content);\n                          me.originalpicture = original_content; // me.make_format_data(me.preview_options[0].value, original_content, 0);\n\n                          if (!me.generate_is_Zip) {\n                            _context20.next = 11;\n                            break;\n                          }\n\n                          generate_files = new JSZip();\n                          _context20.next = 7;\n                          return generate_files.loadAsync(me.generate_files_zip).then( /*#__PURE__*/function () {\n                            var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(generate_files_zip) {\n                              return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                                while (1) {\n                                  switch (_context18.prev = _context18.next) {\n                                    case 0:\n                                      _context18.next = 2;\n                                      return generate_files.file(generate_points_name).async('blob').then(function (content) {\n                                        generate_pointscloud = content;\n                                      });\n\n                                    case 2:\n                                    case \"end\":\n                                      return _context18.stop();\n                                  }\n                                }\n                              }, _callee18);\n                            }));\n\n                            return function (_x16) {\n                              return _ref7.apply(this, arguments);\n                            };\n                          }());\n\n                        case 7:\n                          me.make_format_data(generate_points_name, generate_pointscloud, 1);\n                          me.get_preview();\n                          _context20.next = 14;\n                          break;\n\n                        case 11:\n                          reader2 = new FileReader();\n                          reader2.readAsText(this.generate_blob);\n                          reader2.onload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n                            var generate_content;\n                            return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                              while (1) {\n                                switch (_context19.prev = _context19.next) {\n                                  case 0:\n                                    generate_content = this.result;\n                                    me.make_format_data(me.preview_options[0].children.value, generate_content, 1);\n\n                                  case 2:\n                                  case \"end\":\n                                    return _context19.stop();\n                                }\n                              }\n                            }, _callee19, this);\n                          }));\n\n                        case 14:\n                        case \"end\":\n                          return _context20.stop();\n                      }\n                    }\n                  }, _callee20, this);\n                }));\n\n              case 24:\n                // console.log('this.originalPointCloudData:', this.originalPointCloudData);\n                // console.log('this.generatePointCloudData:', this.generatePointCloudData);\n                this.get_preview();\n\n              case 25:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function previewHandleChange() {\n        return _previewHandleChange.apply(this, arguments);\n      }\n\n      return previewHandleChange;\n    }(),\n    handleClose: function handleClose(done) {\n      var _this3 = this;\n\n      this.$confirm('确认关闭？').then(function (_) {\n        _this3.previewDialogVisible = false;\n        _this3.fileName = '';\n        _this3.preview_value = [];\n        _this3.preview_options = [];\n        _this3.previewDialogVisible = false;\n        _this3.loading = true;\n        _this3.original_files_zip = null;\n        _this3.generate_files_zip = null;\n        _this3.originalPointCloudData = [];\n        _this3.generatePointCloudData = [];\n        _this3.maxAxisValue = -10000;\n        _this3.minAxisValue = 10000;\n      }).catch(function (_) {});\n    },\n    changeAxios_xz: function changeAxios_xz() {\n      for (var i in this.originalPointCloudData) {\n        var _ref9 = [this.originalPointCloudData[i][2], this.originalPointCloudData[i][0]];\n        this.originalPointCloudData[i][0] = _ref9[0];\n        this.originalPointCloudData[i][2] = _ref9[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref10 = [this.generatePointCloudData[i][2], this.generatePointCloudData[i][0]];\n        this.generatePointCloudData[i][0] = _ref10[0];\n        this.generatePointCloudData[i][2] = _ref10[1];\n      }\n\n      this.get_preview();\n    },\n    changeAxios_yz: function changeAxios_yz() {\n      for (var i in this.originalPointCloudData) {\n        var _ref11 = [this.originalPointCloudData[i][2], this.originalPointCloudData[i][1]];\n        this.originalPointCloudData[i][1] = _ref11[0];\n        this.originalPointCloudData[i][2] = _ref11[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref12 = [this.generatePointCloudData[i][2], this.generatePointCloudData[i][1]];\n        this.generatePointCloudData[i][1] = _ref12[0];\n        this.generatePointCloudData[i][2] = _ref12[1];\n      }\n\n      this.get_preview();\n    },\n    changeAxios_xy: function changeAxios_xy() {\n      for (var i in this.originalPointCloudData) {\n        var _ref13 = [this.originalPointCloudData[i][1], this.originalPointCloudData[i][0]];\n        this.originalPointCloudData[i][0] = _ref13[0];\n        this.originalPointCloudData[i][1] = _ref13[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref14 = [this.generatePointCloudData[i][1], this.generatePointCloudData[i][0]];\n        this.generatePointCloudData[i][0] = _ref14[0];\n        this.generatePointCloudData[i][1] = _ref14[1];\n      }\n\n      this.get_preview();\n    },\n    // >>>>>>>>>>表格空白部分填充>>>>>>>>>>>>>>>>\n    isBlank_num: function isBlank_num(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '-- --';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      return value;\n    },\n    isBlank_start: function isBlank_start(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '未开始';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n      return value;\n    },\n    isBlank_end: function isBlank_end(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '未结束';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n      return value;\n    }\n  }\n};",{"version":3,"sources":["Image_A_AugTaskList.vue"],"names":[],"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","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item> <i class=\"el-icon-picture-outline\"></i> SAR雷达对抗 </el-breadcrumb-item>\n                <el-breadcrumb-item>生成任务查询</el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <el-card>\n            <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n                <el-tab-pane label=\"本用户\" name=\"self\">\n                    <el-row :gutter=\"20\" class=\"search\">\n                        <el-col :span=\"20\">\n                            <el-form :inline=\"true\" :model=\"formInline_Self\" class=\"demo-form-inline\">\n                                <el-form-item label=\"查询方式\">\n                                    <el-select\n                                        v-model=\"formInline_Self.searchType\"\n                                        clearable\n                                        placeholder=\"请选择查询方式\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @clear=\"getTaskList_Self()\"\n                                        @change=\"pageReflash_Self()\"\n                                    >\n                                        <el-option label=\"生成方法\" value=\"生成方法\"></el-option>\n                                        <el-option label=\"任务名称\" value=\"任务名称\"></el-option>\n                                        <el-option label=\"任务id\" value=\"任务id\"></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item v-show=\"formInline_Self.searchType == '生成方法'\" label=\"生成方法\">\n                                    <el-select\n                                        v-model=\"generate_func_self\"\n                                        placeholder=\"请选择生成方法\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @change=\"\n                                            pageReflash_Self();\n                                            SearchTask_Self();\n                                        \"\n                                    >\n                                        <el-option\n                                            v-for=\"item in generate_func_list\"\n                                            :key=\"item.name\"\n                                            :label=\"item.name\"\n                                            :value=\"item.id\"\n                                        ></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item\n                                    label=\"查询内容\"\n                                    v-show=\"formInline_Self.searchType != '生成方法' && formInline_Self.searchType != ''\"\n                                >\n                                    <el-input\n                                        placeholder=\"请输入内容\"\n                                        v-model=\"formInline_Self.searchTaskInfo\"\n                                        clearable\n                                        @clear=\"handleSelectClear\"\n                                    >\n                                        <el-button\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(0);\n                                                pageReflash_Self();\n                                                SearchTask_Self();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>精确</el-button\n                                        >\n                                        <el-button\n                                            v-if=\"formInline_Self.searchType != '任务id'\"\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(1);\n                                                pageReflash_Self();\n                                                SearchTask_Self();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>模糊</el-button\n                                        >\n                                    </el-input>\n                                </el-form-item>\n                            </el-form>\n                        </el-col>\n                    </el-row>\n\n                    <v-table\n                        :taskList=\"this.taskList_Self\"\n                        :is_root=\"'0'\"\n                        :show_image_preview=\"1\"\n                        @getList=\"handleGetList\"\n                        @delete=\"removeTaskById\"\n                        @MethodDetail=\"MethodDetail\"\n                        @methodDialogClose=\"methodDialogClose\"\n                        @showEditDialog=\"showEditDialog\"\n                        @editDialogClosed=\"editDialogClosed\"\n                        @originalfileDownload=\"originalfileDownloadTemp\"\n                        @generatefileDownload=\"generatefileDownloadTemp\"\n                        @point_cloud_preview=\"point_cloud_preview\"\n                    ></v-table>\n\n                    <el-pagination\n                        @size-change=\"handleSizeChange_Self\"\n                        @current-change=\"handleCurrentChange_Self\"\n                        :current-page.sync=\"queryInfo_Self.page\"\n                        :page-size=\"10\"\n                        layout=\" prev, pager, next\"\n                        :total=\"total_Self\"\n                    >\n                    </el-pagination>\n                </el-tab-pane>\n                <el-tab-pane label=\"所有用户\" name=\"all\" v-if=\"this.userRight === '超级管理员'\">\n                    <el-row :gutter=\"20\" class=\"search\">\n                        <el-col :span=\"20\">\n                            <el-form :inline=\"true\" :model=\"formInline_All\" class=\"demo-form-inline\">\n                                <el-form-item label=\"查询方式\">\n                                    <el-select\n                                        v-model=\"formInline_All.searchType\"\n                                        placeholder=\"请选择查询方式\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        clearable\n                                        @clear=\"\n                                            getTaskList_All();\n                                            clearSecondSelect_All();\n                                        \"\n                                        @change=\"pageReflash_All()\"\n                                    >\n                                        <el-option label=\"生成方法\" value=\"生成方法\"></el-option>\n                                        <el-option label=\"任务名称\" value=\"任务名称\"></el-option>\n                                        <el-option label=\"任务id\" value=\"任务id\"></el-option>\n                                        <el-option label=\"用户id\" value=\"用户id\"></el-option>\n                                        <el-option label=\"用户名\" value=\"用户名\"></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item v-show=\"formInline_All.searchType == '生成方法'\" label=\"生成方法\">\n                                    <el-select\n                                        v-model=\"generate_func_all\"\n                                        placeholder=\"请选择生成方法\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @change=\"\n                                            pageReflash_All();\n                                            getTaskList_All();\n                                        \"\n                                    >\n                                        <el-option\n                                            v-for=\"item in generate_func_list\"\n                                            :key=\"item.name\"\n                                            :label=\"item.name\"\n                                            :value=\"item.id\"\n                                        ></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item\n                                    v-show=\"formInline_All.searchType != '生成方法' && formInline_All.searchType != ''\"\n                                    label=\"查询内容\"\n                                >\n                                    <el-input\n                                        placeholder=\"请输入内容\"\n                                        v-model=\"formInline_All.searchTaskInfo\"\n                                        clearable\n                                        @clear=\"getTaskList_All\"\n                                    >\n                                        <el-button\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(0);\n                                                getTaskList_All();\n                                                pageReflash_All();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>精确</el-button\n                                        >\n                                        <el-button\n                                            v-if=\"\n                                                formInline_All.searchType != '任务id' &&\n                                                    formInline_All.searchType != '用户id' &&\n                                                    formInline_All.searchType != '用户名'\n                                            \"\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(1);\n                                                getTaskList_All();\n                                                pageReflash_All();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>模糊</el-button\n                                        >\n                                    </el-input>\n                                </el-form-item>\n                            </el-form>\n                        </el-col>\n                    </el-row>\n                    <v-table\n                        :taskList=\"this.taskList_All\"\n                        :is_root=\"'1'\"\n                        :show_image_preview=\"1\"\n                        @getList=\"handleGetList\"\n                        @delete=\"removeTaskById\"\n                        @MethodDetail=\"MethodDetail\"\n                        @methodDialogClose=\"methodDialogClose\"\n                        @showEditDialog=\"showEditDialog\"\n                        @editDialogClosed=\"editDialogClosed\"\n                        @originalfileDownload=\"originalfileDownloadTemp\"\n                        @generatefileDownload=\"generatefileDownloadTemp\"\n                        @point_cloud_preview=\"point_cloud_preview\"\n                    ></v-table>\n                    <el-pagination\n                        @size-change=\"handleSizeChange_All\"\n                        @current-change=\"handleCurrentChange_All\"\n                        :current-page.sync=\"queryInfo_All.page\"\n                        :page-size=\"10\"\n                        layout=\" prev, pager, next\"\n                        :total=\"total_All\"\n                    >\n                    </el-pagination>\n                </el-tab-pane>\n            </el-tabs>\n        </el-card>\n        <el-dialog title=\"编辑任务信息\" :visible.sync=\"editDialogSelfVisible\" width=\"50%\" @closed=\"editDialogClosed\">\n            <el-form :model=\"editForm_Self\" :rules=\"rulesList\" ref=\"editFormRef\" label-width=\"110px\" style=\"width: 90%\">\n                <el-form-item label=\"任务id\">\n                    <el-input v-model=\"editForm_Self.id\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"任务名\">\n                    <el-input v-model=\"editForm_Self.name\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"紧急等级\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.urgency_level\"></el-input> -->\n                    <el-slider v-model=\"editForm_Self.urgency_level\" :min=\"1\" :max=\"5\" :step=\"1\" :marks=\"mark_group.marks1_5\"> </el-slider>\n                </el-form-item>\n                <!-- 4 -->\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === 'FGSM-合成孔径雷达'\" label=\"扰动幅度\" prop=\"epsilon\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.epsilon\"></el-input> -->\n                    <el-radio v-model=\"radio_epsilon_4\" label=\"1\">列表</el-radio>\n                    <el-radio v-model=\"radio_epsilon_4\" label=\"2\">范围</el-radio>\n                    <div style=\"margin-right: 5px\" v-if=\"radio_epsilon_4 == '1'\">\n                        <!-- <el-input v-if=\"radio_epsilon_4 == '1'\" type=\"text\" v-model=\"form.epsilon_4\"></el-input> -->\n                        <el-form-item v-for=\"(domain, index) in domain_4\" :label=\"'幅度' + index\" :key=\"domain.key\" label-width=\"50px\">\n                            <el-slider v-model=\"domain.value\" show-input :min=\"0.1\" :max=\"255\" :step=\"0.1\" :marks=\"mark_group.mark01_255\">\n                            </el-slider\n                            ><el-button @click.prevent=\"removeDomain(domain, 4)\" style=\"margin-left: 20px\">删除</el-button>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button @click=\"addDomain(4)\">新增幅度</el-button>\n                            <el-button @click=\"resetForm('form', 4)\">重置</el-button>\n                        </el-form-item>\n                    </div>\n\n                    <el-slider\n                        v-if=\"radio_epsilon_4 == '2'\"\n                        v-model=\"range_epsilon_4\"\n                        range\n                        :min=\"0.1\"\n                        :max=\"255\"\n                        :step=\"0.1\"\n                        :marks=\"mark_group.mark01_255\"\n                    >\n                    </el-slider>\n                </el-form-item>\n                <el-form-item\n                    v-if=\"this.editForm_Self.augmentation_method_name === 'FGSM-合成孔径雷达' && radio_epsilon_4 == '2'\"\n                    prop=\"generate_per_file\"\n                    label=\"单文件生成数量\"\n                >\n                    <div class=\"block\" style=\"float: left; margin-right: 20px; width: 100%\">\n                        <!-- <el-input type=\"number\" v-model=\"form.generate_per_file_and_params\"></el-input> -->\n\n                        <el-slider v-model=\"editForm_Self.generate_per_file\" :min=\"1\" :max=\"50\" show-input> </el-slider>\n                    </div>\n                </el-form-item>\n                <!-- 5 -->\n                <el-form-item\n                    v-if=\"this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-合成孔径雷达'\"\n                    label=\"扰动幅度\"\n                    prop=\"epsilon\"\n                >\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.epsilon\"></el-input> -->\n                    <el-radio v-model=\"radio_epsilon_5\" label=\"1\">列表</el-radio>\n                    <el-radio v-model=\"radio_epsilon_5\" label=\"2\">范围</el-radio>\n                    <div style=\"margin-right: 5px\" v-if=\"radio_epsilon_5 == '1'\">\n                        <el-form-item v-for=\"(domain, index) in domain_5\" :label=\"'幅度' + index\" :key=\"domain.key\" label-width=\"50px\">\n                            <el-slider v-model=\"domain.value\" show-input :min=\"0.1\" :max=\"255\" :step=\"0.1\" :marks=\"mark_group.mark01_255\">\n                            </el-slider\n                            ><el-button @click.prevent=\"removeDomain(domain, 5)\" style=\"margin-left: 20px\">删除</el-button>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button @click=\"addDomain(5)\">新增幅度</el-button>\n                            <el-button @click=\"resetForm('form', 5)\">重置</el-button>\n                        </el-form-item>\n                    </div>\n\n                    <el-slider\n                        v-if=\"radio_epsilon_5 == '2'\"\n                        v-model=\"range_epsilon_5\"\n                        range\n                        :min=\"0.1\"\n                        :max=\"255\"\n                        :step=\"0.1\"\n                        :marks=\"mark_group.mark01_255\"\n                    >\n                    </el-slider>\n                </el-form-item>\n                <el-form-item\n                    v-if=\"this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-合成孔径雷达' && radio_epsilon_5 == '2'\"\n                    prop=\"generate_per_file\"\n                    label=\"单文件生成数量\"\n                >\n                    <div class=\"block\" style=\"float: left; margin-right: 20px; width: 100%\">\n                        <!-- <el-input type=\"number\" v-model=\"form.generate_per_file_and_params\"></el-input> -->\n\n                        <el-slider v-model=\"editForm_Self.generate_per_file\" :min=\"1\" :max=\"50\" show-input> </el-slider>\n                    </div>\n                </el-form-item>\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-合成孔径雷达'\" label=\"迭代次数上限\">\n                    <div class=\"block\" style=\"float: left; margin-right: 20px; width: 100%\">\n                        <!-- <el-input type=\"number\" v-model=\"form.ite_limit\"></el-input> -->\n                        <el-slider v-model=\"editForm_Self.ite_limit\" :min=\"1\" :max=\"50\" show-input :marks=\"mark_group.mark1_50\">\n                        </el-slider>\n                    </div>\n                </el-form-item>\n                <!-- 6 -->\n                <el-form-item\n                    v-if=\"this.editForm_Self.augmentation_method_name === 'JSMA-合成孔径雷达'\"\n                    label=\"单步扰动幅度\"\n                    prop=\"range_epsilon_6\"\n                >\n                    <el-radio v-model=\"radio_epsilon_6\" label=\"1\">列表</el-radio>\n                    <el-radio v-model=\"radio_epsilon_6\" label=\"2\">范围</el-radio>\n\n                    <div style=\"margin-right: 5px\" v-if=\"radio_epsilon_6 == '1'\">\n                        <el-form-item v-for=\"(domain, index) in domain_6\" :label=\"'幅度' + index\" :key=\"domain.key\" label-width=\"50px\">\n                            <el-slider v-model=\"domain.value\" show-input :min=\"0.1\" :max=\"255\" :step=\"0.1\" :marks=\"mark_group.mark01_255\">\n                            </el-slider\n                            ><el-button @click.prevent=\"removeDomain(domain, 6)\" style=\"margin-left: 20px\">删除</el-button>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button @click=\"addDomain(6)\">新增幅度</el-button>\n                            <el-button @click=\"resetForm('form', 6)\">重置</el-button>\n                        </el-form-item>\n                    </div>\n\n                    <el-slider\n                        v-if=\"radio_epsilon_6 == '2'\"\n                        v-model=\"range_epsilon_6\"\n                        range\n                        :min=\"0.1\"\n                        :max=\"255\"\n                        :step=\"0.1\"\n                        :marks=\"mark_group.mark01_255\"\n                    >\n                    </el-slider>\n                </el-form-item>\n                <el-form-item\n                    v-if=\"radio_epsilon_6 == '2' && this.editForm_Self.augmentation_method_name === 'JSMA-合成孔径雷达'\"\n                    label=\"单文件生成数量\"\n                    prop=\"generate_per_file\"\n                >\n                    <div class=\"block\" style=\"float: left; margin-right: 20px; width: 100%\">\n                        <el-slider v-model=\"editForm_Self.generate_per_file\" :min=\"1\" :max=\"50\" show-input=\"\"> </el-slider>\n                    </div>\n                </el-form-item>\n                <el-form-item\n                    v-if=\"this.editForm_Self.augmentation_method_name === 'JSMA-合成孔径雷达'\"\n                    label=\"最多扰动特征数比例\"\n                    prop=\"gamma\"\n                >\n                    <div class=\"block\" style=\"float: left; margin-right: 20px; width: 100%\">\n                        <el-slider v-model=\"editForm_Self.gamma\" :min=\"1\" :max=\"100\" :marks=\"ite_limit_bili_marks\"> </el-slider>\n                    </div>\n                </el-form-item>\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === 'JSMA-合成孔径雷达'\" label=\"定向攻击标签\" prop=\"target\">\n                    <div class=\"block\" style=\"float: left; margin-right: 20px; width: 100%\">\n                        <el-cascader v-model=\"directional_id\" :options=\"directional\" :props=\"{ expandTrigger: 'hover' }\"></el-cascader>\n                    </div>\n                </el-form-item>\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === 'JSMA-合成孔径雷达'\" label=\"攻击方向\" prop=\"positive\">\n                    <el-radio v-model=\"editForm_Self.positive\" label=\"1\">正向</el-radio>\n                    <el-radio v-model=\"editForm_Self.positive\" label=\"0\">负向</el-radio>\n                </el-form-item>\n                <!-- 7 -->\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === 'SIMBA-合成孔径雷达'\" label=\"扰动幅度\" prop=\"epsilon\">\n                    <el-radio v-model=\"radio_epsilon_7\" label=\"1\">列表</el-radio>\n                    <el-radio v-model=\"radio_epsilon_7\" label=\"2\">范围</el-radio>\n                    <div style=\"margin-right: 5px\" v-if=\"radio_epsilon_7 == '1'\">\n                        <el-form-item v-for=\"(domain, index) in domain_7\" :label=\"'幅度' + index\" :key=\"domain.key\" label-width=\"50px\">\n                            <el-slider v-model=\"domain.value\" show-input :min=\"0.1\" :max=\"255\" :step=\"0.1\" :marks=\"mark_group.mark01_255\">\n                            </el-slider\n                            ><el-button @click.prevent=\"removeDomain(domain, 7)\" style=\"margin-left: 20px\">删除</el-button>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button @click=\"addDomain(7)\">新增幅度</el-button>\n                            <el-button @click=\"resetForm('form', 7)\">重置</el-button>\n                        </el-form-item>\n                    </div>\n\n                    <el-slider\n                        v-if=\"radio_epsilon_7 == '2'\"\n                        v-model=\"range_epsilon_7\"\n                        range\n                        :min=\"0.1\"\n                        :max=\"255\"\n                        :step=\"0.1\"\n                        :marks=\"mark_group.mark01_255\"\n                    >\n                    </el-slider>\n                </el-form-item>\n                <el-form-item\n                    v-if=\"this.editForm_Self.augmentation_method_name === 'SIMBA-合成孔径雷达' && radio_epsilon_7 == '2'\"\n                    prop=\"generate_per_file\"\n                    label=\"单文件生成数量\"\n                >\n                    <div class=\"block\" style=\"float: left; margin-right: 20px; width: 100%\">\n                        <el-slider v-model=\"editForm_Self.generate_per_file\" :min=\"1\" :max=\"50\" show-input> </el-slider>\n                    </div>\n                </el-form-item>\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === 'SIMBA-合成孔径雷达'\" label=\"迭代次数\" prop=\"num_iters\">\n                    <div class=\"block\" style=\"float: left; margin-right: 20px; width: 100%\">\n                        <el-slider v-model=\"editForm_Self.num_iters\" :min=\"1\" :max=\"50\" show-input=\"\" :marks=\"mark_group.mark1_50\">\n                        </el-slider>\n                    </div>\n                </el-form-item>\n\n                <el-form-item label=\"严格模式\">\n                    <el-switch v-model=\"editForm_Self.strict_mode\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                </el-form-item>\n                <el-form-item label=\"重新上传文件\" prop=\"file\">\n                    <input type=\"file\" id=\"filetemp\" prop=\"editForm_Self.file\" /><br />\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"editDialogSelfVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"editTaskInfo\">确 定</el-button>\n            </span>\n        </el-dialog>\n        <!-- 任务详情对话框 -->\n        <el-dialog\n            title=\"生成任务详情\"\n            :visible.sync=\"methodDialogSelfVisible\"\n            width=\"50%\"\n            body-style=\"background-color: rgba(255, 255, 255, 0.6);\"\n            @close=\"methodDialogClose\"\n            destroy-on-close\n        >\n            <div class=\"user-info-list\">\n                任务id：\n                <span>{{ methodDetail.id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务名称：\n                <span>{{ methodDetail.name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                紧急等级：\n                <span>{{ methodDetail.urgency_level }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务参数：\n                <span>{{ methodDetail.params ? methodDetail.params : '暂无' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务状态：\n                <span>{{ methodDetail.task_status }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                是否上传原型文件：\n                <span>{{ methodDetail.task_have_origin_file ? '是' : '否' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                是否生成扩增文件：\n                <span>{{ methodDetail.task_have_generate_file ? '是' : '否' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务扩增数据数量：\n                <span>{{ methodDetail.generate_data_number ? methodDetail.generate_data_number : '暂无' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务数据更新时间：\n                <span>{{ methodDetail.update_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务开始时间：\n                <span>{{ methodDetail.start_datetime ? methodDetail.start_datetime : '未开始' | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务结束时间：\n                <span>{{ methodDetail.fin_datetime ? methodDetail.start_datetime : '未结束' | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者id：\n                <span>{{ methodDetail.master_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者username：\n                <span>{{ methodDetail.master_username }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者nickname：\n                <span>{{ methodDetail.master_nickname }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者用户组：\n                <span>{{ methodDetail.master_user_group }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者加入时间：\n                <span>{{ methodDetail.master_join_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者最近一次登录时间：\n                <span>{{ methodDetail.master_last_login_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者信息更新时间：\n                <span>{{ methodDetail.master_update_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法id：\n                <span>{{ methodDetail.augmentation_method_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法名称：\n                <span>{{ methodDetail.augmentation_method_name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法的细节、介绍等：\n                <span>{{ methodDetail.augmentation_method_details }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型id：\n                <span>{{ methodDetail.augmentation_type_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型名称：\n                <span>{{ methodDetail.augmentation_type_name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型的细节、介绍等：\n                <span>{{ methodDetail.augmentation_type_details }}</span>\n            </div>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"taskException\" type=\"warning\">标记任务异常</el-button>\n                <el-button @click=\"methodDialogSelfVisible = false\">关 闭</el-button>\n            </span>\n        </el-dialog>\n        <el-dialog\n            title=\"生成图像预览\"\n            :visible.sync=\"previewDialogVisible\"\n            width=\"1300px\"\n            height=\"630px\"\n            :before-close=\"handleClose\"\n            @close=\"previewClose\"\n            center\n        >\n            <div v-loading=\"this.loading\" element-loading-text=\"拼命加载中\" element-loading-spinner=\"el-icon-loading\" style=\"height: 650px\">\n                <div v-if=\"!loading\">\n                    <span class=\"demonstration right\">选择对比图像</span>\n                    <el-cascader\n                        v-model=\"preview_value\"\n                        :options=\"preview_options\"\n                        :props=\"{ expandTrigger: 'hover' }\"\n                        @change=\"previewHandleChange\"\n                        style=\"width: 800px\"\n                    ></el-cascader>\n                    <div class=\"demo-image__error\" style=\"margin-top: 30px\">\n                        <el-row :gutter=\"30\">\n                            <el-col :span=\"1\">\n                                <div style=\"width: 100px; height: 500px\"></div>\n                            </el-col>\n                            <el-col :span=\"11\">\n                                <el-image style=\"width: 555px; height: 555px\" :src=\"originalpicture\">\n                                    <div slot=\"error\" class=\"image-slot\">\n                                        <img src=\"../../assets/defaultImg.png\" alt=\"\" class=\"lidarPic\" />\n                                    </div>\n                                </el-image>\n                            </el-col>\n                            <el-col :span=\"11\">\n                                <el-image style=\"width: 555px; height: 555px\" :src=\"generatepicture\">\n                                    <div slot=\"error\" class=\"image-slot\">\n                                        <img src=\"../../assets/defaultImg.png\" alt=\"\" class=\"lidarPic\" />\n                                    </div>\n                                </el-image>\n                            </el-col>\n                            <el-col :span=\"1\">\n                                <div style=\"width: 100px; height: 500px\"></div>\n                            </el-col>\n                        </el-row>\n                    </div>\n                </div>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport * as echarts from 'echarts';\nimport 'echarts-gl';\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport vTable from './Table.vue';\nexport default {\n    data() {\n        const isNotNag_int_urg = (rule, value, callback) => {\n            const boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n            if (value !== 0 && !boolean) {\n                callback(new Error('请输入非负整数'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag_int = (rule, value, callback) => {\n            const boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n            if (value !== '0' && !boolean) {\n                callback(new Error('请输入非负整数'));\n            } else {\n                callback();\n            }\n        };\n        const generate_per_file_and_paramsRule = (rule, value, callback) => {\n            if (value < 1) {\n                callback(new Error('只能为大于等于1整数'));\n            } else {\n                callback();\n            }\n        };\n        const isNum = (rule, value, callback) => {\n            const age = /^[0-9]*$/;\n            if (!age.test(value)) {\n                callback(new Error('只能为非负数字'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag = (rule, value, callback) => {\n            if (value < 0) {\n                callback(new Error('只能为非负数'));\n            } else {\n                callback();\n            }\n        };\n        const epsilonRule = (rule, value, callback) => {\n            value = value.replace('[', '');\n            value = value.replace(']', '');\n            value = value.replace('，', ',');\n\n            var list = value.split(',');\n            for (var i in list) {\n                if (!typeof parseFloat(list[i]) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n                    callback(new Error('请填写合理的非负数字列表'));\n                } else {\n                    callback();\n                }\n            }\n        };\n        return {\n            ite_limit_bili_marks: {\n                1: '1%',\n                100: {\n                    style: {\n                        width: '50px'\n                    },\n                    label: '100%'\n                }\n            },\n            directional: [\n                {\n                    value: '0',\n                    label: '定向',\n                    children: [\n                        {\n                            value: '0',\n                            label: '2S1'\n                        },\n                        {\n                            value: '1',\n                            label: 'BMP2'\n                        },\n                        {\n                            value: '2',\n                            label: 'BRDM_2'\n                        },\n                        {\n                            value: '3',\n                            label: 'BTR60'\n                        },\n                        {\n                            value: '4',\n                            label: 'BTR70'\n                        },\n                        {\n                            value: '5',\n                            label: 'D7'\n                        },\n                        {\n                            value: '6',\n                            label: 'T62'\n                        },\n                        {\n                            value: '7',\n                            label: 'T72'\n                        },\n                        {\n                            value: '8',\n                            label: 'ZIL131'\n                        },\n                        {\n                            value: '9',\n                            label: 'ZSU_23_4'\n                        }\n                    ]\n                },\n                {\n                    value: '10',\n                    label: '非定向',\n                    children: [\n                        {\n                            // Guassian_noise\n                            value: '10',\n                            label: '随机'\n                        }\n                    ]\n                }\n            ],\n            directional_id: [null, null],\n            mark_group: {\n                mark1_50: {\n                    1: '1',\n                    50: {\n                        style: {\n                            width: '20px'\n                        },\n                        label: '50'\n                    }\n                },\n                mark0: {\n                    0: '0'\n                },\n                mark01_255: {\n                    0.1: '0.1',\n                    255: {\n                        style: {\n                            width: '50px'\n                        },\n                        label: '255'\n                    }\n                },\n                marks0_5: {\n                    0: '0',\n                    5: '5'\n                },\n                marks1_5: {\n                    1: '1',\n                    5: '5'\n                }\n            },\n            radio_epsilon_4: '1',\n            radio_epsilon_5: '1',\n            radio_epsilon_6: '1',\n            radio_epsilon_7: '1',\n            full_loading_flag: false,\n            generate_func_self: '',\n            generate_func_all: '',\n            generate_func_list: [],\n            queryInfo_Self: {\n                page: 1\n            },\n            taskList_Self: [],\n            total_Self: 0,\n            formInline_Self: {\n                searchType: '',\n                searchTaskInfo: ''\n            },\n            editDialogSelfVisible: false,\n            domain_4: [\n                {\n                    value: 0\n                }\n            ],\n            domain_5: [\n                {\n                    value: 0\n                }\n            ],\n            domain_6: [\n                {\n                    value: 0\n                }\n            ],\n            domain_7: [\n                {\n                    value: 0\n                }\n            ],\n            range_epsilon_7: [0.1, 0.1],\n            range_epsilon_4: [0.1, 0.1],\n            range_epsilon_5: [0.1, 0.1],\n            range_epsilon_6: [0.1, 0.1],\n            editForm_Self: {\n                task_id: 0,\n                master: this.$store.getters.userId,\n                name: '',\n                params: '',\n                file: {},\n                augmentation_method_name: '',\n\n                epsilon_7: null,\n                epsilon_4: null,\n                epsilon_5: null,\n                epsilon_6: null\n            },\n            editFormSelfRules: {\n                name: [{ required: true, message: '请输入任务名', trigger: 'blur' }]\n            },\n            queryInfo_All: {\n                page: 1\n            },\n            taskList_All: [],\n            total_All: 0,\n            formInline_All: {\n                searchType: '',\n                searchTaskInfo: ''\n            },\n            editDialogAllVisible: false,\n            editForm_All: {},\n            editFormAllRules: {\n                name: [{ required: true, message: '请输入任务名', trigger: 'blur' }]\n            },\n            FuzzySearch: 1,\n            activeName: 'self',\n            taskList_All: [],\n            userRight: '',\n            methodDialogSelfVisible: false,\n            methodDetail: [],\n            mohu: true,\n            fileName: '',\n            preview_value: [],\n            preview_options: [],\n            previewDialogVisible: false,\n            loading: true,\n            original_files_zip: null,\n            generate_files_zip: null,\n            originalPointCloudData: [],\n            generatePointCloudData: [],\n            maxAxisValue: -10000,\n            minAxisValue: 10000,\n            original_is_Zip: false,\n            generate_is_Zip: false,\n            original_fileContent: '',\n            generate_fileContent: '',\n            original_blob: null,\n            generate_blob: null,\n            test_text: 'djshdkjdhkadh',\n            change_axios_buttom: false,\n            editForm: {},\n            rules1: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: epsilonRule, trigger: 'blur' }\n                ],\n                generate_per_file_and_params: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            rules2: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            rules3: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                boundary_constraint: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            // originalpicture: 'https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg',\n            // generatepicture: 'https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg',\n            originalpicture: null,\n            generatepicture: null,\n            tempurl: null\n        };\n    },\n    components: {\n        vTable\n    },\n    computed: {\n        rulesList: function() {\n            if (this.editForm_Self.augmentation_method_name === 'FGSM') {\n                return this.rules1;\n            } else if (this.editForm_Self.augmentation_method_name === 'JSMA') {\n                return this.rules3;\n            } else {\n                return this.rules2;\n            }\n        }\n    },\n    created() {\n        this.userRight = window.sessionStorage.getItem('user_group_name');\n\n        this.getTaskList_Self();\n    },\n    async mounted() {\n        this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n        let data = await this.$http.get('/augmentation_method/?augmentation_type=3');\n        // ?id=1\n        console.log('data:', data);\n        this.generate_func_list = data.data.data;\n        // console.log('this.generate_func_list:', this.generate_func_list);\n    },\n    methods: {\n        resetForm(formName, index) {\n            console.log('formName:', formName);\n            // this.$refs[formName].resetFields();\n            if (index == 4) {\n                this.domain_4 = [\n                    {\n                        value: 0\n                    }\n                ];\n            } else if (index == 5) {\n                this.domain_5 = [\n                    {\n                        value: 0\n                    }\n                ];\n            } else if (index == 6) {\n                this.domain_6 = [\n                    {\n                        value: 0\n                    }\n                ];\n            } else if (index == 7) {\n                this.domain_7 = [\n                    {\n                        value: 0\n                    }\n                ];\n            }\n        },\n\n        removeDomain(item, index) {\n            if (index == 4) {\n                if (this.domain_4.length == 1) {\n                    this.$message.error('扰动幅度不可为空!');\n                } else {\n                    var item_index = this.domain_4.indexOf(item);\n                    if (item_index !== -1) {\n                        this.domain_4.splice(item_index, 1);\n                    }\n                }\n            } else if (index == 5) {\n                if (this.domain_5.length == 1) {\n                    this.$message.error('单步扰动幅度不可为空!');\n                } else {\n                    var item_index = this.domain_5.indexOf(item);\n                    if (item_index !== -1) {\n                        this.domain_5.splice(item_index, 1);\n                    }\n                }\n            } else if (index == 6) {\n                if (this.domain_6.length == 1) {\n                    this.$message.error('单步扰动幅度不可为空!');\n                } else {\n                    var item_index = this.domain_6.indexOf(item);\n                    if (item_index !== -1) {\n                        this.domain_6.splice(item_index, 1);\n                    }\n                }\n            } else if (index == 7) {\n                if (this.domain_7.length == 1) {\n                    this.$message.error('单步扰动幅度不可为空!');\n                } else {\n                    var item_index = this.domain_7.indexOf(item);\n                    if (item_index !== -1) {\n                        this.domain_7.splice(item_index, 1);\n                    }\n                }\n            }\n        },\n        addDomain(index) {\n            if (index == 4) {\n                this.domain_4.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            } else if (index == 5) {\n                this.domain_5.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            } else if (index == 6) {\n                this.domain_6.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            } else if (index == 7) {\n                this.domain_7.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            }\n        },\n        previewClose() {\n            this.originalpicture = null;\n            this.generatepicture = null;\n        },\n        // >>>>>>>>>el-tab部分>>>>>>>>>>>>>>>.\n        handleClick(tab, event) {\n            if (tab.index === '1') {\n                this.getTaskList_All();\n            }\n        },\n        // >>>>>>>>>>>>>获取任务列表以及查询部分>>>>>>>>>>>>>>>\n        // 获取子组件getList指令\n        handleSelectClear() {\n            this.getTaskList_Self();\n            this.generate_func_self = '';\n        },\n        handleGetList(data) {\n            if (!data) {\n                this.getTaskList_Self();\n            } else {\n                this.getTaskList_All();\n            }\n        },\n        async getTaskList_Self() {\n            // const { data: data } = await this.$http.get('/task/self/search/' + '?page=' + this.queryInfo_Self.page);\n            const { data: data } = await this.$http.get(\n                '/task/augmentation_type/search/?augmentation_type=3&page=' + this.queryInfo_Self.page\n            );\n\n            if (data.code !== 20000) {\n                if (data.code === 40400) {\n                    console.log('data:', data);\n                    this.taskList_Self = [];\n                    this.totalPageNum = 0;\n                    this.total_Self = 0;\n                    return this.$message.error('本用户未添加任务！');\n                }\n\n                return this.$message.error('获取本用户任务列表失败！');\n            }\n\n            this.taskList_Self = data.data.details;\n\n            this.totalPageNum = data.data.pages;\n            // if (this.queryInfo_Self.page > this.totalPageNum) {\n            //     this.queryInfo_Self.page = this.totalPageNum;\n            // }\n            // console.log('this.taskList_Self:', this.taskList_Self);\n\n            this.total_Self = this.totalPageNum * 10;\n        },\n        async SearchTask_Self() {\n            if (this.formInline_Self.searchType === '') {\n                return this.$message.error('请输入查询方式！');\n            }\n            var flag = 0;\n            var search_params = '';\n            if (this.formInline_Self.searchType === '生成方法') {\n                // search_params = '/task/augmentation_method/search/?augmentation_method=' + this.formInline_Self.searchTaskInfo;\n                search_params =\n                    '/task/augmentation_method/search/?augmentation_method=' +\n                    this.generate_func_self +\n                    '&page=' +\n                    this.queryInfo_Self.page;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                console.log('this.queryInfo_Self.page:', this.queryInfo_Self.page);\n            } else {\n                if (this.formInline_Self.searchTaskInfo === '') {\n                    return this.$message.error('请输入搜索内容！');\n                }\n\n                if (this.formInline_Self.searchType === '任务名称') {\n                    search_params =\n                        '/task/name/search/?augmentation_type=3&task_name=' +\n                        this.formInline_Self.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch +\n                        '&page=' +\n                        this.queryInfo_Self.page;\n                } else {\n                    search_params =\n                        '/task/id/search/?augmentation_type=3&task_id=' +\n                        this.formInline_Self.searchTaskInfo +\n                        '&page=' +\n                        this.queryInfo_Self.page;\n                }\n            }\n            const { data: data } = await this.$http.get(search_params);\n            console.log('data:', data);\n            if (data.code !== 20000) {\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return this.$message.error('未搜索到该任务！');\n            }\n            if (this.formInline_Self.searchType === '任务id') {\n                flag = 1;\n                this.taskList_Self = [];\n                this.taskList_Self.push(data.data);\n            } else {\n                this.taskList_Self = data.data.details;\n            }\n            console.log('data:', data);\n            // this.total_Self = this.taskList_Self ? this.taskList_Self.length : 0;\n            this.totalPageNum = data.data.pages;\n            // if (this.queryInfo_Self.page > this.totalPageNum) {\n            //     this.queryInfo_Self.page = this.totalPageNum;\n            // }\n            this.total_Self = this.totalPageNum * 10;\n            this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n            if (flag) {\n                this.total_Self = this.taskList_Self.length;\n            }\n        },\n        // 获取所有用户任务列表\n        async getTaskList_All() {\n            console.log('this.generate_func_all:', this.generate_func_all);\n            console.log('this.formInline_All.searchType:', this.formInline_All.searchType);\n            if (\n                this.formInline_All.searchType !== '生成方法' &&\n                (this.formInline_All.searchType === '' || this.formInline_All.searchTaskInfo === '')\n            ) {\n                // const { data: data } = await this.$http.get('task/all/admin/search/' + '?page=' + this.queryInfo_All.page);\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/?augmentation_type=3&page=' + this.queryInfo_All.page\n                );\n                if (data.code == 40400) {\n                    console.log('data:', data);\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('所有用户都未添加任务！');\n                }\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取任务列表失败[所有用户]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '用户id') {\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/' +\n                        '?augmentation_type=3&page=' +\n                        this.queryInfo_All.page +\n                        '&user_id=' +\n                        this.formInline_All.searchTaskInfo\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取任务列表失败[用户id]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '任务名称') {\n                const { data: data } = await this.$http.get(\n                    '/task/name/admin/search/' +\n                        '?augmentation_type=3&page=' +\n                        this.queryInfo_All.page +\n                        '&task_name=' +\n                        this.formInline_All.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch\n                );\n                console.log('data:', data);\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[任务名称]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '任务id') {\n                const { data: data } = await this.$http.get(\n                    '/task/id/admin/search/' +\n                        '?augmentation_type=3&page=' +\n                        this.queryInfo_All.page +\n                        '&task_id=' +\n                        this.formInline_All.searchTaskInfo\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[任务id]！' + '错误原因：' + data.msg);\n                }\n                console.log('data:', data);\n                console.log('this.taskList_All:', this.taskList_All);\n                this.taskList_Self = [];\n                this.taskList_Self.push(data.data.details);\n                this.totalPageNum = data.data.pages;\n                // this.total_All = this.taskList_All;\n                this.total_All = this.taskList_All.length;\n            } else if (this.formInline_All.searchType === '生成类型id') {\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/' +\n                        '?page=' +\n                        this.queryInfo_All.page +\n                        '&augmentation_type=' +\n                        this.formInline_All.searchTaskInfo\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[生成类型]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '生成方法') {\n                console.log('here,this.generate_func_all22222:', this.generate_func_all);\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_method/admin/search/' +\n                        '?page=' +\n                        this.queryInfo_All.page +\n                        '&augmentation_method=' +\n                        this.generate_func_all\n                );\n                console.log('data:', data);\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[生成方法]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '用户名') {\n                const { data: data } = await this.$http.get(\n                    '/task/master/admin/search/' +\n                        '?augmentation_type=3&page=' +\n                        this.queryInfo_All.page +\n                        '&username=' +\n                        this.formInline_All.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取任务列表失败[用户名]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                console.log('this.taskList_All:', this.taskList_All);\n                this.total_All = this.totalPageNum * 10;\n            }\n            // console.log('data:', data);\n        },\n        async generate_change(type) {\n            if (type == '本用户') {\n                let search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                const { data: data } = await this.$http.get(search_params);\n                if (data.code !== 20000) {\n                    this.taskList_Self = [];\n                    this.total_Self = 0;\n                    return this.$message.error('未搜索到该任务！');\n                }\n                console.log('data:', data);\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n                console.log('this.total_Self:', this.total_Self);\n                console.log('this.totalPageNum:', this.totalPageNum);\n            } else {\n                let search_params = '/task/augmentation_method/admin/search/?augmentation_method=' + this.generate_func_all;\n                const { data: data } = await this.$http.get(search_params);\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.total_All = 0;\n                    return this.$message.error('未搜索到该任务！');\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                this.total_All = this.total_All ? this.taskList_All.length : 0;\n            }\n        },\n        // 是否启用模糊搜索\n        isFuzzySearch(flag) {\n            this.FuzzySearch = flag;\n        },\n        // 清空二级搜索框\n        clearSecondSelect_All() {\n            this.generate_func_all = '';\n            this.formInline_All.searchTaskInfo = '';\n        },\n        clearSecondSelect_Self() {\n            this.generate_func_self = '';\n            this.formInline_Self.searchTaskInfo = '';\n        },\n        // >>>>>>>>>>分页部分>>>>>>>>>>>>>>>>>>>\n        handleSizeChange_Self(newSize) {\n            this.queryInfo_Self.pagesize = newSize;\n            console.log('newSize-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n            console.log('newSize-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n            this.getTaskList_Self();\n        },\n        handleCurrentChange_Self(newPage) {\n            this.queryInfo_Self.page = newPage;\n            console.log('newPage-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n            console.log('newPage-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n\n            if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                this.getTaskList_Self();\n            } else {\n                this.SearchTask_Self();\n            }\n        },\n        handleSizeChange_All(newSize) {\n            this.queryInfo_All.pagesize = newSize;\n            console.log('newSize-this.formInline_All.searchType:', this.formInline_All.searchType);\n            console.log('newSize-this.queryInfo_All.page:', this.queryInfo_All.page);\n            this.getTaskList_All();\n        },\n        handleCurrentChange_All(newPage) {\n            this.queryInfo_All.page = newPage;\n            console.log('newPage-this.formInline_All.searchType:', this.formInline_All.searchType);\n            console.log('newPage-this.queryInfo_All.page:', this.queryInfo_All.page);\n            this.getTaskList_All();\n            // if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n            //     this.getTaskList_All();\n            // } else {\n            //     this.SearchTask_All();\n            // }\n            // this.queryInfo_All.page = newPage;\n            // this.getTaskList_All();\n        },\n        pageReflash_All() {\n            this.queryInfo_All.page = 1;\n        },\n        pageReflash_Self() {\n            this.queryInfo_Self.page = 1;\n        },\n        // >>>>>>>>>>>>>下载文件部分>>>>>>>>>>>>>>\n        originalfileDownloadTemp(data) {\n            var task_id = data['task_id'];\n            var flag = data['flag'];\n            this.originalfileDownload(task_id, flag);\n        },\n        async originalfileDownload(task_id, flag) {\n            const loading = this.full_loading_flag\n                ? ''\n                : this.$loading({\n                      lock: true,\n                      text: 'Loading',\n                      spinner: 'el-icon-loading',\n                      background: 'rgba(0, 0, 0, 0.7)'\n                  });\n            this.original_fileContent = '';\n            const data = await this.$http.get('/task/file/?task_id=' + task_id + '&file_type=0&format=json', {\n                responseType: 'blob',\n                contentType: 'application/x-www-form-urlencoded'\n            });\n            console.log('original_image_data:', data);\n            var file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n            this.fileName = file_name1[file_name1.length - 1];\n            this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n            var dot = this.fileName.lastIndexOf('.');\n            this.original_is_Zip = false;\n            if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                this.original_is_Zip = true;\n            } else {\n                this.original_blob = data.data;\n                console.log('this.original_blob:', this.original_blob);\n            }\n            if (!this.full_loading_flag) {\n                loading.close();\n            }\n            if (!flag) {\n                fileDownload(data.data, this.fileName);\n            }\n            return data;\n        },\n        generatefileDownloadTemp(data) {\n            var task_id = data['task_id'];\n            var flag = data['flag'];\n            this.generatefileDownload(task_id, flag);\n        },\n        async generatefileDownload(task_id, flag) {\n            const loading = this.full_loading_flag\n                ? ''\n                : this.$loading({\n                      lock: true,\n                      text: 'Loading',\n                      spinner: 'el-icon-loading',\n                      background: 'rgba(0, 0, 0, 0.7)'\n                  });\n            const data = await this.$http.get('/task/file/?task_id=' + task_id + '&file_type=1&format=json', {\n                responseType: 'blob',\n                headers: { 'Content-Type': 'application/json; application/octet-stream' }\n            });\n            var file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n            this.fileName = file_name1[file_name1.length - 1];\n            this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n\n            var dot = this.fileName.lastIndexOf('.');\n            this.generate_is_Zip = false;\n            if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                this.generate_is_Zip = true;\n            } else {\n                this.generate_blob = data.data;\n            }\n            if (!this.full_loading_flag) {\n                loading.close();\n            }\n            if (!flag) {\n                fileDownload(data.data, this.fileName);\n            }\n            return data;\n        },\n        blobToBase64(blob) {\n            return new Promise((resolve, reject) => {\n                const fileReader = new FileReader();\n                fileReader.onload = e => {\n                    resolve(e.target.result);\n                };\n                // readAsDataURL\n                console.log('blob:', typeof blob);\n                fileReader.readAsDataURL(blob);\n\n                fileReader.onerror = () => {\n                    reject(new Error('blobToBase64 error'));\n                };\n            });\n        },\n        // >>>>>>>>>>>>操作按钮部分>>>>>>>>>>>>>\n        async removeTaskById(task_id) {\n            const confirmResult = await this.$confirm('此操作将永久删除该任务, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).catch(err => err);\n            if (confirmResult !== 'confirm') {\n                return this.$message.info('已取消删除');\n            }\n            const { data: data } = await this.$http.delete('/task/?task_id=' + task_id);\n            if (data.code !== 20000) {\n                return this.$message.error('删除任务失败！' + '错误原因：' + data.msg);\n            }\n            this.$message.success('删除任务成功！');\n            if (this.activeName === 'self') {\n                this.queryInfo_Self.page = 1;\n                if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                    this.getTaskList_Self();\n                } else {\n                    this.SearchTask_Self();\n                }\n            } else {\n                this.queryInfo_All.page = 1;\n                if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n                    this.getTaskList_All();\n                } else {\n                    this.SearchTask_All();\n                }\n            }\n        },\n        async showEditDialog(row) {\n            this.editForm_Self = JSON.parse(JSON.stringify(row));\n            this.editForm_Self.params = JSON.parse(row.params);\n            for (var i in this.editForm_Self.params) {\n                this.$set(this.editForm_Self, i, this.editForm_Self.params[i]);\n            }\n            this.editForm_Self.urgency_level = this.editForm_Self.urgency_level;\n            this.editForm_Self.strict_mode = this.editForm_Self.strict_mode === '1' ? true : false;\n\n            if (this.editForm_Self.augmentation_method_name === 'FGSM-合成孔径雷达') {\n                if (this.editForm_Self.generate_per_file) {\n                    console.log('扰动为范围');\n                    this.radio_epsilon_4 = '2';\n                    this.range_epsilon_4 = [];\n                    this.range_epsilon_4.push(parseFloat(this.editForm_Self.epsilon_lower_limit));\n                    this.range_epsilon_4.push(parseFloat(this.editForm_Self.epsilon_upper_limit));\n                    this.editForm_Self.generate_per_file = parseInt(this.editForm_Self.generate_per_file);\n                    console.log('this.editForm_Self:', this.editForm_Self);\n                } else {\n                    console.log('扰动为列表');\n                    this.radio_epsilon_4 = '1';\n                    var temp_array = this.editForm_Self.epsilon\n                        .replace('[', '')\n                        .replace(']', '')\n                        .split(',');\n                    console.log('temp_array:', temp_array);\n                    var temp = [];\n                    for (var i in temp_array) {\n                        var temp_item = {};\n                        temp_item.value = parseFloat(temp_array[i]);\n                        temp.push(temp_item);\n                    }\n                    console.log('temp:', temp);\n                    this.domain_4 = temp;\n                }\n            } else if (this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-合成孔径雷达') {\n                this.editForm_Self.ite_limit = parseInt(this.editForm_Self.ite_limit);\n                if (this.editForm_Self.generate_per_file) {\n                    console.log('扰动为范围');\n                    this.radio_epsilon_5 = '2';\n                    this.range_epsilon_5 = [];\n                    this.range_epsilon_5.push(parseFloat(this.editForm_Self.epsilon_lower_limit));\n                    this.range_epsilon_5.push(parseFloat(this.editForm_Self.epsilon_upper_limit));\n                    this.editForm_Self.generate_per_file = parseInt(this.editForm_Self.generate_per_file);\n                    console.log('this.editForm_Self:', this.editForm_Self);\n                } else {\n                    console.log('扰动为列表');\n                    this.radio_epsilon_5 = '1';\n                    var temp_array = this.editForm_Self.epsilon\n                        .replace('[', '')\n                        .replace(']', '')\n                        .split(',');\n                    console.log('temp_array:', temp_array);\n                    var temp = [];\n                    for (var i in temp_array) {\n                        var temp_item = {};\n                        temp_item.value = parseFloat(temp_array[i]);\n                        temp.push(temp_item);\n                    }\n                    console.log('temp:', temp);\n                    this.domain_5 = temp;\n                }\n            } else if (this.editForm_Self.augmentation_method_name === 'JSMA-合成孔径雷达') {\n                this.editForm_Self.gamma = parseFloat(this.editForm_Self.gamma) * 100;\n                // this.editForm_Self.positive = this.editForm_Self.positive === '1' ? true : false;\n                if (this.editForm_Self.target) {\n                    this.directional_id = ['0', this.editForm_Self.target];\n                } else {\n                    this.directional_id = ['10', '10'];\n                }\n                if (this.editForm_Self.generate_per_file) {\n                    console.log('扰动为范围');\n                    this.radio_epsilon_6 = '2';\n                    this.range_epsilon_6 = [];\n                    this.range_epsilon_6.push(parseFloat(this.editForm_Self.epsilon_lower_limit));\n                    this.range_epsilon_6.push(parseFloat(this.editForm_Self.epsilon_upper_limit));\n                    this.editForm_Self.generate_per_file = parseInt(this.editForm_Self.generate_per_file);\n                    console.log('this.editForm_Self:', this.editForm_Self);\n                } else {\n                    console.log('扰动为列表');\n                    this.radio_epsilon_6 = '1';\n                    var temp_array = this.editForm_Self.epsilon\n                        .replace('[', '')\n                        .replace(']', '')\n                        .split(',');\n                    console.log('temp_array:', temp_array);\n                    var temp = [];\n                    for (var i in temp_array) {\n                        var temp_item = {};\n                        temp_item.value = parseFloat(temp_array[i]);\n                        temp.push(temp_item);\n                    }\n                    console.log('temp:', temp);\n                    this.domain_6 = temp;\n                }\n            } else if (this.editForm_Self.augmentation_method_name === 'SIMBA-合成孔径雷达') {\n                this.editForm_Self.num_iters = parseInt(this.editForm_Self.num_iters);\n                if (this.editForm_Self.generate_per_file) {\n                    console.log('扰动为范围');\n                    this.radio_epsilon_7 = '2';\n                    this.range_epsilon_7 = [];\n                    this.range_epsilon_7.push(parseFloat(this.editForm_Self.epsilon_lower_limit));\n                    this.range_epsilon_7.push(parseFloat(this.editForm_Self.epsilon_upper_limit));\n                    this.editForm_Self.generate_per_file = parseInt(this.editForm_Self.generate_per_file);\n                    console.log('this.editForm_Self:', this.editForm_Self);\n                } else {\n                    console.log('扰动为列表');\n                    this.radio_epsilon_7 = '1';\n                    var temp_array = this.editForm_Self.epsilon\n                        .replace('[', '')\n                        .replace(']', '')\n                        .split(',');\n                    console.log('temp_array:', temp_array);\n                    var temp = [];\n                    for (var i in temp_array) {\n                        var temp_item = {};\n                        temp_item.value = parseFloat(temp_array[i]);\n                        temp.push(temp_item);\n                    }\n                    console.log('temp:', temp);\n                    this.domain_7 = temp;\n                }\n            }\n\n            console.log('this.editForm_Self:', this.editForm_Self);\n            // console.log('this.domain_4:', this.domain_4);\n            this.editDialogSelfVisible = true;\n        },\n        editDialogClosed() {\n            this.editForm_Self = {\n                task_id: 0,\n                master: this.$store.getters.userId,\n                name: '',\n                params: '',\n                file: {},\n                augmentation_method_name: ''\n            };\n            this.domain_4 = [\n                {\n                    value: 0\n                }\n            ];\n            this.domain_5 = [\n                {\n                    value: 0\n                }\n            ];\n            this.domain_6 = [\n                {\n                    value: 0\n                }\n            ];\n            this.domain_7 = [\n                {\n                    value: 0\n                }\n            ];\n            this.range_epsilon_7 = [0.1, 0.1];\n            this.range_epsilon_4 = [0.1, 0.1];\n            this.range_epsilon_5 = [0.1, 0.1];\n            this.range_epsilon_6 = [0.1, 0.1];\n            this.radio_epsilon_4 = '1';\n            this.radio_epsilon_5 = '1';\n            this.radio_epsilon_6 = '1';\n            this.radio_epsilon_7 = '1';\n        },\n        editTaskInfo() {\n            this.editForm_Self.master = this.$store.state.userId;\n            if (this.editForm_Self.epsilon) {\n                this.editForm_Self.epsilon = this.editForm_Self.epsilon.replace('，', ',');\n            }\n            this.$refs.editFormRef.validate(async valid => {\n                if (!valid) return;\n\n                var adddata = new FormData();\n                adddata.append('task_id', this.editForm_Self.id);\n                adddata.append('name', this.editForm_Self.name);\n                adddata.append('master', this.editForm_Self.master);\n\n                adddata.append('urgency_level', this.editForm_Self.urgency_level);\n                var temp_params = {};\n                temp_params.strict_mode = this.editForm_Self.strict_mode ? '1' : '0';\n                if (this.editForm_Self.augmentation_method_name === 'FGSM-合成孔径雷达') {\n                    if (this.radio_epsilon_4 == '1') {\n                        console.log('扰动为列表');\n                        var temp = [];\n                        for (var x in this.domain_4) {\n                            console.log('this.domain_4[x][\"value\"]:', this.domain_4[x]['value']);\n                            temp.push(this.domain_4[x]['value']);\n                        }\n                        temp_params.epsilon = '[' + temp.toString() + ']';\n                    } else {\n                        console.log('扰动为范围');\n                        temp_params.epsilon_upper_limit = this.range_epsilon_4[1] + '';\n                        temp_params.epsilon_lower_limit = this.range_epsilon_4[0] + '';\n                        temp_params.generate_per_file = this.editForm_Self.generate_per_file + '';\n                    }\n                    console.log('temp_params:', temp_params);\n                } else if (this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-合成孔径雷达') {\n                    temp_params.ite_limit = this.editForm_Self.ite_limit + '';\n                    if (this.radio_epsilon_5 == '1') {\n                        console.log('扰动为列表[发送5]');\n                        var temp = [];\n                        for (var x in this.domain_5) {\n                            console.log('this.domain_5[x][\"value\"]:', this.domain_5[x]['value']);\n                            temp.push(this.domain_5[x]['value']);\n                        }\n                        temp_params.epsilon = '[' + temp.toString() + ']';\n                    } else {\n                        console.log('扰动为范围[发送5]');\n                        temp_params.epsilon_upper_limit = this.range_epsilon_5[1] + '';\n                        temp_params.epsilon_lower_limit = this.range_epsilon_5[0] + '';\n                        temp_params.generate_per_file = this.editForm_Self.generate_per_file + '';\n                    }\n                    console.log('temp_params:', temp_params);\n                } else if (this.editForm_Self.augmentation_method_name === 'JSMA-合成孔径雷达') {\n                    temp_params.gamma = this.editForm_Self.gamma / 100.0 + '';\n                    temp_params.positive = this.editForm_Self.positive;\n\n                    console.log('this.directional_id:', this.directional_id);\n                    if (this.directional_id[1] != '10') {\n                        temp_params.target = this.directional_id[1];\n                    }\n\n                    if (this.radio_epsilon_6 == '1') {\n                        console.log('扰动为列表[发送6]');\n                        var temp = [];\n                        for (var x in this.domain_6) {\n                            console.log('this.domain_6[x][\"value\"]:', this.domain_6[x]['value']);\n                            temp.push(this.domain_6[x]['value']);\n                        }\n                        temp_params.epsilon = '[' + temp.toString() + ']';\n                    } else {\n                        console.log('扰动为范围[发送6]');\n                        temp_params.epsilon_upper_limit = this.range_epsilon_6[1] + '';\n                        temp_params.epsilon_lower_limit = this.range_epsilon_6[0] + '';\n                        temp_params.generate_per_file = this.editForm_Self.generate_per_file + '';\n                    }\n                    console.log('temp_params:', temp_params);\n                } else if (this.editForm_Self.augmentation_method_name === 'SIMBA-合成孔径雷达') {\n                    temp_params.num_iters = this.editForm_Self.num_iters + '';\n                    if (this.radio_epsilon_7 == '1') {\n                        console.log('扰动为列表[发送7]');\n                        var temp = [];\n                        console.log('this.domain_7:', this.domain_7);\n                        for (var x in this.domain_7) {\n                            console.log('this.domain_7[x][\"value\"]:', this.domain_7[x]['value']);\n                            temp.push(this.domain_7[x]['value']);\n                        }\n                        temp_params.epsilon = '[' + temp.toString() + ']';\n                    } else {\n                        console.log('扰动为范围[发送7]');\n                        temp_params.epsilon_upper_limit = this.range_epsilon_7[1] + '';\n                        temp_params.epsilon_lower_limit = this.range_epsilon_7[0] + '';\n                        temp_params.generate_per_file = this.editForm_Self.generate_per_file + '';\n                    }\n                    console.log('temp_params:', temp_params);\n                }\n                temp_params.strict_mode = this.editForm_Self.strict_mode ? '1' : '0';\n                temp_params = JSON.stringify(temp_params);\n\n                adddata.append('params', temp_params);\n                this.editForm_Self.file = document.getElementById('filetemp').files[0];\n                if (this.editForm_Self.file) {\n                    adddata.append('file', this.editForm_Self.file);\n                }\n                for (var [a, b] of adddata.entries()) {\n                }\n                const { data: data } = await this.$http({\n                    url: '/task/',\n                    data: adddata,\n                    method: 'put'\n                });\n                if (data.code !== 20000) {\n                    return this.$message.error('修改任务失败！' + '错误原因：' + data.msg);\n                }\n                this.$message.success('修改任务成功！');\n                this.editDialogSelfVisible = false;\n                this.$refs.editFormRef.resetFields();\n                this.editForm_Self.augmentation_type = '';\n                this.editForm_Self.augmentation_method = '';\n                this.editForm_Self.file = {};\n                this.getTaskList_Self();\n                this.getTaskList_All();\n            });\n        },\n        async getdata(reader, self) {\n            return (reader.onload = await function() {\n                self.fileContent = this.result;\n            });\n        },\n        // 标记任务异常\n        async taskException() {\n            this.$confirm('是否确定将该任务标记成异常状态？')\n                .then(async _ => {\n                    var adddata = new FormData();\n                    adddata.append('task_id', this.methodDetail.id);\n                    const { data: data } = await this.$http({\n                        url: '/task/exception/',\n                        data: adddata,\n                        method: 'post'\n                    });\n                    if (data.code !== 20000) {\n                        return this.$message.error('添加生成任务失败！' + '错误原因：' + data.msg);\n                    }\n                    this.$message.success('标记成异常成功！');\n                })\n                .catch(_ => {});\n        },\n        //任务详情对话框\n        async MethodDetail(id) {\n            // id = data\n            console.log('this.methodDetail:', this.methodDetail);\n            this.methodDialogSelfVisible = true;\n            const { data: data } = await this.$http.get('/task/' + '?task_id=' + id);\n            if (data.code !== 20000) {\n                return this.$message.error('获取本用户任务详情失败！' + '错误原因：' + data.msg);\n            }\n\n            this.methodDetail = data.data;\n        },\n        methodDialogClose() {\n            console.log('this.methodDetail:', this.methodDetail);\n            this.methodDetail = [];\n        },\n        // >>>>>>>>>>图像预览部分>>>>>>>>>>>>>>>\n\n        async point_cloud_preview(task_id) {\n            this.full_loading_flag = true;\n            const loading = this.$loading({\n                lock: true,\n                text: 'Loading',\n                spinner: 'el-icon-loading',\n                background: 'rgba(0, 0, 0, 0.7)'\n            });\n            // console.log('loading:', loading);\n            // console.log('this.$loading.lock:', this.$loading.lock);\n            // this.previewDialogVisible = true;\n            var preview_options = [];\n            var original_res = await this.originalfileDownload(task_id, 1);\n\n            if (this.original_is_Zip) {\n                let original_files_zip = new window.File([original_res.data], this.fileName, { type: 'zip' });\n\n                let original_files = new JSZip();\n                var orignal_names = [];\n                this.original_files_zip = original_files_zip;\n                let me = this;\n                await original_files.loadAsync(this.original_files_zip).then(function(zip) {\n                    for (var i in original_files.files) {\n                        var temp_object = {};\n                        orignal_names.push(i);\n                        temp_object['value'] = i;\n                        temp_object['label'] = i;\n                        temp_object['children'] = [];\n                        preview_options.push(temp_object);\n                    }\n\n                    me.original_files_zip = original_files_zip;\n                });\n            } else {\n                var temp_object = {};\n                temp_object['value'] = this.fileName;\n                temp_object['label'] = this.fileName;\n                temp_object['children'] = [];\n                preview_options.push(temp_object);\n            }\n            var generate_res = await this.generatefileDownload(task_id, 1);\n            if (this.generate_is_Zip) {\n                let generate_files_zip = new window.File([generate_res.data], this.fileName, { type: 'zip' });\n                var generate_files = new JSZip();\n                var generate_names = [];\n                var original_is_Zip = this.original_is_Zip;\n                await generate_files.loadAsync(generate_files_zip).then(function(generate_files_zip) {\n                    // console.log('generate_files.files:', generate_files.files);\n                    for (var i in generate_files.files) {\n                        generate_names.push(i);\n                    }\n\n                    if (original_is_Zip) {\n                        // console.log('orignal_names:', orignal_names);\n                        // console.log('generate_names:', generate_names);\n                        for (var i in orignal_names) {\n                            for (var j in generate_names) {\n                                // 原始文件和生成文进行对应\n                                // if (generate_names[j].search(orignal_names[i]) != -1) {\n                                //     var temp_object = {};\n                                //     temp_object['value'] = generate_names[j];\n                                //     temp_object['label'] = generate_names[j];\n                                //     preview_options[i].children.push(temp_object);\n                                // }\n                                if (generate_names[j].search(orignal_names[i].split('.')[0]) != -1) {\n                                    var temp_object = {};\n                                    temp_object['value'] = generate_names[j];\n                                    temp_object['label'] = generate_names[j];\n                                    preview_options[i].children.push(temp_object);\n                                }\n                            }\n                        }\n                    } else {\n                        for (var j in generate_names) {\n                            var temp_object = {};\n                            temp_object['value'] = generate_names[j];\n                            temp_object['label'] = generate_names[j];\n                            preview_options[0].children.push(temp_object);\n                        }\n                    }\n                });\n                this.generate_files_zip = generate_files_zip;\n            } else {\n                var temp_object = {};\n                temp_object['value'] = this.fileName;\n                temp_object['label'] = this.fileName;\n                preview_options[0].children.push(temp_object);\n            }\n            loading.close();\n            this.full_loading_flag = false;\n            this.previewDialogVisible = true;\n            this.$message.success('已获取文件列表，请选择需预览的文件！');\n            this.preview_options = preview_options;\n            console.log('preview_options:', preview_options);\n            this.loading = false;\n        },\n        make_format_data(images_name, images, flag) {\n            // 灰度图仅支持.jpg或.jpeg形式\n            var format_data = null;\n            var dot = images_name.lastIndexOf('.');\n            var data_type = images_name.substr(dot);\n            if (data_type === '.jpg' || data_type === '.jpeg') {\n                let me = this;\n                // console.log('here');\n                if (!flag) {\n                    console.log('this.originalpicture:', this.originalpicture);\n\n                    let blob = new Blob([images], { type: 'image/jpeg' });\n                    let url = window.URL.createObjectURL(blob);\n                    this.originalpicture = url;\n                    // console.log('url:', url);\n                    // console.log('me.tempurl:', me.tempurl);\n                } else {\n                    let blob = new Blob([images], { type: 'image/jpeg' });\n                    let url = window.URL.createObjectURL(blob);\n                    this.generatepicture = url;\n                }\n            } else {\n                this.$message.error('文件格式错误！【灰度图仅支持.jpg或.jpeg形式】');\n            }\n        },\n        get_preview() {},\n        async previewHandleChange() {\n            this.originalPointCloudData = [];\n            this.generatePointCloudData = [];\n            var original_points_name = this.preview_value[0];\n            var generate_points_name = this.preview_value[1];\n            var original_pointscloud = null;\n            var generate_pointscloud = null;\n            if (this.original_is_Zip) {\n                var original_files = new JSZip();\n                await original_files.loadAsync(this.original_files_zip).then(async function(file) {\n                    // 注意这里可以选择解压文件的格式（string、blob等等）\n                    await original_files\n                        .file(original_points_name)\n                        .async('blob')\n                        .then(function(content) {\n                            original_pointscloud = content;\n                        });\n                });\n                this.make_format_data(original_points_name, original_pointscloud, 0);\n                console.log('original_image:', original_pointscloud);\n                var generate_files = new JSZip();\n                await generate_files.loadAsync(this.generate_files_zip).then(async function(generate_files_zip) {\n                    await generate_files\n                        .file(generate_points_name)\n                        .async('blob')\n                        .then(function(content) {\n                            generate_pointscloud = content;\n                        });\n                });\n                this.make_format_data(generate_points_name, generate_pointscloud, 1);\n                console.log('generate_image:', generate_pointscloud);\n            } else {\n                var reader = new FileReader();\n                console.log('this.original_blob:', this.original_blob);\n                reader.readAsDataURL(this.original_blob);\n                let me = this;\n\n                reader.onload = async function() {\n                    var original_content = this.result;\n                    console.log('original_content:', original_content);\n                    me.originalpicture = original_content;\n                    // me.make_format_data(me.preview_options[0].value, original_content, 0);\n\n                    if (me.generate_is_Zip) {\n                        var generate_files = new JSZip();\n                        await generate_files.loadAsync(me.generate_files_zip).then(async function(generate_files_zip) {\n                            await generate_files\n                                .file(generate_points_name)\n                                .async('blob')\n                                .then(function(content) {\n                                    generate_pointscloud = content;\n                                });\n                        });\n                        me.make_format_data(generate_points_name, generate_pointscloud, 1);\n\n                        me.get_preview();\n                    } else {\n                        var reader2 = new FileReader();\n                        reader2.readAsText(this.generate_blob);\n\n                        reader2.onload = async function() {\n                            var generate_content = this.result;\n                            me.make_format_data(me.preview_options[0].children.value, generate_content, 1);\n                        };\n                    }\n                };\n            }\n            // console.log('this.originalPointCloudData:', this.originalPointCloudData);\n            // console.log('this.generatePointCloudData:', this.generatePointCloudData);\n            this.get_preview();\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n                .then(_ => {\n                    this.previewDialogVisible = false;\n                    this.fileName = '';\n                    this.preview_value = [];\n                    this.preview_options = [];\n                    this.previewDialogVisible = false;\n                    this.loading = true;\n                    this.original_files_zip = null;\n                    this.generate_files_zip = null;\n                    this.originalPointCloudData = [];\n                    this.generatePointCloudData = [];\n                    this.maxAxisValue = -10000;\n                    this.minAxisValue = 10000;\n                })\n                .catch(_ => {});\n        },\n        changeAxios_xz() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][0], this.originalPointCloudData[i][2]] = [\n                    this.originalPointCloudData[i][2],\n                    this.originalPointCloudData[i][0]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][0], this.generatePointCloudData[i][2]] = [\n                    this.generatePointCloudData[i][2],\n                    this.generatePointCloudData[i][0]\n                ];\n            }\n            this.get_preview();\n        },\n        changeAxios_yz() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][1], this.originalPointCloudData[i][2]] = [\n                    this.originalPointCloudData[i][2],\n                    this.originalPointCloudData[i][1]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][1], this.generatePointCloudData[i][2]] = [\n                    this.generatePointCloudData[i][2],\n                    this.generatePointCloudData[i][1]\n                ];\n            }\n            this.get_preview();\n        },\n        changeAxios_xy() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][0], this.originalPointCloudData[i][1]] = [\n                    this.originalPointCloudData[i][1],\n                    this.originalPointCloudData[i][0]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][0], this.generatePointCloudData[i][1]] = [\n                    this.generatePointCloudData[i][1],\n                    this.generatePointCloudData[i][0]\n                ];\n            }\n            this.get_preview();\n        },\n        // >>>>>>>>>>表格空白部分填充>>>>>>>>>>>>>>>>\n        isBlank_num(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '-- --';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            return value;\n        },\n        isBlank_start(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '未开始';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n            return value;\n        },\n        isBlank_end(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '未结束';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n            return value;\n        }\n    }\n};\n</script>\n<style scoped>\n.juzhong {\n    width: 600px;\n    height: 530px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -300px;\n    margin-top: -265px;\n    background-color: #fff;\n}\n.search {\n    margin-bottom: 10px !important;\n}\n.right {\n    margin-right: 5px !important;\n}\n.right10 {\n    margin-right: 10px !important;\n}\n.user-info-list {\n    padding-left: 10px;\n    background-color: rgba(255, 255, 255, 0.4);\n    font-size: 14px;\n    color: #000;\n    line-height: 25px;\n}\n.el-input__inner {\n    width: 600px !important;\n}\n.view1 {\n    width: 600px;\n    height: 530px;\n    margin: 0 10px 0 0;\n    background-color: #fff;\n    float: left;\n}\n.el-dialog {\n    display: flex;\n    flex-direction: column;\n    margin: 0 !important;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    max-height: calc(100% - 30px);\n    max-width: calc(100% - 30px);\n}\n.el-dialog .el-dialog__body {\n    flex: 1;\n    overflow: auto;\n}\n/* .inlineBlock {\n    display: inline-block;\n} */\n</style>\n"],"sourceRoot":"src/components/page"}]}