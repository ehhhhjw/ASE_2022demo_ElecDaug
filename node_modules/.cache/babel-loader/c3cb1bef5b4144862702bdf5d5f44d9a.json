{"remainingRequest":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/Log.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/Log.vue","mtime":1628741922000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport qs from 'qs';\nimport _fileDownload from 'js-file-download';\nexport default {\n  name: 'baseform',\n  data: function data() {\n    return {\n      activeName: 'first',\n      logData: {},\n      logShow_old: [],\n      logShow_new_one: [],\n      logShow_new_two: [],\n      logShow_new_three: [],\n      logDownload: ''\n    };\n  },\n  methods: {\n    getOne: function () {\n      var _getOne = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('log/recent_twenty_four_hours/');\n\n              case 2:\n                _yield$this$$http$get = _context.sent;\n                data = _yield$this$$http$get.data;\n\n                if (!(data.code !== 20000)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取24小时内日志数据失败！' + '错误原因：' + data.msg));\n\n              case 6:\n                this.logData = data.data;\n                this.showData(1);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOne() {\n        return _getOne.apply(this, arguments);\n      }\n\n      return getOne;\n    }(),\n    getTwo: function () {\n      var _getTwo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$$http$get2, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get('log/recent_fifteen_days/');\n\n              case 2:\n                _yield$this$$http$get2 = _context2.sent;\n                data = _yield$this$$http$get2.data;\n\n                if (!(data.code !== 20000)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('获取近15日系统日志数据失败！' + '错误原因：' + data.msg));\n\n              case 6:\n                this.logData = data.data;\n                this.showData(2);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getTwo() {\n        return _getTwo.apply(this, arguments);\n      }\n\n      return getTwo;\n    }(),\n    getThree: function () {\n      var _getThree = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$this$$http$get3, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$http.get('log/recent_six_months/');\n\n              case 2:\n                _yield$this$$http$get3 = _context3.sent;\n                data = _yield$this$$http$get3.data;\n\n                if (!(data.code !== 20000)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('获取近6个月系统日志数据失败！' + '错误原因：' + data.msg));\n\n              case 6:\n                this.logData = data.data;\n                this.showData(3);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getThree() {\n        return _getThree.apply(this, arguments);\n      }\n\n      return getThree;\n    }(),\n    handleClick: function handleClick(tab, event) {},\n    fileDownload: function fileDownload() {\n      _fileDownload(this.logDownload, 'logData.json');\n    },\n    showData: function showData(num) {\n      var logShow = [];\n\n      for (var date in this.logData) {\n        var units2_new = [];\n\n        for (var method in this.logData[date]) {\n          var unit4 = {};\n          unit4 = JSON.parse(JSON.stringify(this.logData[date][method]));\n          unit4.label4 = method;\n          units2_new.push(unit4);\n        }\n\n        var unit1_new = {};\n        unit1_new.label1 = date;\n        unit1_new.children = units2_new;\n        logShow.push(unit1_new);\n      }\n\n      if (num === 1) {\n        this.logShow_new_one = logShow;\n      } else if (num === 2) {\n        this.logShow_new_two = logShow;\n      } else {\n        this.logShow_new_three = logShow;\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.getOne();\n    this.getTwo();\n    this.getThree();\n  }\n};",{"version":3,"sources":["Log.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item> <i class=\"el-icon-reading\"></i> 平台日志管理 </el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <el-card>\n            <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n                <el-tab-pane label=\"24小时内日志数据\" name=\"first\">\n                    <el-table :data=\"logShow_new_one\" style=\"width: 99%\" stripe>\n                        <el-table-column type=\"index\"></el-table-column>\n                        <el-table-column type=\"expand\" style=\"background:rgba(150, 154, 184,0.05);\">\n                            <template slot-scope=\"scope\">\n                                <el-table :data=\"scope.row.children\" style=\"width: 62%\">\n                                    <el-table-column prop=\"label4\" label=\"生成方法名\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"finish_task_number\" label=\"已完成任务数量\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"ran_task_number\" label=\"运行中任务数量\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"generate_data_number\" label=\"生成数据数量\" width=\"180\"> </el-table-column>\n                                </el-table>\n                            </template>\n                        </el-table-column>\n                        <el-table-column prop=\"label1\" label=\"日志记录时间\" align=\"left\"> </el-table-column>\n                    </el-table>\n                </el-tab-pane>\n                <el-tab-pane label=\"近15天系统日志数据\" name=\"second\">\n                    <el-table :data=\"logShow_new_two\" style=\"width: 99%\" stripe>\n                        <el-table-column type=\"index\"></el-table-column>\n                        <el-table-column type=\"expand\" style=\"background:rgba(150, 154, 184,0.05);\">\n                            <template slot-scope=\"scope\">\n                                <el-table :data=\"scope.row.children\" style=\"width: 62%\">\n                                    <el-table-column prop=\"label4\" label=\"生成方法名\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"finish_task_number\" label=\"已完成任务数量\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"ran_task_number\" label=\"运行中任务数量\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"generate_data_number\" label=\"生成数据数量\" width=\"180\"> </el-table-column>\n                                </el-table>\n                            </template>\n                        </el-table-column>\n                        <el-table-column prop=\"label1\" label=\"日志记录时间\" align=\"left\"> </el-table-column>\n                    </el-table>\n                </el-tab-pane>\n                <el-tab-pane label=\"近6个月系统日志数据\" name=\"third\">\n                    <el-table :data=\"logShow_new_three\" style=\"width: 99%\" stripe>\n                        <el-table-column type=\"index\"></el-table-column>\n                        <el-table-column type=\"expand\" style=\"background:rgba(150, 154, 184,0.05);\">\n                            <template slot-scope=\"scope\">\n                                <el-table :data=\"scope.row.children\" style=\"width: 62%\">\n                                    <el-table-column prop=\"label4\" label=\"生成方法名\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"finish_task_number\" label=\"已完成任务数量\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"ran_task_number\" label=\"运行中任务数量\" width=\"180\"> </el-table-column>\n                                    <el-table-column prop=\"generate_data_number\" label=\"生成数据数量\" width=\"180\"> </el-table-column>\n                                </el-table>\n                            </template>\n                        </el-table-column>\n                        <el-table-column prop=\"label1\" label=\"日志记录时间\" align=\"left\"> </el-table-column>\n                    </el-table>\n                </el-tab-pane>\n            </el-tabs>\n        </el-card>\n    </div>\n</template>\n<script>\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nexport default {\n    name: 'baseform',\n    data() {\n        return {\n            activeName: 'first',\n            logData: {},\n            logShow_old: [],\n            logShow_new_one: [],\n            logShow_new_two: [],\n            logShow_new_three: [],\n            logDownload: ''\n        };\n    },\n    methods: {\n        async getOne() {\n            const { data: data } = await this.$http.get('log/recent_twenty_four_hours/');\n            if (data.code !== 20000) {\n                return this.$message.error('获取24小时内日志数据失败！' + '错误原因：' + data.msg);\n            }\n            this.logData = data.data;\n            this.showData(1);\n        },\n        async getTwo() {\n            const { data: data } = await this.$http.get('log/recent_fifteen_days/');\n            if (data.code !== 20000) {\n                return this.$message.error('获取近15日系统日志数据失败！' + '错误原因：' + data.msg);\n            }\n            this.logData = data.data;\n\n            this.showData(2);\n        },\n        async getThree() {\n            const { data: data } = await this.$http.get('log/recent_six_months/');\n            if (data.code !== 20000) {\n                return this.$message.error('获取近6个月系统日志数据失败！' + '错误原因：' + data.msg);\n            }\n            this.logData = data.data;\n            this.showData(3);\n        },\n        handleClick(tab, event) {},\n        fileDownload() {\n            fileDownload(this.logDownload, 'logData.json');\n        },\n        showData(num) {\n            var logShow = [];\n            for (var date in this.logData) {\n                var units2_new = [];\n                for (var method in this.logData[date]) {\n                    var unit4 = {};\n                    unit4 = JSON.parse(JSON.stringify(this.logData[date][method]));\n                    unit4.label4 = method;\n                    units2_new.push(unit4);\n                }\n                var unit1_new = {};\n                unit1_new.label1 = date;\n                unit1_new.children = units2_new;\n                logShow.push(unit1_new);\n            }\n\n            if (num === 1) {\n                this.logShow_new_one = logShow;\n            } else if (num === 2) {\n                this.logShow_new_two = logShow;\n            } else {\n                this.logShow_new_three = logShow;\n            }\n        }\n    },\n    mounted() {\n        this.getOne();\n        this.getTwo();\n        this.getThree();\n    }\n};\n</script>\n<style scoped>\n.el-table,\n.el-table__expanded-cell {\n    background-color: #409eff;\n}\n.el-table th,\n.el-table tr {\n    background-color: #409eff;\n}\n</style>\n"],"sourceRoot":"src/components/page"}]}