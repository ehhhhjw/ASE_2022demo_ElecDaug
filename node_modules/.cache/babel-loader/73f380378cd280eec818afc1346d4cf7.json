{"remainingRequest":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/thread-loader/dist/cjs.js!/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js!/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/src/components/page/Image_A_AugTaskAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/src/components/page/Image_A_AugTaskAdd.vue","mtime":1637242892000},{"path":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/五月/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport _slicedToArray from \"/Users/hejiawei/Desktop/\\u4E94\\u6708/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/hejiawei/Desktop/\\u4E94\\u6708/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _typeof from \"/Users/hejiawei/Desktop/\\u4E94\\u6708/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport qs from 'qs';\nexport default {\n  name: 'baseform',\n  inject: ['reload'],\n  data: function data() {\n    var isNotNag_int = function isNotNag_int(rule, value, callback) {\n      var boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n      if (value !== '0' && !boolean) {\n        callback(new Error('请输入非负整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var generate_per_file_and_paramsRule = function generate_per_file_and_paramsRule(rule, value, callback) {\n      if (value < 1) {\n        callback(new Error('只能为大于等于1整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNum = function isNum(rule, value, callback) {\n      var age = /^[0-9]*$/;\n\n      if (!age.test(value)) {\n        callback(new Error('只能为非负数字'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNotNag = function isNotNag(rule, value, callback) {\n      if (value < 0) {\n        callback(new Error('只能为非负数'));\n      } else {\n        callback();\n      }\n    };\n\n    var epsilonRule = function epsilonRule(rule, value, callback) {\n      var list = value.split(',');\n\n      for (var i in list) {\n        if (!_typeof(parseFloat(list[i])) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n          callback(new Error('请填写合理的非负数字列表'));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    return {\n      mark_group: {\n        mark0: {\n          0: '0'\n        },\n        mark01_255: {\n          0.1: '0.1',\n          255: '255'\n        },\n        marks0_5: {\n          0: '0',\n          5: '5'\n        },\n        marks1_5: {\n          1: '1',\n          5: '5'\n        }\n      },\n      radio_epsilon_4: '1',\n      radio_epsilon_5: '1',\n      radio_epsilon_6: '1',\n      radio_epsilon_7: '1',\n      loading: false,\n      form: {\n        domain_4: [{\n          value: 0\n        }],\n        domain_5: [{\n          value: 0\n        }],\n        domain_6: [{\n          value: 0\n        }],\n        domain_7: [{\n          value: 0\n        }],\n        target: null,\n        positive: '1',\n        name: '',\n        augmentation_method: null,\n        epsilon: '',\n        // range_epsilon_5: null,\n        // range_epsilon_6: null,\n        range_epsilon_7: [0.1, 0.1],\n        range_epsilon_4: [0.1, 0.1],\n        range_epsilon_5: [0.1, 0.1],\n        range_epsilon_6: [0.1, 0.1],\n        // ite_limit: null,\n        ite_limit: null,\n        num_iters: [1, 1],\n        gamma: [1, 1],\n        whether_to_rotate: false,\n        // generate_per_file_and_params: null,\n        generate_per_file_and_params: 1,\n        // generate_per_file: null,\n        generate_per_file: 1,\n        boundary_constraint: null,\n        strict_mode: false,\n        master: this.$store.state.userId,\n        urgency_level: 0,\n        file: {},\n        epsilon_7: null,\n        epsilon_4: null,\n        epsilon_5: null,\n        epsilon_6: null\n      },\n      marks: {\n        1: '1',\n        50: '50'\n      },\n      range_epsilon_6_marks: {\n        0.1: '0.1',\n        10: '10'\n      },\n      ite_limit_bili_marks: {\n        1: '1%',\n        100: '100%'\n      },\n      methods: [{\n        value: '0',\n        label: '黑盒对抗',\n        children: [{\n          // Guassian_noise\n          value: '7',\n          label: 'SIMBA'\n        }]\n      }, {\n        value: '1',\n        label: '白盒对抗',\n        children: [{\n          value: '4',\n          label: 'FGSM'\n        }, {\n          value: '5',\n          label: 'I-FGSM(BIM)'\n        }, {\n          value: '6',\n          label: 'JSMA'\n        }]\n      }],\n      directional: [{\n        value: '0',\n        label: '定向',\n        children: [{\n          value: '0',\n          label: '2S1'\n        }, {\n          value: '1',\n          label: 'BMP2'\n        }, {\n          value: '2',\n          label: 'BRDM_2'\n        }, {\n          value: '3',\n          label: 'BTR60'\n        }, {\n          value: '4',\n          label: 'BTR70'\n        }, {\n          value: '5',\n          label: 'D7'\n        }, {\n          value: '6',\n          label: 'T62'\n        }, {\n          value: '7',\n          label: 'T72'\n        }, {\n          value: '8',\n          label: 'ZIL131'\n        }, {\n          value: '9',\n          label: 'ZSU_23_4'\n        }]\n      }, {\n        value: '10',\n        label: '非定向',\n        children: [{\n          // Guassian_noise\n          value: '10',\n          label: '随机'\n        }]\n      }],\n      fileList: [],\n      typeList: [],\n      params_id: [null, null],\n      directional_id: ['10', '10'],\n      is_available_to_submit: true,\n      rules1: {\n        // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n        epsilon: [{\n          required: true,\n          message: '不能为空',\n          trigger: 'blur'\n        }, {\n          validator: epsilonRule,\n          trigger: 'blur'\n        }],\n        generate_per_file_and_params: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: generate_per_file_and_paramsRule,\n          trigger: 'blur'\n        }, {\n          validator: isNum,\n          trigger: 'blur'\n        }],\n        urgency_level: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNotNag_int,\n          trigger: 'blur'\n        }]\n      },\n      rules2: {\n        // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n        range_epsilon_5: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNotNag,\n          trigger: 'blur'\n        }],\n        ite_limit: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNum,\n          trigger: 'blur'\n        }],\n        generate_per_file: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: generate_per_file_and_paramsRule,\n          trigger: 'blur'\n        }, {\n          validator: isNum,\n          trigger: 'blur'\n        }]\n      },\n      rules3: {\n        // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n        range_epsilon_6: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNotNag,\n          trigger: 'blur'\n        }],\n        ite_limit: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNum,\n          trigger: 'blur'\n        }],\n        generate_per_file: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: generate_per_file_and_paramsRule,\n          trigger: 'blur'\n        }, {\n          validator: isNum,\n          trigger: 'blur'\n        }],\n        boundary_constraint: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNotNag,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    rulesList: function rulesList() {\n      if (this.params_id === 1) {\n        return this.rules1;\n      } else if (this.params_id === 2) {\n        return this.rules2;\n      } else {\n        return this.rules3;\n      }\n    }\n  },\n  methods: {\n    resetForm: function resetForm(formName, index) {\n      console.log('formName:', formName); // this.$refs[formName].resetFields();\n\n      if (index == 4) {\n        this.form.domain_4 = [{\n          value: 0\n        }];\n      } else if (index == 5) {\n        this.form.domain_5 = [{\n          value: 0\n        }];\n      } else if (index == 6) {\n        this.form.domain_6 = [{\n          value: 0\n        }];\n      } else if (index == 7) {\n        this.form.domain_7 = [{\n          value: 0\n        }];\n      }\n    },\n    removeDomain: function removeDomain(item, index) {\n      if (index == 4) {\n        if (this.form.domain_4.length == 1) {\n          this.$message.error('扰动幅度不可为空!');\n        } else {\n          var item_index = this.form.domain_4.indexOf(item);\n\n          if (item_index !== -1) {\n            this.form.domain_4.splice(item_index, 1);\n          }\n        }\n      } else if (index == 5) {\n        if (this.form.domain_5.length == 1) {\n          this.$message.error('单步扰动幅度不可为空!');\n        } else {\n          var item_index = this.form.domain_5.indexOf(item);\n\n          if (item_index !== -1) {\n            this.form.domain_5.splice(item_index, 1);\n          }\n        }\n      } else if (index == 6) {\n        if (this.form.domain_6.length == 1) {\n          this.$message.error('单步扰动幅度不可为空!');\n        } else {\n          var item_index = this.form.domain_6.indexOf(item);\n\n          if (item_index !== -1) {\n            this.form.domain_6.splice(item_index, 1);\n          }\n        }\n      } else if (index == 7) {\n        if (this.form.domain_7.length == 1) {\n          this.$message.error('单步扰动幅度不可为空!');\n        } else {\n          var item_index = this.form.domain_7.indexOf(item);\n\n          if (item_index !== -1) {\n            this.form.domain_7.splice(item_index, 1);\n          }\n        }\n      }\n    },\n    addDomain: function addDomain(index) {\n      if (index == 4) {\n        this.form.domain_4.push({\n          value: 0,\n          key: Date.now()\n        });\n      } else if (index == 5) {\n        this.form.domain_5.push({\n          value: 0,\n          key: Date.now()\n        });\n      } else if (index == 6) {\n        this.form.domain_6.push({\n          value: 0,\n          key: Date.now()\n        });\n      } else if (index == 7) {\n        this.form.domain_7.push({\n          value: 0,\n          key: Date.now()\n        });\n      }\n    },\n    handleChange: function handleChange() {\n      console.log('this.params_id:', this.params_id);\n    },\n    trim: function trim(str) {\n      return str.replace(/(^s*)|(s*$)/g, '');\n    },\n    onSubmit: function onSubmit() {\n      var _this = this;\n\n      this.loading = true;\n      this.form.master = this.$store.state.userId;\n      this.$refs.formRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(valid) {\n          var adddata, temp_params, temp, x, _iterator, _step, _step$value, a, b, _yield$_this$$http, data;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!1) {\n                    _context.next = 35;\n                    break;\n                  }\n\n                  console.log('this.form.augmentation_method[1]:', _this.form.augmentation_method[1]);\n\n                  if (!(_this.form.augmentation_method[1] === '')) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _this.loading = false;\n                  return _context.abrupt(\"return\", _this.$message.error('请选择生成方法!'));\n\n                case 5:\n                  adddata = new FormData();\n\n                  if (_this.form.name) {\n                    adddata.append('name', _this.form.name);\n                  }\n\n                  adddata.append('augmentation_method', _this.form.augmentation_method[1]);\n                  adddata.append('master', _this.form.master);\n                  adddata.append('urgency_level', _this.form.urgency_level + ''); // adddata.append('urgency_level', this.form.urgency_level);\n\n                  temp_params = {};\n\n                  if (_this.form.augmentation_method[1] == 4) {\n                    temp_params = {\n                      strict_mode: _this.form.strict_mode\n                    };\n                    temp_params.strict_mode = _this.form.strict_mode ? '1' : '0';\n\n                    if (_this.radio_epsilon_4 == '1') {\n                      // 列表\n                      // epsilon: '[' + this.form.epsilon + ']',\n                      // temp_params.epsilon = '[' + this.form.epsilon_4 + ']';\n                      temp = [];\n\n                      for (x in _this.form.domain_4) {\n                        console.log('this.form.domain_4[x][\"value\"]:', _this.form.domain_4[x]['value']);\n                        temp.push(_this.form.domain_4[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                      console.log('temp_params.epsilon:', temp_params.epsilon);\n                    } else if (_this.radio_epsilon_4 == '2') {\n                      // 范围\n                      temp_params.epsilon_upper_limit = _this.form.range_epsilon_4[1] + '';\n                      temp_params.epsilon_lower_limit = _this.form.range_epsilon_4[0] + '';\n                      temp_params.generate_per_file = _this.form.generate_per_file + '';\n                    }\n                  } else if (_this.form.augmentation_method[1] == 5) {\n                    temp_params = {\n                      ite_limit: _this.form.ite_limit + '',\n                      strict_mode: _this.form.strict_mode\n                    };\n                    temp_params.strict_mode = _this.form.strict_mode ? '1' : '0';\n\n                    if (_this.radio_epsilon_5 == '1') {\n                      // 列表\n                      // epsilon: '[' + this.form.epsilon + ']',\n                      // temp_params.epsilon = '[' + this.form.epsilon_5 + ']';\n                      temp = [];\n\n                      for (x in _this.form.domain_5) {\n                        console.log('this.form.domain_5[x][\"value\"]:', _this.form.domain_5[x]['value']);\n                        temp.push(_this.form.domain_5[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                      console.log('temp:', temp);\n                      console.log('temp_params.epsilon:', temp_params.epsilon);\n                    } else if (_this.radio_epsilon_5 == '2') {\n                      // 列表\n                      temp_params.epsilon_upper_limit = _this.form.range_epsilon_5[1] + '';\n                      temp_params.epsilon_lower_limit = _this.form.range_epsilon_5[0] + '';\n                      temp_params.generate_per_file = _this.form.generate_per_file + '';\n                    }\n                  } else if (_this.form.augmentation_method[1] == 6) {\n                    temp_params = {\n                      gamma: _this.form.gamma / 100,\n                      positive: _this.form.positive,\n                      strict_mode: _this.form.strict_mode\n                    };\n                    temp_params.strict_mode = _this.form.strict_mode ? '1' : '0';\n\n                    if (_this.radio_epsilon_6 == '1') {\n                      // 列表\n                      // epsilon: '[' + this.form.epsilon + ']',\n                      // temp_params.epsilon = '[' + this.form.epsilon_6 + ']';\n                      temp = [];\n\n                      for (x in _this.form.domain_6) {\n                        console.log('this.form.domain_6[x][\"value\"]:', _this.form.domain_6[x]['value']);\n                        temp.push(_this.form.domain_6[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                      console.log('temp:', temp);\n                      console.log('temp_params.epsilon:', temp_params.epsilon);\n                    } else if (_this.radio_epsilon_6 == '2') {\n                      // 列表\n                      temp_params.epsilon_upper_limit = _this.form.range_epsilon_6[1] + '';\n                      temp_params.epsilon_lower_limit = _this.form.range_epsilon_6[0] + '';\n                      temp_params.generate_per_file = _this.form.generate_per_file + '';\n                    }\n\n                    if (_this.directional_id[1] != 10) {\n                      temp_params.target = _this.directional_id[1];\n                    }\n                  } else if (_this.form.augmentation_method[1] == 7) {\n                    temp_params = {\n                      num_iters: _this.form.num_iters + '',\n                      strict_mode: _this.form.strict_mode\n                    };\n                    temp_params.strict_mode = _this.form.strict_mode ? '1' : '0';\n\n                    if (_this.radio_epsilon_7 == '1') {\n                      // 列表\n                      // temp_params.epsilon = '[' + this.form.epsilon_7 + ']';\n                      temp = [];\n\n                      for (x in _this.form.domain_7) {\n                        console.log('this.form.domain_7[x][\"value\"]:', _this.form.domain_7[x]['value']);\n                        temp.push(_this.form.domain_7[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                      console.log('temp:', temp);\n                      console.log('temp_params.epsilon:', temp_params.epsilon);\n                    } else if (_this.radio_epsilon_7 == '2') {\n                      // 列表\n                      temp_params.epsilon_upper_limit = _this.form.range_epsilon_7[1] + '';\n                      temp_params.epsilon_lower_limit = _this.form.range_epsilon_7[0] + '';\n                      temp_params.generate_per_file = _this.form.generate_per_file + '';\n                    }\n                  }\n\n                  temp_params = JSON.stringify(temp_params);\n                  adddata.append('params', temp_params);\n                  _this.form.file = document.getElementById('filetemp').files[0];\n\n                  if (!_this.form.file) {\n                    _context.next = 19;\n                    break;\n                  }\n\n                  adddata.append('file', _this.form.file);\n                  _context.next = 21;\n                  break;\n\n                case 19:\n                  _this.loading = false;\n                  return _context.abrupt(\"return\", _this.$message.error('请上传文件！'));\n\n                case 21:\n                  _iterator = _createForOfIteratorHelper(adddata.entries());\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      _step$value = _slicedToArray(_step.value, 2), a = _step$value[0], b = _step$value[1];\n                      console.log(a, b);\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  _context.next = 25;\n                  return _this.$http({\n                    url: '/task/',\n                    data: adddata,\n                    method: 'post'\n                  });\n\n                case 25:\n                  _yield$_this$$http = _context.sent;\n                  data = _yield$_this$$http.data;\n                  console.log('data:', data);\n\n                  if (!(data.code !== 20000)) {\n                    _context.next = 31;\n                    break;\n                  }\n\n                  _this.loading = false;\n                  return _context.abrupt(\"return\", _this.$message.error('添加生成任务失败！' + '错误原因：' + data.msg));\n\n                case 31:\n                  _this.$message.success('提交成功！');\n\n                  _this.reload();\n\n                  _context.next = 36;\n                  break;\n\n                case 35:\n                  _this.loading = false;\n\n                case 36:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    methodChanged: function () {\n      var _methodChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(method_id) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.params_id = method_id;\n                this.form.augmentation_method = this.params_id;\n                this.is_available_to_submit = false;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function methodChanged(_x2) {\n        return _methodChanged.apply(this, arguments);\n      }\n\n      return methodChanged;\n    }(),\n    fileLoad: function fileLoad() {\n      var selectedFile = this.$refs.image_a_file_ref.files[0];\n      var fileName = selectedFile.name;\n      var pos = fileName.lastIndexOf('.');\n      var lastName = fileName.substring(pos, fileName.length);\n      console.log(lastName, lastName.toLowerCase());\n      console.log('lastName:', lastName);\n\n      if (lastName.toLowerCase() !== '.jpg' && lastName.toLowerCase() !== '.jpeg' && lastName.toLowerCase() !== '.zip') {\n        this.$message.error('文件必须为 .jpg/.jpeg/.zip 类型'); // this.$refs.lidar_t_file_ref.clearFiles;\n\n        this.$refs.image_a_file_ref.value = ''; // 清空file文件\n        // return false;\n      } else {\n        this.form.file = selectedFile;\n      }\n    },\n    clickLoad: function clickLoad() {\n      this.$refs.refFile.dispatchEvent(new MouseEvent('click'));\n    },\n    getTypeList: function () {\n      var _getTypeList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$http.get('/augmentation_type/');\n\n              case 2:\n                _yield$this$$http$get = _context3.sent;\n                data = _yield$this$$http$get.data;\n\n                if (!(data.code !== 20000)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('获取任务列表失败！' + '错误原因：' + data.msg));\n\n              case 6:\n                this.typeList = data.data;\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getTypeList() {\n        return _getTypeList.apply(this, arguments);\n      }\n\n      return getTypeList;\n    }()\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var id;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n              id = 1; // const { data: data } = await this.$http.get('/augmentation_method/?augmentation_type=' + id);\n              // if (data.code === 45000) {\n              //     return this.$message.error('该生成类型暂无方法！');\n              // }\n              // if (data.code !== 20000) {\n              //     return this.$message.error('查询生成方法失败！');\n              // }\n              // this.methods = data.data.filter(item => {\n              //     return item.augmentation_type_id === id;\n              // });\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  created: function created() {\n    this.getTypeList();\n  }\n};",null]}