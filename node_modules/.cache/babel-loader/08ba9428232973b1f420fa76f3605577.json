{"remainingRequest":"E:\\LidarPlatformFrontend-hjw\\node_modules\\babel-loader\\lib\\index.js!E:\\LidarPlatformFrontend-hjw\\src\\store\\index.js","dependencies":[{"path":"E:\\LidarPlatformFrontend-hjw\\src\\store\\index.js","mtime":1628741922000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  state: {\n    userId: 0,\n    token: sessionStorage.getItem('token'),\n    nickname: sessionStorage.getItem('nickname'),\n    username: sessionStorage.getItem('username'),\n    user_group_name: sessionStorage.getItem('user_group_name')\n  },\n  mutations: {\n    setUserId: function setUserId(state, value) {\n      sessionStorage.setItem('userId', value), state.userId = value;\n    },\n    setToken: function setToken(state, value) {\n      sessionStorage.setItem('token', value), state.token = value;\n    },\n    setNickName: function setNickName(state, value) {\n      sessionStorage.setItem('nickname', value), state.nickname = value;\n    },\n    setUser_group_name: function setUser_group_name(state, value) {\n      sessionStorage.setItem('user_group_name', value), state.user_group_name = value;\n    },\n    setUsername: function setUsername(state, value) {\n      sessionStorage.setItem('username', value), state.username = value;\n    }\n  },\n  getters: {\n    getUserId: function getUserId(state) {\n      return state.userId;\n    },\n    getToken: function getToken(state) {\n      return state.token;\n    },\n    getNickName: function getNickName(state) {\n      return state.nickname;\n    },\n    getUser_group_name: function getUser_group_name(state) {\n      return state.user_group_name;\n    },\n    getUsername: function getUsername(state) {\n      return state.username;\n    }\n  }\n});\nexport default store;",{"version":3,"sources":["E:/LidarPlatformFrontend-hjw/src/store/index.js"],"names":["Vue","Vuex","use","store","Store","state","userId","token","sessionStorage","getItem","nickname","username","user_group_name","mutations","setUserId","value","setItem","setToken","setNickName","setUser_group_name","setUsername","getters","getUserId","getToken","getNickName","getUser_group_name","getUsername"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AACA,IAAME,KAAK,GAAG,IAAIF,IAAI,CAACG,KAAT,CAAe;AACzBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,CADL;AAEHC,IAAAA,KAAK,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAFJ;AAGHC,IAAAA,QAAQ,EAAEF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAHP;AAIHE,IAAAA,QAAQ,EAAEH,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAJP;AAKHG,IAAAA,eAAe,EAAEJ,cAAc,CAACC,OAAf,CAAuB,iBAAvB;AALd,GADkB;AAQzBI,EAAAA,SAAS,EAAE;AACPC,IAAAA,SADO,qBACGT,KADH,EACUU,KADV,EACiB;AACpBP,MAAAA,cAAc,CAACQ,OAAf,CAAuB,QAAvB,EAAiCD,KAAjC,GACAV,KAAK,CAACC,MAAN,GAAeS,KADf;AAEH,KAJM;AAKPE,IAAAA,QALO,oBAKEZ,KALF,EAKSU,KALT,EAKgB;AACnBP,MAAAA,cAAc,CAACQ,OAAf,CAAuB,OAAvB,EAAgCD,KAAhC,GACAV,KAAK,CAACE,KAAN,GAAcQ,KADd;AAEH,KARM;AASPG,IAAAA,WATO,uBASKb,KATL,EASYU,KATZ,EASmB;AACtBP,MAAAA,cAAc,CAACQ,OAAf,CAAuB,UAAvB,EAAmCD,KAAnC,GACAV,KAAK,CAACK,QAAN,GAAiBK,KADjB;AAEH,KAZM;AAaPI,IAAAA,kBAbO,8BAaYd,KAbZ,EAamBU,KAbnB,EAa0B;AAC7BP,MAAAA,cAAc,CAACQ,OAAf,CAAuB,iBAAvB,EAA0CD,KAA1C,GAEAV,KAAK,CAACO,eAAN,GAAwBG,KAFxB;AAGH,KAjBM;AAkBPK,IAAAA,WAlBO,uBAkBKf,KAlBL,EAkBYU,KAlBZ,EAkBmB;AACtBP,MAAAA,cAAc,CAACQ,OAAf,CAAuB,UAAvB,EAAmCD,KAAnC,GAEAV,KAAK,CAACM,QAAN,GAAiBI,KAFjB;AAGH;AAtBM,GARc;AAgCzBM,EAAAA,OAAO,EAAE;AACLC,IAAAA,SADK,qBACKjB,KADL,EACY;AACb,aAAOA,KAAK,CAACC,MAAb;AACH,KAHI;AAILiB,IAAAA,QAJK,oBAIIlB,KAJJ,EAIW;AACZ,aAAOA,KAAK,CAACE,KAAb;AACH,KANI;AAOLiB,IAAAA,WAPK,uBAOOnB,KAPP,EAOc;AACf,aAAOA,KAAK,CAACK,QAAb;AACH,KATI;AAULe,IAAAA,kBAVK,8BAUcpB,KAVd,EAUqB;AACtB,aAAOA,KAAK,CAACO,eAAb;AACH,KAZI;AAaLc,IAAAA,WAbK,uBAaOrB,KAbP,EAac;AACf,aAAOA,KAAK,CAACM,QAAb;AACH;AAfI;AAhCgB,CAAf,CAAd;AAkDA,eAAeR,KAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\nconst store = new Vuex.Store({\n    state: {\n        userId: 0,\n        token: sessionStorage.getItem('token'),\n        nickname: sessionStorage.getItem('nickname'),\n        username: sessionStorage.getItem('username'),\n        user_group_name: sessionStorage.getItem('user_group_name'),\n    },\n    mutations: {\n        setUserId(state, value) {\n            sessionStorage.setItem('userId', value),\n            state.userId = value;\n        },\n        setToken(state, value) {\n            sessionStorage.setItem('token', value),\n            state.token = value;\n        },\n        setNickName(state, value) {\n            sessionStorage.setItem('nickname', value),\n            state.nickname = value;\n        },\n        setUser_group_name(state, value) {\n            sessionStorage.setItem('user_group_name', value),\n                \n            state.user_group_name = value;\n        },\n        setUsername(state, value) {\n            sessionStorage.setItem('username', value),\n                \n            state.username = value;\n        }\n    },\n    getters: {\n        getUserId(state) {\n            return state.userId;\n        },\n        getToken(state) {\n            return state.token;\n        },\n        getNickName(state) {\n            return state.nickname;\n        },\n        getUser_group_name(state) {\n            return state.user_group_name;\n        },\n        getUsername(state) {\n            return state.username;\n        },\n    }\n})\nexport default store\n"]}]}