{"remainingRequest":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/common/Header.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/common/Header.vue","mtime":1651459626242},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 引入EventBus机制（总线），功能类似于Vuex\nimport bus from \"../common/bus\";\nimport { mapState, mapMutations } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      // 折叠导航栏\n      collapse: false,\n      // 是否全屏\n      fullscreen: false,\n      // 默认用户名\n      // nickname: '',\n      // 未读消息数量\n      message: 2\n    };\n  },\n  // 计算属性\n  computed: _objectSpread({}, mapState(['nickname'])),\n  methods: {\n    // 用户名下拉菜单选择事件[含登出]\n    handleCommand: function () {\n      var _handleCommand = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(command) {\n        var _yield$this$$http$del, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(command == 'logout')) {\n                  _context.next = 24;\n                  break;\n                }\n\n                console.log('this.$store.state.username' + this.$store.state.username); // console.log('this.$store.state.nickname:', this.$store.state.nickname);\n\n                console.log('this.$store.state.token登出:', this.$store.state.token);\n                _context.next = 5;\n                return this.$http.delete('/user/logout/?username=' + this.$store.state.username);\n\n              case 5:\n                _yield$this$$http$del = _context.sent;\n                data = _yield$this$$http$del.data;\n\n                if (!(data.code !== 20000)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                console.log(data.code);\n                console.log(data.msg);\n                return _context.abrupt(\"return\", this.$message.error('用户登出失败！' + '错误原因：' + data.msg));\n\n              case 11:\n                this.$message.success('用户登出成功！'); // 在本地数据仓库中删除当前用户\n                // sessionStorage.clear();\n\n                console.log('sessionStorage已清除'); // sessionStorage.removeItem('token');\n\n                sessionStorage.clear();\n                console.log(sessionStorage.getItem('token')); // this.isRouterAlive = false;\n                // this.$nextTick(function() {\n                //     this.isRouterAlive = true;\n                // });\n\n                this.$store.commit('setToken', null);\n                this.$store.commit('setNickName', null);\n                this.$store.commit('setUserId', null);\n                console.log('$store.token已清除'); // 确认清除\n\n                console.log(this.$store.state.token);\n                console.log(this.$store.state.nickname);\n                console.log(this.$store.state.username);\n                console.log(this.$store.state.userId); // 路由跳转\n\n                this.$router.push('/login');\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleCommand(_x) {\n        return _handleCommand.apply(this, arguments);\n      }\n\n      return handleCommand;\n    }(),\n    // 侧边栏折叠\n    collapseChage: function collapseChage() {\n      // 侧边栏状态取反即可\n      this.collapse = !this.collapse; // 向组件传值，更新侧边栏状态\n\n      bus.$emit('collapse', this.collapse);\n    },\n    // 全屏事件\n    handleFullScreen: function handleFullScreen() {\n      var element = document.documentElement;\n\n      if (this.fullscreen) {\n        if (document.exitFullscreen) {\n          // exitFullscreen() 退出全屏模式。\n          document.exitFullscreen();\n        } else if (document.webkitCancelFullScreen) {\n          document.webkitCancelFullScreen();\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n          document.msExitFullscreen();\n        }\n      } else {\n        if (element.requestFullscreen) {\n          // requestFullscreen() 请求进入全屏模式\n          element.requestFullscreen();\n        } else if (element.webkitRequestFullScreen) {\n          element.webkitRequestFullScreen();\n        } else if (element.mozRequestFullScreen) {\n          element.mozRequestFullScreen();\n        } else if (element.msRequestFullscreen) {\n          // IE11\n          element.msRequestFullscreen();\n        }\n      } // 全屏状态取反\n\n\n      this.fullscreen = !this.fullscreen;\n    }\n  },\n  mounted: function mounted() {\n    // document.body.clientWidth表示HTML文档所在窗口的当前宽度。\n    if (document.body.clientWidth < 1500) {\n      this.collapseChage();\n    }\n  },\n  created: function created() {// this.nickname = this.$store.state.nickname;\n    // this.nickname = sessionStorage.getItem('nickname');\n    // console.log('this.nickname:');\n    // console.log(this.nickname);\n  }\n};",{"version":3,"sources":["Header.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"header\">\n        <slot></slot>\n        <!-- 侧边栏折叠按钮 -->\n        <div class=\"header-left\">\n            <!-- <div class=\"collapse-btn\">\n                <i v-if=\"!collapse\" class=\"el-icon-s-fold\"></i>\n                <i v-else class=\"el-icon-s-unfold\"></i>\n            </div> -->\n            <div class=\"nothing\"></div>\n            <img src=\"../../assets/radar_hjw.png\" alt=\"\" class=\"lidarPic\" />\n            <div class=\"logo\">ElecDaug</div>\n        </div>\n        <!-- 顶侧右部全屏-消息-用户信息区域 -->\n        <div class=\"header-right\">\n            <div class=\"header-user-con\">\n                <!-- 全屏显示 -->\n                <!-- <div class=\"btn-fullscreen\" @click=\"handleFullScreen\">\n                    <el-tooltip effect=\"dark\" :content=\"fullscreen ? `取消全屏` : `全屏`\" placement=\"bottom\">\n                        <i class=\"el-icon-rank\"></i>\n                    </el-tooltip>\n                </div> -->\n                <!-- 消息中心 -->\n                <!-- <div class=\"btn-bell\">\n                    <el-tooltip effect=\"dark\" :content=\"message ? `有${message}条未读消息` : `消息中心`\" placement=\"bottom\">\n                        <router-link to=\"/tabs\">\n                            <i class=\"el-icon-bell\"></i>\n                        </router-link>\n                    </el-tooltip>\n                    <span class=\"btn-bell-badge\" v-if=\"message\"></span>\n                </div> -->\n                <!-- 用户头像 -->\n                <div class=\"user-avator\">\n                    <!-- <img src=\"../../assets/img/4.png\" /> -->\n                </div>\n                <!-- 用户名下拉菜单 -->\n                <!-- <el-dropdown class=\"user-name\" trigger=\"click\" @command=\"handleCommand\">\n                    <span class=\"el-dropdown-link\">\n                        {{ nickname }}\n                        <i class=\"el-icon-caret-bottom\"></i>\n                    </span>\n                    <el-dropdown-menu slot=\"dropdown\">\n                        <a href=\"#/SelfInfo\">\n                            <el-dropdown-item><i class=\"el-icon-user\"></i>Your Information</el-dropdown-item>\n                        </a>\n                        <el-dropdown-item divided command=\"logout\"><i class=\"el-icon-close\"></i>Logout</el-dropdown-item>\n                    </el-dropdown-menu>\n                </el-dropdown> -->\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n// 引入EventBus机制（总线），功能类似于Vuex\nimport bus from '../common/bus';\nimport { mapState, mapMutations } from 'vuex';\nexport default {\n    data() {\n        return {\n            // 折叠导航栏\n            collapse: false,\n            // 是否全屏\n            fullscreen: false,\n            // 默认用户名\n            // nickname: '',\n            // 未读消息数量\n            message: 2\n        };\n    },\n    // 计算属性\n    computed: {\n        ...mapState(['nickname'])\n    },\n    methods: {\n        // 用户名下拉菜单选择事件[含登出]\n        async handleCommand(command) {\n            // 如果是登出命令则跳转至登录页\n            if (command == 'logout') {\n                console.log('this.$store.state.username' + this.$store.state.username);\n                // console.log('this.$store.state.nickname:', this.$store.state.nickname);\n                console.log('this.$store.state.token登出:', this.$store.state.token);\n                const { data: data } = await this.$http.delete('/user/logout/?username=' + this.$store.state.username);\n                if (data.code !== 20000) {\n                    console.log(data.code);\n                    console.log(data.msg);\n                    return this.$message.error('用户登出失败！' + '错误原因：' + data.msg);\n                }\n                this.$message.success('用户登出成功！');\n\n                // 在本地数据仓库中删除当前用户\n                // sessionStorage.clear();\n                console.log('sessionStorage已清除');\n                // sessionStorage.removeItem('token');\n                sessionStorage.clear();\n                console.log(sessionStorage.getItem('token'));\n                // this.isRouterAlive = false;\n                // this.$nextTick(function() {\n                //     this.isRouterAlive = true;\n                // });\n                this.$store.commit('setToken', null);\n                this.$store.commit('setNickName', null);\n                this.$store.commit('setUserId', null);\n                console.log('$store.token已清除');\n                // 确认清除\n                console.log(this.$store.state.token);\n                console.log(this.$store.state.nickname);\n                console.log(this.$store.state.username);\n                console.log(this.$store.state.userId);\n                // 路由跳转\n                this.$router.push('/login');\n            }\n        },\n        // 侧边栏折叠\n        collapseChage() {\n            // 侧边栏状态取反即可\n            this.collapse = !this.collapse;\n            // 向组件传值，更新侧边栏状态\n            bus.$emit('collapse', this.collapse);\n        },\n        // 全屏事件\n        handleFullScreen() {\n            let element = document.documentElement;\n            if (this.fullscreen) {\n                if (document.exitFullscreen) {\n                    // exitFullscreen() 退出全屏模式。\n                    document.exitFullscreen();\n                } else if (document.webkitCancelFullScreen) {\n                    document.webkitCancelFullScreen();\n                } else if (document.mozCancelFullScreen) {\n                    document.mozCancelFullScreen();\n                } else if (document.msExitFullscreen) {\n                    document.msExitFullscreen();\n                }\n            } else {\n                if (element.requestFullscreen) {\n                    // requestFullscreen() 请求进入全屏模式\n                    element.requestFullscreen();\n                } else if (element.webkitRequestFullScreen) {\n                    element.webkitRequestFullScreen();\n                } else if (element.mozRequestFullScreen) {\n                    element.mozRequestFullScreen();\n                } else if (element.msRequestFullscreen) {\n                    // IE11\n                    element.msRequestFullscreen();\n                }\n            }\n            // 全屏状态取反\n            this.fullscreen = !this.fullscreen;\n        }\n    },\n    mounted() {\n        // document.body.clientWidth表示HTML文档所在窗口的当前宽度。\n        if (document.body.clientWidth < 1500) {\n            this.collapseChage();\n        }\n    },\n    created() {\n        // this.nickname = this.$store.state.nickname;\n        // this.nickname = sessionStorage.getItem('nickname');\n        // console.log('this.nickname:');\n        // console.log(this.nickname);\n    }\n};\n</script>\n\n<style scoped>\n.header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-sizing: border-box;\n    /* border-box对元素指定宽度width和高度height包括了 padding 和 border */\n    width: 100%;\n    height: 70px;\n    font-size: 22px;\n    /* 此处控制的为icon和字体的颜色，而非header的bgc */\n    color: #fff;\n    background-color: rgb(230, 162, 60);\n}\n\n.nothing {\n    float: left;\n    padding: 0 21px;\n    line-height: 70px;\n}\n\n/* 侧边栏折叠按钮样式 */\n.collapse-btn {\n    float: left;\n    padding: 0 21px;\n    /* 悬浮时的鼠标图标为手指 */\n    /* cursor: pointer; */\n    line-height: 70px;\n}\n\n.lidarPic {\n    width: 50px;\n    height: 50px;\n    text-align: center;\n    margin-top: 8px;\n}\n\n.header .logo {\n    font-size: 40px;\n    float: left;\n    width: 220px;\n    line-height: 70px;\n}\n\n.header-left {\n    display: flex;\n    justify-content: flex-start;\n    text-align: center;\n}\n\n.header-right {\n    float: right;\n    padding-right: 50px;\n}\n.header-user-con {\n    display: flex;\n    height: 70px;\n    align-items: center;\n}\n.btn-fullscreen {\n    transform: rotate(45deg);\n    margin-right: 5px;\n    font-size: 24px;\n}\n.btn-bell,\n.btn-fullscreen {\n    position: relative;\n    width: 30px;\n    height: 30px;\n    text-align: center;\n    border-radius: 15px;\n    cursor: pointer;\n}\n.btn-bell-badge {\n    position: absolute;\n    right: 0;\n    top: -2px;\n    width: 8px;\n    height: 8px;\n    border-radius: 4px;\n    background: #f56c6c;\n    color: #fff;\n}\n.btn-bell .el-icon-bell {\n    color: #fff;\n}\n.user-name {\n    margin-left: 10px;\n}\n.user-avator {\n    margin-left: 20px;\n}\n.user-avator img {\n    display: block;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n}\n.el-dropdown-link {\n    color: #fff;\n    cursor: pointer;\n}\n.el-dropdown-menu__item {\n    text-align: center;\n}\n</style>\n"],"sourceRoot":"src/components/common"}]}