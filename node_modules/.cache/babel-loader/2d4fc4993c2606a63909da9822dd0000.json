{"remainingRequest":"E:\\LidarPlatformFrontend-hjw\\node_modules\\babel-loader\\lib\\index.js!E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\card_system_report.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\card_system_report.vue","mtime":1636381569300},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:/LidarPlatformFrontend-hjw/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      systemStatusData: {\n        CPUStatus: -1,\n        GPUStatus: 1,\n        memoryStatus: -1\n      }\n    };\n  },\n  methods: {\n    getPerformance: function () {\n      var _getPerformance = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('/system_status/performance/');\n\n              case 2:\n                _yield$this$$http$get = _context.sent;\n                data = _yield$this$$http$get.data;\n\n                if (!(data.code !== 20000)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取当前系统性能失败！' + '错误原因：' + data.msg));\n\n              case 6:\n                // console.log('系统性能：', data.data);\n                this.systemStatusData.CPUStatus = parseInt(data.data.cpu);\n                this.systemStatusData.memoryStatus = parseInt(data.data.memory);\n\n                if (data.data.gpu) {\n                  this.systemStatusData.GPUStatus = parseInt(data.data.gpu);\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getPerformance() {\n        return _getPerformance.apply(this, arguments);\n      }\n\n      return getPerformance;\n    }()\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.getPerformance();\n    this.timer = setInterval(function () {\n      _this.getPerformance();\n    }, 1000 * 60);\n  }\n};",{"version":3,"sources":["card_system_report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA;AACA,QAAA,SAAA,EAAA,CAAA,CADA;AAEA,QAAA,SAAA,EAAA,CAFA;AAGA,QAAA,YAAA,EAAA,CAAA;AAHA;AADA,KAAA;AAOA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,cADA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,KAAA,CAAA,GAAA,CAAA,6BAAA,CAFA;;AAAA;AAAA;AAEA,gBAAA,IAFA,yBAEA,IAFA;;AAAA,sBAGA,IAAA,CAAA,IAAA,KAAA,KAHA;AAAA;AAAA;AAAA;;AAAA,iDAIA,KAAA,QAAA,CAAA,KAAA,CAAA,gBAAA,OAAA,GAAA,IAAA,CAAA,GAAA,CAJA;;AAAA;AAMA;AACA,qBAAA,gBAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,qBAAA,gBAAA,CAAA,YAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA;;AACA,oBAAA,IAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AACA,uBAAA,gBAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAVA;AAwBA,EAAA,OAxBA,qBAwBA;AAAA;;AACA,SAAA,cAAA;AACA,SAAA,KAAA,GAAA,WAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,cAAA;AACA,KAFA,EAEA,OAAA,EAFA,CAAA;AAGA;AA7BA,CAAA","sourcesContent":["<template>\n    <div>\n        <!-- 系统报告 -->\n        <el-card shadow=\"hover\" style=\"height: 290px\" body-style=\"el-card__body1 el-card__body2\">\n            <div class=\"el-card__header1\">\n                <span>System Resource</span>\n            </div>\n            <div v-if=\"systemStatusData.GPUStatus < 0\">\n                <hr style=\"clear: both; background-color: #fff; border: none; height: 10px\" />\n                <div style=\"margin-top: 10px\">\n                    <h4 style=\"\">CPU使用率</h4>\n                    <el-progress :percentage=\"systemStatusData.CPUStatus\"></el-progress>\n                </div>\n                <div style=\"margin-top: 20px\">\n                    <h4 style=\"\">内存占用率</h4>\n                    <el-progress :percentage=\"systemStatusData.memoryStatus\"></el-progress>\n                </div>\n            </div>\n            <div v-else>\n                <!-- <hr style=\"background-color: #fff; border: none; height: 10px\" /> -->\n                <div style=\"float: left; padding-left:30px; margin-right: 30px;\">\n                    <h4 style=\"font-weight: normal; margin-top: 20px\">CPU</h4>\n                    <hr style=\"background-color: #fff; border: none; height: 5px\" />\n                    <!-- :text-inside=\"true\" -->\n                    <el-progress\n                        type=\"dashboard\"\n                        :percentage=\"systemStatusData.CPUStatus\"\n                        color=\"#42b983\"\n                        :stroke-width=\"10\"\n                        width=\"160\"\n                    ></el-progress>\n                </div>\n                <!-- <hr style=\"clear: both; background-color: #fff; border: none; height: 15px\" /> -->\n                <div style=\"float: left; margin-right: 30px;\">\n                    <h4 style=\"font-weight: normal; margin-top: 20px\">GPU</h4>\n                    <hr style=\"background-color: #fff; border: none; height: 5px\" />\n                    <el-progress\n                        :percentage=\"systemStatusData.GPUStatus\"\n                        color=\"#f1e05a\"\n                        :stroke-width=\"10\"\n                        type=\"dashboard\"\n                        width=\"160\"\n                    ></el-progress>\n                </div>\n                <!-- <hr style=\"clear: both; background-color: #fff; border: none; height: 15px\" /> -->\n                <div style=\"float: left\">\n                    <h4 style=\"font-weight: normal; margin-top: 20px\">Memery</h4>\n                    <hr style=\"background-color: #fff; border: none; height: 5px\" />\n                    <el-progress :percentage=\"systemStatusData.memoryStatus\" :stroke-width=\"10\" type=\"dashboard\" width=\"160\"></el-progress>\n                </div>\n            </div>\n        </el-card>\n    </div>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            systemStatusData: {\n                CPUStatus: -1,\n                GPUStatus: 1,\n                memoryStatus: -1\n            }\n        };\n    },\n    methods: {\n        async getPerformance() {\n            const { data: data } = await this.$http.get('/system_status/performance/');\n            if (data.code !== 20000) {\n                return this.$message.error('获取当前系统性能失败！' + '错误原因：' + data.msg);\n            }\n            // console.log('系统性能：', data.data);\n            this.systemStatusData.CPUStatus = parseInt(data.data.cpu);\n            this.systemStatusData.memoryStatus = parseInt(data.data.memory);\n            if (data.data.gpu) {\n                this.systemStatusData.GPUStatus = parseInt(data.data.gpu);\n            }\n        }\n    },\n    mounted() {\n        this.getPerformance();\n        this.timer = setInterval(() => {\n            this.getPerformance();\n        }, 1000 * 60);\n    }\n};\n</script>\n<style scoped>\n.el-card {\n    border-radius: 3%;\n}\n.el-row {\n    margin-bottom: 20px;\n}\n.el-card__header1 {\n    padding: 0px 10px 10px 10px !important;\n    border-bottom: 1px solid #ebeef5;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n.el-card__body1 {\n    padding: 10px !important;\n}\n.el-card__body2 {\n    padding-top: 10px;\n}\n</style>\n"],"sourceRoot":"src/components/page"}]}