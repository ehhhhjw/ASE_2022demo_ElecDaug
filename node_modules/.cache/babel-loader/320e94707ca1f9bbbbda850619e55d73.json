{"remainingRequest":"E:\\LidarPlatformFrontend-hjw\\node_modules\\babel-loader\\lib\\index.js!E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\SelfInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\SelfInfo.vue","mtime":1628741922000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:/LidarPlatformFrontend-hjw/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nexport default {\n  data: function data() {\n    return {\n      Info: [],\n      name: '',\n      role: '',\n      editDialogVisible: false,\n      editForm: {\n        username: '',\n        new_password: '',\n        new_nickname: '',\n        new_user_group: ''\n      },\n      editFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3~10个字符之间',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    getSelfInfo: function () {\n      var _getSelfInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('/user/');\n\n              case 2:\n                _yield$this$$http$get = _context.sent;\n                data = _yield$this$$http$get.data;\n\n                if (!(data.code !== 20000)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取个人信息失败！' + '错误原因：' + data.msg));\n\n              case 6:\n                this.Info = data.data;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getSelfInfo() {\n        return _getSelfInfo.apply(this, arguments);\n      }\n\n      return getSelfInfo;\n    }(),\n    showEditDialog: function () {\n      var _showEditDialog = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(username) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.editForm.username = username;\n                this.editDialogVisible = true;\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function showEditDialog(_x) {\n        return _showEditDialog.apply(this, arguments);\n      }\n\n      return showEditDialog;\n    }(),\n    editDialogClosed: function editDialogClosed() {\n      this.$refs.editFormRef.resetFields();\n    },\n    editUserInfo: function editUserInfo() {\n      var _this = this;\n\n      this.$refs.editFormRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(valid) {\n          var adddata, num, _yield$_this$$http, data;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\");\n\n                case 2:\n                  adddata = new FormData();\n                  adddata.append('username', _this.editForm.username);\n\n                  if (_this.editForm.new_password) {\n                    adddata.append('new_password', _this.editForm.new_password);\n                  }\n\n                  if (_this.editForm.new_nickname) {\n                    adddata.append('new_nickname', _this.editForm.new_nickname);\n                  }\n\n                  if (_this.editForm.new_user_group) {\n                    num = _this.editForm.new_user_group === '超级管理员' ? 1 : 0;\n                    adddata.append('new_user_group', num);\n                  }\n\n                  _context3.next = 9;\n                  return _this.$http({\n                    url: '/user/',\n                    data: adddata,\n                    method: 'put'\n                  });\n\n                case 9:\n                  _yield$_this$$http = _context3.sent;\n                  data = _yield$_this$$http.data;\n\n                  if (!(data.code !== 20000)) {\n                    _context3.next = 13;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\", _this.$message.error('修改用户失败！' + '错误原因：' + data.msg));\n\n                case 13:\n                  _this.$message.success('修改用户成功！');\n\n                  _this.editDialogVisible = false;\n\n                  _this.getUserList();\n\n                case 16:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  },\n  mounted: function mounted() {\n    this.getSelfInfo();\n  },\n  created: function created() {\n    this.name = this.$store.state.nickname;\n    this.role = this.$store.state.user_group_name;\n  }\n};",{"version":3,"sources":["SelfInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item> <i class=\"el-icon-user\"></i> 个人信息 </el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <el-card class=\"bgi mgb20\" shadow=\"hover\" style=\"height:530px;\">\n            <div class=\"user-info\">\n                <img src=\"../../assets/img/4.png\" class=\"user-avator\" alt />\n                <div class=\"user-info-cont\">\n                    <div class=\"user-info-name\">{{ name }}</div>\n                    <div>{{ role }}</div>\n                </div>\n                <el-tooltip effect=\"dark\" content=\"编辑个人信息\" placement=\"top\" :enterable=\"false\">\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(name)\"></el-button>\n                </el-tooltip>\n            </div>\n            <div class=\"user-info-list\">\n                账户名：\n                <span>{{ Info.username }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                加入时间：\n                <span>{{ Info.join_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                上一次登录时间：\n                <span>{{ Info.last_login_datetime | dateFormat }}</span>\n            </div>\n        </el-card>\n        <el-dialog title=\"编辑用户信息\" :visible.sync=\"editDialogVisible\" width=\"50%\" @closed=\"editDialogClosed\">\n            <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"110px\">\n                <el-form-item label=\"用户名\">\n                    <el-input v-model=\"editForm.username\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"密码\" prop=\"new_password\">\n                    <el-input v-model=\"editForm.new_password\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"用户名称\" prop=\"new_nickname\">\n                    <el-input v-model=\"editForm.new_nickname\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"用户权限\" prop=\"new_user_group\" v-if=\"role === '超级管理员'\">\n                    <el-select v-model=\"editForm.new_user_group\" placeholder=\"请选择用户权限\">\n                        <el-option label=\"普通用户\" value=\"普通用户\"></el-option>\n                        <el-option label=\"超级管理员\" value=\"超级管理员\"></el-option>\n                    </el-select>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nexport default {\n    data() {\n        return {\n            Info: [],\n            name: '',\n            role: '',\n            editDialogVisible: false,\n            editForm: {\n                username: '',\n                new_password: '',\n                new_nickname: '',\n                new_user_group: ''\n            },\n            editFormRules: {\n                username: [\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\n                    {\n                        min: 3,\n                        max: 10,\n                        message: '用户名的长度在3~10个字符之间',\n                        trigger: 'blur'\n                    }\n                ]\n            }\n        };\n    },\n    methods: {\n        async getSelfInfo() {\n            const { data: data } = await this.$http.get('/user/');\n            if (data.code !== 20000) {\n                return this.$message.error('获取个人信息失败！' + '错误原因：' + data.msg);\n            }\n\n            this.Info = data.data;\n        },\n        async showEditDialog(username) {\n            this.editForm.username = username;\n            this.editDialogVisible = true;\n        },\n        editDialogClosed() {\n            this.$refs.editFormRef.resetFields();\n        },\n        editUserInfo() {\n            this.$refs.editFormRef.validate(async valid => {\n                if (!valid) return;\n\n                var adddata = new FormData();\n                adddata.append('username', this.editForm.username);\n                if (this.editForm.new_password) {\n                    adddata.append('new_password', this.editForm.new_password);\n                }\n                if (this.editForm.new_nickname) {\n                    adddata.append('new_nickname', this.editForm.new_nickname);\n                }\n                if (this.editForm.new_user_group) {\n                    var num = this.editForm.new_user_group === '超级管理员' ? 1 : 0;\n                    adddata.append('new_user_group', num);\n                }\n                const { data: data } = await this.$http({\n                    url: '/user/',\n                    data: adddata,\n                    method: 'put'\n                });\n                if (data.code !== 20000) {\n                    return this.$message.error('修改用户失败！' + '错误原因：' + data.msg);\n                }\n                this.$message.success('修改用户成功！');\n                this.editDialogVisible = false;\n                this.getUserList();\n            });\n        }\n    },\n    mounted() {\n        this.getSelfInfo();\n    },\n    created() {\n        this.name = this.$store.state.nickname;\n        this.role = this.$store.state.user_group_name;\n    }\n};\n</script>\n<style scoped>\n.bgi {\n    background-image: url('../../assets/img/Self_Info_BG3.jpg');\n    background-size: cover;\n    background-position: bottom left;\n}\n.user-info {\n    display: flex;\n    align-items: center;\n    padding-bottom: 20px;\n    border-bottom: 2px solid #ccc;\n    margin-bottom: 20px;\n}\n.user-avator {\n    width: 120px;\n    height: 120px;\n    border-radius: 50%;\n}\n.user-info-cont {\n    padding-left: 50px;\n    flex: 1;\n    font-size: 14px;\n    color: #000;\n}\n.user-info-cont div:first-child {\n    font-size: 30px;\n    color: #222;\n}\n.user-info-list {\n    padding-left: 10px;\n    background-color: rgba(255, 255, 255, 0.4);\n    font-size: 14px;\n    color: #000;\n    line-height: 25px;\n}\n</style>\n"],"sourceRoot":"src/components/page"}]}