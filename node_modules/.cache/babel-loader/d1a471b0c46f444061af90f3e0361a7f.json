{"remainingRequest":"E:\\LidarPlatformFrontend-main\\node_modules\\babel-loader\\lib\\index.js!E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-main\\src\\components\\page\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-main\\src\\components\\page\\Login.vue","mtime":1636303466307},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:/LidarPlatformFrontend-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport qs from 'qs';\nimport { setInterval, clearInterval } from 'timers';\nexport default {\n  inject: ['reload'],\n  data: function data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginFormRules: {\n        username: [{\n          required: true,\n          message: 'Username cannot be empty!',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Passward cannot be empty!',\n          trigger: 'blur'\n        }]\n      },\n      loading: false,\n      flag: true,\n      lastTime: new Date().getTime(),\n      currentTime: new Date().getTime(),\n      timeOut: 10 * 1000,\n      last_time_upgrade: true\n    };\n  },\n  mounted: function mounted() {\n    this.timer = setInterval(function () {\n      var that = this;\n      this.currentTime = new Date().getTime();\n\n      if (this.last_time_upgrade == true) {\n        this.lastTime = new Date().getTime();\n      }\n\n      if (this.currentTime - this.lastTime > this.timeOut) {\n        this.last_time_upgrade = true;\n        this.loading = false;\n        this.flag === true;\n        this.reload();\n        return this.$message.error({\n          showClose: true,\n          message: 'Login timeout, please check the network and refresh.',\n          offset: 70\n        });\n      }\n    }.bind(this), 5000);\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearInterval(this.timer);\n  },\n  methods: {\n    cancelRequest: function cancelRequest() {\n      if (typeof this.source === 'function') {\n        this.source('终止请求');\n      }\n    },\n    submitForm: function submitForm() {\n      var _this = this;\n\n      var that = this;\n      var CancelToken = this.$http.CancelToken;\n      var source = CancelToken.source();\n      this.loading = true;\n      this.$refs.loginFormRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(valid) {\n          var _yield$_this$$http$po, data;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!valid) {\n                    _context.next = 32;\n                    break;\n                  }\n\n                  if (!(_this.flag === true)) {\n                    _context.next = 32;\n                    break;\n                  }\n\n                  _this.flag = false;\n                  _this.last_time_upgrade = false;\n\n                  _this.cancelRequest();\n\n                  console.log('$axios.defaults.baseURL:', _this.$http.defaults.baseURL);\n                  _context.next = 8;\n                  return _this.$http.post('/user/login/', qs.stringify(_this.loginForm), {\n                    cancelToken: new _this.$http.CancelToken(function executor(c) {\n                      that.source = c;\n                    })\n                  });\n\n                case 8:\n                  _yield$_this$$http$po = _context.sent;\n                  data = _yield$_this$$http$po.data;\n\n                  if (!(data.code !== 20000)) {\n                    _context.next = 19;\n                    break;\n                  }\n\n                  _this.loginForm.password = '';\n                  _this.loading = false;\n                  _this.last_time_upgrade = true;\n                  _this.loading = false;\n\n                  _this.reload();\n\n                  return _context.abrupt(\"return\", _this.$message.error({\n                    showClose: true,\n                    message: 'Login failed. Please check whether the username or password is correct',\n                    offset: 70\n                  }));\n\n                case 19:\n                  _this.$store.commit('setToken', null);\n\n                  window.sessionStorage.setItem('username', _this.loginForm.username);\n                  window.sessionStorage.setItem('password', _this.loginForm.password);\n\n                  _this.$store.commit('setUserId', data.data.profile.id);\n\n                  _this.$store.commit('setUserId', data.data.profile.id);\n\n                  _this.$store.commit('setToken', data.data.token); // console.log('data.data.token:', data.data.token);\n\n\n                  _this.$store.commit('setUsername', _this.loginForm.username);\n\n                  _this.$store.commit('setUser_group_name', data.data.profile.user_group_name);\n\n                  _this.getUserRight();\n\n                  _this.$message.success({\n                    showClose: true,\n                    message: 'Login succeeded. Welcome to PointMe!',\n                    offset: 70\n                  });\n\n                  _this.$router.push('/dashboard');\n\n                  _this.loading = false;\n                  _this.flag = true;\n\n                case 32:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    getUserRight: function () {\n      var _getUserRight = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get('/user/');\n\n              case 2:\n                _yield$this$$http$get = _context2.sent;\n                data = _yield$this$$http$get.data;\n                this.$store.commit('setNickName', data.data.nickname);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getUserRight() {\n        return _getUserRight.apply(this, arguments);\n      }\n\n      return getUserRight;\n    }()\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"login-wrap\">\n        <div class=\"box\">\n            <!-- <div class=\"ms-title\" style=\"line-height:30px\">基于对抗生成技术的激光雷达<br>点云测试数据扩增系统</div> -->\n            <div class=\"ms-title\">PointMe - Data Augmentation</div>\n            <el-form :model=\"loginForm\" :rules=\"loginFormRules\" ref=\"loginFormRef\" label-width=\"0px\" class=\"ms-content\">\n                <el-form-item prop=\"username\">\n                    <el-input v-model=\"loginForm.username\" placeholder=\"username\">\n                        <el-button slot=\"prepend\" icon=\"el-icon-user-solid\"></el-button>\n                    </el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input type=\"password\" placeholder=\"password\" v-model=\"loginForm.password\" @keyup.enter.native=\"submitForm()\">\n                        <el-button slot=\"prepend\" icon=\"el-icon-s-goods\"></el-button>\n                    </el-input>\n                </el-form-item>\n                <div class=\"login-btn\">\n                    <el-button\n                        type=\"primary\"\n                        @click=\"submitForm()\"\n                        :loading=\"loading\"\n                        element-loading-spinner=\"el-icon-loading\"\n                        element-loading-text=\"Loading\"\n                        >Log in</el-button\n                    >\n                </div>\n                <p class=\"login-tips\">Tips: The system does not open the registration function.</p>\n            </el-form>\n        </div>\n    </div>\n</template>\n<script>\nimport qs from 'qs';\nimport { setInterval, clearInterval } from 'timers';\nexport default {\n    inject: ['reload'],\n    data: function() {\n        return {\n            loginForm: {\n                username: '',\n                password: ''\n            },\n            loginFormRules: {\n                username: [{ required: true, message: 'Username cannot be empty!', trigger: 'blur' }],\n                password: [{ required: true, message: 'Passward cannot be empty!', trigger: 'blur' }]\n            },\n            loading: false,\n            flag: true,\n            lastTime: new Date().getTime(),\n            currentTime: new Date().getTime(),\n            timeOut: 10 * 1000,\n            last_time_upgrade: true\n        };\n    },\n    mounted() {\n        this.timer = setInterval(\n            function() {\n                var that = this;\n                this.currentTime = new Date().getTime();\n                if (this.last_time_upgrade == true) {\n                    this.lastTime = new Date().getTime();\n                }\n\n                if (this.currentTime - this.lastTime > this.timeOut) {\n                    this.last_time_upgrade = true;\n                    this.loading = false;\n                    this.flag === true;\n                    this.reload();\n                    return this.$message.error({\n                        showClose: true,\n                        message: 'Login timeout, please check the network and refresh.',\n                        offset: 70\n                    });\n                }\n            }.bind(this),\n            5000\n        );\n    },\n    beforeDestroy() {\n        clearInterval(this.timer);\n    },\n    methods: {\n        cancelRequest() {\n            if (typeof this.source === 'function') {\n                this.source('终止请求');\n            }\n        },\n        submitForm() {\n            var that = this;\n            var CancelToken = this.$http.CancelToken;\n            var source = CancelToken.source();\n            this.loading = true;\n\n            this.$refs.loginFormRef.validate(async valid => {\n                if (valid) {\n                    if (this.flag === true) {\n                        this.flag = false;\n                        this.last_time_upgrade = false;\n\n                        this.cancelRequest();\n                        console.log('$axios.defaults.baseURL:', this.$http.defaults.baseURL);\n                        const { data: data } = await this.$http.post('/user/login/', qs.stringify(this.loginForm), {\n                            cancelToken: new this.$http.CancelToken(function executor(c) {\n                                that.source = c;\n                            })\n                        });\n\n                        if (data.code !== 20000) {\n                            this.loginForm.password = '';\n                            this.loading = false;\n                            this.last_time_upgrade = true;\n                            this.loading = false;\n                            this.reload();\n                            return this.$message.error({\n                                showClose: true,\n                                message: 'Login failed. Please check whether the username or password is correct',\n                                offset: 70\n                            });\n                        } else {\n                            this.$store.commit('setToken', null);\n\n                            window.sessionStorage.setItem('username', this.loginForm.username);\n                            window.sessionStorage.setItem('password', this.loginForm.password);\n                            this.$store.commit('setUserId', data.data.profile.id);\n                            this.$store.commit('setUserId', data.data.profile.id);\n\n                            this.$store.commit('setToken', data.data.token);\n                            // console.log('data.data.token:', data.data.token);\n                            this.$store.commit('setUsername', this.loginForm.username);\n\n                            this.$store.commit('setUser_group_name', data.data.profile.user_group_name);\n                            this.getUserRight();\n                            this.$message.success({\n                                showClose: true,\n                                message: 'Login succeeded. Welcome to PointMe!',\n                                offset: 70\n                            });\n\n                            this.$router.push('/dashboard');\n                            this.loading = false;\n                            this.flag = true;\n                        }\n                    }\n                }\n            });\n        },\n        async getUserRight() {\n            const { data: data } = await this.$http.get('/user/');\n\n            this.$store.commit('setNickName', data.data.nickname);\n        }\n    }\n};\n</script>\n<style scoped>\n.login-wrap {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    /* background: url(../../assets/img/bgd1.png) no-repeat; */\n\n    background: url(../../assets/img/bgd4.jpg) no-repeat;\n    background-size: cover;\n}\n.ms-title {\n    width: 100%;\n    line-height: 50px;\n    text-align: center;\n    font-size: 22px;\n    color: #fff;\n    border-bottom: 1px solid #ddd;\n}\n.ms-login {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 350px;\n    margin: -190px 0 0 -175px;\n    border-radius: 5px;\n    background: rgba(172, 105, 105, 0.6);\n}\n.ms-content {\n    padding: 30px 0px;\n}\n.login-btn {\n    text-align: center;\n}\n.login-btn button {\n    width: 100%;\n    height: 36px;\n    margin-bottom: 10px;\n}\n.login-tips {\n    font-size: 12px;\n    line-height: 10px;\n    color: #fff;\n}\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n    background-size: cover;\n}\n.box {\n    position: absolute;\n    top: 47%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px;\n    padding: 40px 40px 20px 40px;\n    background: rgba(0, 0, 0, 0.6);\n    box-sizing: border-box;\n    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.4);\n    border-radius: 10px;\n}\n.box h2 {\n    margin: 0 0 30px;\n    padding: 0;\n    color: #fff;\n    text-align: center;\n    font-size: 22px;\n}\n.box .inputBox {\n    position: relative;\n}\n.box .inputBox input {\n    width: 100%;\n    padding: 10px 0;\n    font-size: 16px;\n    color: #fff;\n    letter-spacing: 1px;\n    margin-bottom: 30px;\n    border: none;\n    border-bottom: 1px solid #fff;\n    outline: none;\n    background: transparent;\n}\n.box .inputBox label {\n    position: absolute;\n    top: 0;\n    left: 0;\n    padding: 10px 0;\n    letter-spacing: 1px;\n    font-size: 16px;\n    color: #fff;\n    pointer-events: none;\n    transition: 0.5s;\n}\n.box .inputBox input:focus ~ label,\n.box .inputBox input:valid ~ label {\n    top: -18px;\n    left: 0;\n    color: #03a9f4;\n    font-size: 12px;\n}\n.box input[type='submit'] {\n    background: transparent;\n    border: none;\n    outline: none;\n    color: #fff;\n    background: #03a9f4;\n    padding: 10px 20px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n</style>\n"],"sourceRoot":"src/components/page"}]}