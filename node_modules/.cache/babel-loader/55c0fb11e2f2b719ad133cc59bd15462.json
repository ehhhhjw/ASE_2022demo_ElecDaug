{"remainingRequest":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/Lidar_A_AugTaskList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/Lidar_A_AugTaskList.vue","mtime":1636388062000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _slicedToArray from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _typeof from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as echarts from 'echarts';\nimport 'echarts-gl';\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport vTable from \"./Table.vue\";\nexport default {\n  data: function data() {\n    var _ref;\n\n    var isNotNag_int = function isNotNag_int(rule, value, callback) {\n      var boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n      if (value !== '0' && !boolean) {\n        callback(new Error('请输入非负整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var generate_per_file_and_paramsRule = function generate_per_file_and_paramsRule(rule, value, callback) {\n      if (value < 1) {\n        callback(new Error('只能为大于等于1整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNum = function isNum(rule, value, callback) {\n      var age = /^[0-9]*$/;\n\n      if (!age.test(value)) {\n        callback(new Error('只能为非负数字'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNotNag = function isNotNag(rule, value, callback) {\n      if (value < 0) {\n        callback(new Error('只能为非负数'));\n      } else {\n        callback();\n      }\n    };\n\n    var epsilonRule = function epsilonRule(rule, value, callback) {\n      value = value.replace('[', '');\n      value = value.replace(']', '');\n      value = value.replace('，', ',');\n      var list = value.split(',');\n\n      for (var i in list) {\n        if (!_typeof(parseFloat(list[i])) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n          callback(new Error('请填写合理的非负数字列表'));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    return _ref = {\n      mark_group: {\n        marks1_2: {\n          1: '1',\n          2: {\n            style: {\n              width: '10px'\n            },\n            label: '2'\n          }\n        },\n        marks0001_2: {\n          0.001: '0.001',\n          2: {\n            style: {\n              width: '10px'\n            },\n            label: '2'\n          }\n        },\n        marks0001_1: {\n          0.001: '0.001',\n          1: {\n            style: {\n              width: '10px'\n            },\n            label: '1'\n          }\n        },\n        marks1_100: {\n          1: '1',\n          100: {\n            style: {\n              width: '30px'\n            },\n            label: '100'\n          }\n        },\n        marks1_1000: {\n          1: '1',\n          1000: {\n            style: {\n              width: '40px'\n            },\n            label: '1000'\n          }\n        },\n        marks1_15000: {\n          1: '1',\n          15000: {\n            style: {\n              width: '50px'\n            },\n            label: '15000'\n          }\n        },\n        marks0_5: {\n          0: '0',\n          5: {\n            style: {\n              width: '10px'\n            },\n            label: '5'\n          }\n        },\n        marks1_5: {\n          1: '1',\n          5: {\n            style: {\n              width: '10px'\n            },\n            label: '5'\n          }\n        }\n      },\n      full_loading_flag: false,\n      generate_func_self: '',\n      generate_func_all: '',\n      generate_func_list: [],\n      queryInfo_Self: {\n        page: 1\n      },\n      taskList_Self: [],\n      total_Self: 0,\n      formInline_Self: {\n        searchType: '',\n        searchTaskInfo: ''\n      },\n      editDialogSelfVisible: false,\n      editForm_Self: {\n        task_id: 0,\n        master: this.$store.getters.userId,\n        name: '',\n        params: '',\n        file: {},\n        augmentation_method_name: ''\n      },\n      editFormSelfRules: {\n        name: [{\n          required: true,\n          message: '请输入任务名',\n          trigger: 'blur'\n        }]\n      },\n      queryInfo_All: {\n        page: 1\n      },\n      taskList_All: [],\n      total_All: 0,\n      formInline_All: {\n        searchType: '',\n        searchTaskInfo: ''\n      },\n      editDialogAllVisible: false,\n      editForm_All: {},\n      editFormAllRules: {\n        name: [{\n          required: true,\n          message: '请输入任务名',\n          trigger: 'blur'\n        }]\n      },\n      FuzzySearch: 1,\n      activeName: 'self'\n    }, _defineProperty(_ref, \"taskList_All\", []), _defineProperty(_ref, \"userRight\", ''), _defineProperty(_ref, \"methodDialogSelfVisible\", false), _defineProperty(_ref, \"methodDetail\", []), _defineProperty(_ref, \"mohu\", true), _defineProperty(_ref, \"fileName\", ''), _defineProperty(_ref, \"preview_value\", []), _defineProperty(_ref, \"preview_options\", []), _defineProperty(_ref, \"previewDialogVisible\", false), _defineProperty(_ref, \"loading\", true), _defineProperty(_ref, \"original_files_zip\", null), _defineProperty(_ref, \"generate_files_zip\", null), _defineProperty(_ref, \"originalPointCloudData\", []), _defineProperty(_ref, \"generatePointCloudData\", []), _defineProperty(_ref, \"maxAxisValue\", -10000), _defineProperty(_ref, \"minAxisValue\", 10000), _defineProperty(_ref, \"original_is_Zip\", false), _defineProperty(_ref, \"generate_is_Zip\", false), _defineProperty(_ref, \"original_fileContent\", ''), _defineProperty(_ref, \"generate_fileContent\", ''), _defineProperty(_ref, \"original_blob\", null), _defineProperty(_ref, \"generate_blob\", null), _defineProperty(_ref, \"test_text\", 'djshdkjdhkadh'), _defineProperty(_ref, \"change_axios_buttom\", false), _defineProperty(_ref, \"editForm\", {}), _defineProperty(_ref, \"rules1\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: epsilonRule,\n        trigger: 'blur'\n      }],\n      generate_per_file_and_params: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"rules2\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      ite_epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      ite_limit: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      generate_per_file: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"rules3\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      ite_epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      ite_limit: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      generate_per_file: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      boundary_constraint: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"picture\", 'https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg'), _ref;\n  },\n  components: {\n    vTable: vTable\n  },\n  computed: {\n    rulesList: function rulesList() {\n      if (this.editForm_Self.augmentation_method_name === 'FGSM') {\n        return this.rules1;\n      } else if (this.editForm_Self.augmentation_method_name === 'JSMA') {\n        return this.rules3;\n      } else {\n        return this.rules2;\n      }\n    }\n  },\n  created: function created() {\n    this.userRight = window.sessionStorage.getItem('user_group_name');\n    this.getTaskList_Self();\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var data;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n              _context.next = 3;\n              return this.$http.get('/augmentation_method/?augmentation_type=1');\n\n            case 3:\n              data = _context.sent;\n              // ?id=1\n              console.log('data:', data);\n              this.generate_func_list = data.data.data;\n              console.log('this.generate_func_list:', this.generate_func_list);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    // >>>>>>>>>el-tab部分>>>>>>>>>>>>>>>.\n    handleClick: function handleClick(tab, event) {\n      if (tab.index === '1') {\n        this.getTaskList_All();\n      }\n    },\n    // >>>>>>>>>>>>>获取任务列表以及查询部分>>>>>>>>>>>>>>>\n    // 获取子组件getList指令\n    handleSelectClear: function handleSelectClear() {\n      this.getTaskList_Self();\n      this.generate_func_self = '';\n    },\n    handleGetList: function handleGetList(data) {\n      if (!data) {\n        this.getTaskList_Self();\n      } else {\n        this.getTaskList_All();\n      }\n    },\n    getTaskList_Self: function () {\n      var _getTaskList_Self = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get('/task/augmentation_type/search/?augmentation_type=1&page=' + this.queryInfo_Self.page);\n\n              case 2:\n                _yield$this$$http$get = _context2.sent;\n                data = _yield$this$$http$get.data;\n\n                if (!(data.code !== 20000)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                if (!(data.code === 40400)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                console.log('data:', data);\n                this.taskList_Self = [];\n                this.totalPageNum = 0;\n                this.total_Self = 0;\n                return _context2.abrupt(\"return\", this.$message.error('本用户未添加任务！'));\n\n              case 11:\n                return _context2.abrupt(\"return\", this.$message.error('获取本用户任务列表失败！'));\n\n              case 12:\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages; // if (this.queryInfo_Self.page > this.totalPageNum) {\n                //     this.queryInfo_Self.page = this.totalPageNum;\n                // }\n\n                console.log('this.taskList_Self:', this.taskList_Self);\n                this.total_Self = this.totalPageNum * 10;\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getTaskList_Self() {\n        return _getTaskList_Self.apply(this, arguments);\n      }\n\n      return getTaskList_Self;\n    }(),\n    SearchTask_Self: function () {\n      var _SearchTask_Self = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var flag, search_params, _yield$this$$http$get2, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.formInline_Self.searchType === '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('请输入查询方式！'));\n\n              case 2:\n                flag = 0;\n                search_params = '';\n\n                if (!(this.formInline_Self.searchType === '生成方法')) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                // search_params = '/task/augmentation_method/search/?augmentation_method=' + this.formInline_Self.searchTaskInfo;\n                search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self + '&page=' + this.queryInfo_Self.page;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                console.log('this.queryInfo_Self.page:', this.queryInfo_Self.page);\n                _context3.next = 13;\n                break;\n\n              case 10:\n                if (!(this.formInline_Self.searchTaskInfo === '')) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('请输入搜索内容！'));\n\n              case 12:\n                if (this.formInline_Self.searchType === '任务名称') {\n                  console.log('this.queryInfo_Self.page:', this.queryInfo_Self.page);\n                  search_params = '/task/name/search/?augmentation_type=1&task_name=' + this.formInline_Self.searchTaskInfo + '&search_type=' + this.FuzzySearch + '&page=' + this.queryInfo_Self.page;\n                } else {\n                  search_params = '/task/id/search/?augmentation_type=1&task_id=' + this.formInline_Self.searchTaskInfo + '&page=' + this.queryInfo_Self.page; //  +\n                  // '&search_type=' +\n                  // this.FuzzySearch;\n                }\n\n              case 13:\n                _context3.next = 15;\n                return this.$http.get(search_params);\n\n              case 15:\n                _yield$this$$http$get2 = _context3.sent;\n                data = _yield$this$$http$get2.data;\n                console.log('data:', data);\n\n                if (!(data.code !== 20000)) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return _context3.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 22:\n                if (this.formInline_Self.searchType === '任务id') {\n                  flag = 1;\n                  this.taskList_Self = [];\n                  this.taskList_Self.push(data.data);\n                } else {\n                  this.taskList_Self = data.data.details;\n                }\n\n                console.log('data:', data); // this.total_Self = this.taskList_Self ? this.taskList_Self.length : 0;\n\n                this.totalPageNum = data.data.pages; // if (this.queryInfo_Self.page > this.totalPageNum) {\n                //     this.queryInfo_Self.page = this.totalPageNum;\n                // }\n\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n\n                if (flag) {\n                  this.total_Self = this.taskList_Self.length;\n                }\n\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function SearchTask_Self() {\n        return _SearchTask_Self.apply(this, arguments);\n      }\n\n      return SearchTask_Self;\n    }(),\n    // 获取所有用户任务列表\n    getTaskList_All: function () {\n      var _getTaskList_All = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$this$$http$get3, data, _yield$this$$http$get4, _data, _yield$this$$http$get5, _data2, _yield$this$$http$get6, _data3, _yield$this$$http$get7, _data4, _yield$this$$http$get8, _data5, _yield$this$$http$get9, _data6;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log('this.generate_func_all:', this.generate_func_all);\n                console.log('this.formInline_All.searchType:', this.formInline_All.searchType);\n\n                if (!(this.formInline_All.searchType !== '生成方法' && (this.formInline_All.searchType === '' || this.formInline_All.searchTaskInfo === ''))) {\n                  _context4.next = 23;\n                  break;\n                }\n\n                _context4.next = 5;\n                return this.$http.get('/task/augmentation_type/admin/search/?augmentation_type=1&page=' + this.queryInfo_All.page);\n\n              case 5:\n                _yield$this$$http$get3 = _context4.sent;\n                data = _yield$this$$http$get3.data;\n\n                if (!(data.code == 40400)) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                console.log('data:', data);\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('所有用户都未添加任务！'));\n\n              case 13:\n                if (!(data.code !== 20000)) {\n                  _context4.next = 18;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[所有用户]！' + '错误原因：' + data.msg));\n\n              case 18:\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 119;\n                break;\n\n              case 23:\n                if (!(this.formInline_All.searchType === '用户id')) {\n                  _context4.next = 39;\n                  break;\n                }\n\n                console.log('this.formInline_All.searchTaskInfo:', this.formInline_All.searchTaskInfo);\n                _context4.next = 27;\n                return this.$http.get('/task/augmentation_type/admin/search/' + '?augmentation_type=1&page=' + this.queryInfo_All.page + '&user_id=' + this.formInline_All.searchTaskInfo);\n\n              case 27:\n                _yield$this$$http$get4 = _context4.sent;\n                _data = _yield$this$$http$get4.data;\n\n                if (!(_data.code !== 20000)) {\n                  _context4.next = 34;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[用户id]！' + '错误原因：' + _data.msg));\n\n              case 34:\n                this.taskList_All = _data.data.details;\n                this.totalPageNum = _data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 119;\n                break;\n\n              case 39:\n                if (!(this.formInline_All.searchType === '任务名称')) {\n                  _context4.next = 55;\n                  break;\n                }\n\n                _context4.next = 42;\n                return this.$http.get('/task/name/admin/search/' + '?augmentation_type=1&page=' + this.queryInfo_All.page + '&task_name=' + this.formInline_All.searchTaskInfo + '&search_type=' + this.FuzzySearch);\n\n              case 42:\n                _yield$this$$http$get5 = _context4.sent;\n                _data2 = _yield$this$$http$get5.data;\n                console.log('data:', _data2);\n\n                if (!(_data2.code !== 20000)) {\n                  _context4.next = 50;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[任务名称]！' + '错误原因：' + _data2.msg));\n\n              case 50:\n                this.taskList_All = _data2.data.details;\n                this.totalPageNum = _data2.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 119;\n                break;\n\n              case 55:\n                if (!(this.formInline_All.searchType === '任务id')) {\n                  _context4.next = 73;\n                  break;\n                }\n\n                _context4.next = 58;\n                return this.$http.get('/task/id/admin/search/' + '?augmentation_type=1&page=' + this.queryInfo_All.page + '&task_id=' + this.formInline_All.searchTaskInfo);\n\n              case 58:\n                _yield$this$$http$get6 = _context4.sent;\n                _data3 = _yield$this$$http$get6.data;\n\n                if (!(_data3.code !== 20000)) {\n                  _context4.next = 65;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[任务id]！' + '错误原因：' + _data3.msg));\n\n              case 65:\n                console.log('data:', _data3);\n                console.log('this.taskList_All:', this.taskList_All);\n                this.taskList_Self = [];\n                this.taskList_Self.push(_data3.data.details);\n                this.totalPageNum = _data3.data.pages; // this.total_All = this.taskList_All;\n\n                this.total_All = this.taskList_All.length;\n                _context4.next = 119;\n                break;\n\n              case 73:\n                if (!(this.formInline_All.searchType === '生成类型id')) {\n                  _context4.next = 88;\n                  break;\n                }\n\n                _context4.next = 76;\n                return this.$http.get('/task/augmentation_type/admin/search/' + '?page=' + this.queryInfo_All.page + '&augmentation_type=' + this.formInline_All.searchTaskInfo);\n\n              case 76:\n                _yield$this$$http$get7 = _context4.sent;\n                _data4 = _yield$this$$http$get7.data;\n\n                if (!(_data4.code !== 20000)) {\n                  _context4.next = 83;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[生成类型]！' + '错误原因：' + _data4.msg));\n\n              case 83:\n                this.taskList_All = _data4.data.details;\n                this.totalPageNum = _data4.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 119;\n                break;\n\n              case 88:\n                if (!(this.formInline_All.searchType == '生成方法')) {\n                  _context4.next = 106;\n                  break;\n                }\n\n                console.log('here,this.generate_func_all22222:', this.generate_func_all);\n                _context4.next = 92;\n                return this.$http.get('/task/augmentation_method/admin/search/' + '?page=' + this.queryInfo_All.page + '&augmentation_method=' + this.generate_func_all);\n\n              case 92:\n                _yield$this$$http$get8 = _context4.sent;\n                _data5 = _yield$this$$http$get8.data;\n                console.log('data:', _data5);\n\n                if (!(_data5.code !== 20000)) {\n                  _context4.next = 101;\n                  break;\n                }\n\n                console.log('data:', _data5);\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[生成方法]！' + '错误原因：' + _data5.msg));\n\n              case 101:\n                this.taskList_All = _data5.data.details;\n                this.totalPageNum = _data5.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 119;\n                break;\n\n              case 106:\n                if (!(this.formInline_All.searchType === '用户名')) {\n                  _context4.next = 119;\n                  break;\n                }\n\n                console.log('username:', this.formInline_All.searchTaskInfo);\n                _context4.next = 110;\n                return this.$http.get('/task/master/admin/search/' + '?augmentation_type=1&page=' + this.queryInfo_All.page + '&username=' + this.formInline_All.searchTaskInfo + '&search_type=' + this.FuzzySearch);\n\n              case 110:\n                _yield$this$$http$get9 = _context4.sent;\n                _data6 = _yield$this$$http$get9.data;\n                console.log('data:', _data6);\n\n                if (!(_data6.code !== 20000)) {\n                  _context4.next = 115;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[用户名]！' + '错误原因：' + _data6.msg));\n\n              case 115:\n                this.taskList_All = _data6.data.details;\n                this.totalPageNum = _data6.data.pages;\n                console.log('this.taskList_All:', this.taskList_All);\n                this.total_All = this.totalPageNum * 10;\n\n              case 119:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getTaskList_All() {\n        return _getTaskList_All.apply(this, arguments);\n      }\n\n      return getTaskList_All;\n    }(),\n    generate_change: function () {\n      var _generate_change = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(type) {\n        var search_params, _yield$this$$http$get10, data, _search_params, _yield$this$$http$get11, _data7;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(type == '本用户')) {\n                  _context5.next = 20;\n                  break;\n                }\n\n                search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                _context5.next = 5;\n                return this.$http.get(search_params);\n\n              case 5:\n                _yield$this$$http$get10 = _context5.sent;\n                data = _yield$this$$http$get10.data;\n\n                if (!(data.code !== 20000)) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return _context5.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 11:\n                console.log('data:', data);\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n                console.log('this.total_Self:', this.total_Self);\n                console.log('this.totalPageNum:', this.totalPageNum);\n                _context5.next = 33;\n                break;\n\n              case 20:\n                _search_params = '/task/augmentation_method/admin/search/?augmentation_method=' + this.generate_func_all;\n                _context5.next = 23;\n                return this.$http.get(_search_params);\n\n              case 23:\n                _yield$this$$http$get11 = _context5.sent;\n                _data7 = _yield$this$$http$get11.data;\n\n                if (!(_data7.code !== 20000)) {\n                  _context5.next = 29;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.total_All = 0;\n                return _context5.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 29:\n                this.taskList_All = _data7.data.details;\n                this.totalPageNum = _data7.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                this.total_All = this.total_All ? this.taskList_All.length : 0;\n\n              case 33:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function generate_change(_x) {\n        return _generate_change.apply(this, arguments);\n      }\n\n      return generate_change;\n    }(),\n    // 是否启用模糊搜索\n    isFuzzySearch: function isFuzzySearch(flag) {\n      this.FuzzySearch = flag;\n      console.log('this.FuzzySearch:', this.FuzzySearch);\n    },\n    // 清空二级搜索框\n    clearSecondSelect_All: function clearSecondSelect_All() {\n      this.generate_func_all = '';\n      this.formInline_All.searchTaskInfo = '';\n    },\n    clearSecondSelect_Self: function clearSecondSelect_Self() {\n      this.generate_func_self = '';\n      this.formInline_Self.searchTaskInfo = '';\n    },\n    // >>>>>>>>>>分页部分>>>>>>>>>>>>>>>>>>>\n    handleSizeChange_Self: function handleSizeChange_Self(newSize) {\n      this.queryInfo_Self.pagesize = newSize;\n      console.log('newSize-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n      console.log('newSize-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n      this.getTaskList_Self();\n    },\n    handleCurrentChange_Self: function handleCurrentChange_Self(newPage) {\n      this.queryInfo_Self.page = newPage;\n      console.log('newPage-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n      console.log('newPage-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n\n      if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n        this.getTaskList_Self();\n      } else {\n        this.SearchTask_Self();\n      }\n    },\n    handleSizeChange_All: function handleSizeChange_All(newSize) {\n      this.queryInfo_All.pagesize = newSize;\n      console.log('newSize-this.formInline_All.searchType:', this.formInline_All.searchType);\n      console.log('newSize-this.queryInfo_All.page:', this.queryInfo_All.page);\n      this.getTaskList_All();\n    },\n    handleCurrentChange_All: function handleCurrentChange_All(newPage) {\n      this.queryInfo_All.page = newPage;\n      console.log('newPage-this.formInline_All.searchType:', this.formInline_All.searchType);\n      console.log('newPage-this.queryInfo_All.page:', this.queryInfo_All.page);\n      this.getTaskList_All(); // if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n      //     this.getTaskList_All();\n      // } else {\n      //     this.SearchTask_All();\n      // }\n      // this.queryInfo_All.page = newPage;\n      // this.getTaskList_All();\n    },\n    pageReflash_All: function pageReflash_All() {\n      this.queryInfo_All.page = 1;\n    },\n    pageReflash_Self: function pageReflash_Self() {\n      this.queryInfo_Self.page = 1;\n    },\n    // >>>>>>>>>>>>>下载文件部分>>>>>>>>>>>>>>\n    originalfileDownloadTemp: function originalfileDownloadTemp(data) {\n      var task_id = data['task_id'];\n      var flag = data['flag'];\n      this.originalfileDownload(task_id, flag);\n    },\n    originalfileDownload: function () {\n      var _originalfileDownload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(task_id, flag) {\n        var loading, data, file_name1, dot;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                loading = this.full_loading_flag ? '' : this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                this.original_fileContent = '';\n                _context6.next = 4;\n                return this.$http.get('/task/file/?task_id=' + task_id + '&file_type=0&format=json', {\n                  responseType: 'blob',\n                  headers: {\n                    'Content-Type': 'application/json; application/octet-stream'\n                  }\n                });\n\n              case 4:\n                data = _context6.sent;\n                console.log('data:', data);\n                file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n                this.fileName = file_name1[file_name1.length - 1];\n                this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n                dot = this.fileName.lastIndexOf('.');\n                this.original_is_Zip = false;\n\n                if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                  this.original_is_Zip = true;\n                } else {\n                  this.original_blob = data.data;\n                }\n\n                if (!this.full_loading_flag) {\n                  loading.close();\n                }\n\n                if (!flag) {\n                  fileDownload(data.data, this.fileName);\n                }\n\n                return _context6.abrupt(\"return\", data);\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function originalfileDownload(_x2, _x3) {\n        return _originalfileDownload.apply(this, arguments);\n      }\n\n      return originalfileDownload;\n    }(),\n    generatefileDownloadTemp: function generatefileDownloadTemp(data) {\n      var task_id = data['task_id'];\n      var flag = data['flag'];\n      this.generatefileDownload(task_id, flag);\n    },\n    generatefileDownload: function () {\n      var _generatefileDownload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(task_id, flag) {\n        var loading, data, file_name1, dot;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                loading = this.full_loading_flag ? '' : this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                _context7.next = 3;\n                return this.$http.get('/task/file/?task_id=' + task_id + '&file_type=1&format=json', {\n                  responseType: 'blob',\n                  headers: {\n                    'Content-Type': 'application/json; application/octet-stream'\n                  }\n                });\n\n              case 3:\n                data = _context7.sent;\n                file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n                this.fileName = file_name1[file_name1.length - 1];\n                this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n                dot = this.fileName.lastIndexOf('.');\n                this.generate_is_Zip = false;\n\n                if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                  this.generate_is_Zip = true;\n                } else {\n                  this.generate_blob = data.data;\n                }\n\n                if (!this.full_loading_flag) {\n                  loading.close();\n                }\n\n                if (!flag) {\n                  fileDownload(data.data, this.fileName);\n                }\n\n                return _context7.abrupt(\"return\", data);\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function generatefileDownload(_x4, _x5) {\n        return _generatefileDownload.apply(this, arguments);\n      }\n\n      return generatefileDownload;\n    }(),\n    // >>>>>>>>>>>>操作按钮部分>>>>>>>>>>>>>\n    removeTaskById: function () {\n      var _removeTaskById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(task_id) {\n        var confirmResult, _yield$this$$http$del, data;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.$confirm('此操作将永久删除该任务, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context8.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.info('已取消删除'));\n\n              case 5:\n                _context8.next = 7;\n                return this.$http.delete('/task/?task_id=' + task_id);\n\n              case 7:\n                _yield$this$$http$del = _context8.sent;\n                data = _yield$this$$http$del.data;\n\n                if (!(data.code !== 20000)) {\n                  _context8.next = 11;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.error('删除任务失败！' + '错误原因：' + data.msg));\n\n              case 11:\n                this.$message.success('删除任务成功！');\n\n                if (this.activeName === 'self') {\n                  this.queryInfo_Self.page = 1;\n\n                  if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                    this.getTaskList_Self();\n                  } else {\n                    this.SearchTask_Self();\n                  }\n                } else {\n                  this.queryInfo_All.page = 1;\n\n                  if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n                    this.getTaskList_All();\n                  } else {\n                    this.SearchTask_All();\n                  }\n                }\n\n              case 13:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function removeTaskById(_x6) {\n        return _removeTaskById.apply(this, arguments);\n      }\n\n      return removeTaskById;\n    }(),\n    resetForm: function resetForm(formName) {\n      console.log('formName:', formName);\n      this.editForm_Self.epsilon = [{\n        value: 0\n      }];\n    },\n    removeDomain: function removeDomain(item) {\n      if (this.editForm_Self.epsilon.length == 1) {\n        this.$message.error('扰动幅度不可为空!');\n      } else {\n        var item_index = this.editForm_Self.epsilon.indexOf(item);\n\n        if (item_index !== -1) {\n          this.editForm_Self.epsilon.splice(item_index, 1);\n        }\n      }\n    },\n    addDomain: function addDomain() {\n      this.editForm_Self.epsilon.push({\n        value: 0,\n        key: Date.now()\n      });\n    },\n    showEditDialog: function () {\n      var _showEditDialog = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(row) {\n        var i, temp_array, temp, temp_item;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.editForm_Self = JSON.parse(JSON.stringify(row));\n                console.log('this.editForm_Self:', this.editForm_Self);\n                this.editForm_Self.params = JSON.parse(row.params);\n\n                for (i in this.editForm_Self.params) {\n                  this.$set(this.editForm_Self, i, this.editForm_Self.params[i]);\n                }\n\n                this.editForm_Self.urgency_level = this.editForm_Self.urgency_level;\n\n                if (this.editForm_Self.augmentation_method_name === 'FGSM-激光雷达') {\n                  this.editForm_Self.generate_per_file_and_params = parseInt(this.editForm_Self.generate_per_file_and_params);\n                } else if (this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-激光雷达' || this.editForm_Self.augmentation_method_name === 'JSMA-激光雷达') {\n                  this.editForm_Self.generate_per_file = parseInt(this.editForm_Self.generate_per_file);\n                  this.editForm_Self.ite_epsilon = parseFloat(this.editForm_Self.ite_epsilon);\n                  this.editForm_Self.boundary_constraint = parseFloat(this.editForm_Self.boundary_constraint);\n                  this.editForm_Self.ite_limit = parseInt(this.editForm_Self.ite_limit);\n                }\n\n                this.editForm_Self.whether_to_rotate = this.editForm_Self.whether_to_rotate === '1' ? true : false;\n                this.editForm_Self.strict_mode = this.editForm_Self.strict_mode === '1' ? true : false;\n\n                if (this.editForm_Self.augmentation_method_name === 'FGSM-激光雷达') {\n                  console.log('this.editForm_Self.epsilon:', this.editForm_Self.epsilon);\n                  temp_array = this.editForm_Self.epsilon.replace('[', '').replace(']', '').split(',');\n                  console.log('temp_array:', temp_array);\n                  temp = [];\n\n                  for (i in temp_array) {\n                    temp_item = {};\n                    temp_item.value = parseFloat(temp_array[i]);\n                    temp.push(temp_item);\n                  }\n\n                  console.log('temp:', temp);\n                  this.editForm_Self.epsilon = temp; // this.editForm_Self.epsilon = this.editForm_Self.epsilon;\n                }\n\n                this.editDialogSelfVisible = true;\n\n              case 10:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function showEditDialog(_x7) {\n        return _showEditDialog.apply(this, arguments);\n      }\n\n      return showEditDialog;\n    }(),\n    editDialogClosed: function editDialogClosed() {\n      this.editForm_Self = {\n        task_id: 0,\n        master: this.$store.getters.userId,\n        name: '',\n        params: '',\n        file: {},\n        augmentation_method_name: ''\n      };\n    },\n    editTaskInfo: function () {\n      var _editTaskInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n        var adddata, temp_params, temp, x, _iterator, _step, _step$value, a, b, _yield$this$$http, data;\n\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this.editForm_Self.master = this.$store.state.userId; // if (this.editForm_Self.epsilon) {\n                //     this.editForm_Self.epsilon = this.editForm_Self.epsilon.replace('，', ',');\n                // }\n\n                adddata = new FormData();\n                adddata.append('task_id', this.editForm_Self.id);\n                adddata.append('name', this.editForm_Self.name);\n                adddata.append('master', this.editForm_Self.master);\n                adddata.append('urgency_level', this.editForm_Self.urgency_level + '');\n                temp_params = {};\n\n                if (this.editForm_Self.augmentation_method_name === 'FGSM-激光雷达') {\n                  console.log('here');\n                  temp = [];\n\n                  for (x in this.editForm_Self.epsilon) {\n                    console.log('this.editForm_Self.epsilon[x][\"value\"]:', this.editForm_Self.epsilon[x]['value']);\n                    temp.push(this.editForm_Self.epsilon[x]['value']);\n                  }\n\n                  temp_params.epsilon = '[' + temp.toString() + ']';\n                  console.log('temp_params.epsilon:', temp_params.epsilon);\n                  temp_params = {\n                    epsilon: temp_params.epsilon,\n                    whether_to_rotate: this.editForm_Self.whether_to_rotate,\n                    generate_per_file_and_params: this.editForm_Self.generate_per_file_and_params + '',\n                    strict_mode: this.editForm_Selfstrict_mode\n                  };\n                } else if (this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-激光雷达') {\n                  temp_params = {\n                    ite_epsilon: this.editForm_Self.ite_epsilon + '',\n                    ite_limit: this.editForm_Self.ite_limit + '',\n                    whether_to_rotate: this.editForm_Self.whether_to_rotate,\n                    generate_per_file: this.editForm_Self.generate_per_file + '',\n                    strict_mode: this.editForm_Self.strict_mode\n                  };\n                } else if (this.editForm_Self.augmentation_method_name === 'JSMA-激光雷达') {\n                  temp_params = {\n                    ite_epsilon: this.editForm_Self.ite_epsilon + '',\n                    ite_limit: this.editForm_Self.ite_limit + '',\n                    whether_to_rotate: this.editForm_Self.whether_to_rotate,\n                    generate_per_file: this.editForm_Self.generate_per_file + '',\n                    boundary_constraint: this.editForm_Self.boundary_constraint + '',\n                    strict_mode: this.editForm_Self.strict_mode\n                  };\n                }\n\n                temp_params.whether_to_rotate = this.editForm_Self.whether_to_rotate ? '1' : '0';\n                temp_params.strict_mode = this.editForm_Self.strict_mode ? '1' : '0';\n                temp_params = JSON.stringify(temp_params);\n                adddata.append('params', temp_params);\n                this.editForm_Self.file = document.getElementById('filetemp').files[0];\n\n                if (this.editForm_Self.file) {\n                  adddata.append('file', this.editForm_Self.file);\n                }\n\n                _iterator = _createForOfIteratorHelper(adddata.entries());\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    _step$value = _slicedToArray(_step.value, 2), a = _step$value[0], b = _step$value[1];\n                    console.log(a, b);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                _context10.next = 18;\n                return this.$http({\n                  url: '/task/',\n                  data: adddata,\n                  method: 'put'\n                });\n\n              case 18:\n                _yield$this$$http = _context10.sent;\n                data = _yield$this$$http.data;\n\n                if (!(data.code !== 20000)) {\n                  _context10.next = 22;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", this.$message.error('修改任务失败！' + '错误原因：' + data.msg));\n\n              case 22:\n                this.$message.success('修改任务成功！');\n                this.editDialogSelfVisible = false;\n                this.$refs.editFormRef.resetFields();\n                this.editForm_Self.augmentation_type = '';\n                this.editForm_Self.augmentation_method = '';\n                this.editForm_Self.file = {};\n                this.getTaskList_Self();\n                this.getTaskList_All();\n\n              case 30:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function editTaskInfo() {\n        return _editTaskInfo.apply(this, arguments);\n      }\n\n      return editTaskInfo;\n    }(),\n    getdata: function () {\n      var _getdata = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(reader, self) {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return function () {\n                  self.fileContent = this.result;\n                };\n\n              case 2:\n                return _context11.abrupt(\"return\", reader.onload = _context11.sent);\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function getdata(_x8, _x9) {\n        return _getdata.apply(this, arguments);\n      }\n\n      return getdata;\n    }(),\n    // 标记任务异常\n    taskException: function taskException() {\n      var _this = this;\n\n      this.$confirm('是否确定将该任务标记成异常状态？').then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(_) {\n          var adddata, _yield$_this$$http, data;\n\n          return regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  adddata = new FormData();\n                  adddata.append('task_id', _this.methodDetail.id);\n                  _context12.next = 4;\n                  return _this.$http({\n                    url: '/task/exception/',\n                    data: adddata,\n                    method: 'post'\n                  });\n\n                case 4:\n                  _yield$_this$$http = _context12.sent;\n                  data = _yield$_this$$http.data;\n\n                  if (!(data.code !== 20000)) {\n                    _context12.next = 8;\n                    break;\n                  }\n\n                  return _context12.abrupt(\"return\", _this.$message.error('添加生成任务失败！' + '错误原因：' + data.msg));\n\n                case 8:\n                  _this.$message.success('标记成异常成功！');\n\n                  if (_this.activeName === 'self') {\n                    if (_this.formInline_Self.searchTaskInfo === '' && _this.generate_func_self === '') {\n                      _this.getTaskList_Self();\n                    } else {\n                      _this.SearchTask_Self();\n                    }\n                  } else {\n                    if (_this.formInline_All.searchTaskInfo === '' && _this.generate_func_all === '') {\n                      _this.getTaskList_All();\n                    } else {\n                      _this.SearchTask_All();\n                    }\n                  }\n\n                case 10:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12);\n        }));\n\n        return function (_x10) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (_) {});\n    },\n    //任务详情对话框\n    MethodDetail: function () {\n      var _MethodDetail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(id) {\n        var _yield$this$$http$get12, data;\n\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                // id = data\n                console.log('this.methodDetail:', this.methodDetail);\n                this.methodDialogSelfVisible = true;\n                _context13.next = 4;\n                return this.$http.get('/task/' + '?task_id=' + id);\n\n              case 4:\n                _yield$this$$http$get12 = _context13.sent;\n                data = _yield$this$$http$get12.data;\n                console.log('data:', data);\n\n                if (!(data.code !== 20000)) {\n                  _context13.next = 9;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", this.$message.error('获取本用户任务详情失败！' + '错误原因：' + data.msg));\n\n              case 9:\n                this.methodDetail = data.data;\n\n              case 10:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function MethodDetail(_x11) {\n        return _MethodDetail.apply(this, arguments);\n      }\n\n      return MethodDetail;\n    }(),\n    methodDialogClose: function methodDialogClose() {\n      console.log('this.methodDetail:', this.methodDetail);\n      this.methodDetail = [];\n    },\n    // >>>>>>>>>>点云预览部分>>>>>>>>>>>>>>>\n    // point_cloud_preview-previewHandleChange-make_format_data-get_preview\n    point_cloud_preview: function () {\n      var _point_cloud_preview = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(task_id) {\n        var loading, preview_options, original_res, original_files_zip, original_files, orignal_names, me, temp_object, generate_res, generate_files_zip, generate_files, generate_names, original_is_Zip;\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                this.full_loading_flag = true;\n                loading = this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                console.log('loading:', loading);\n                console.log('this.$loading.lock:', this.$loading.lock); // this.previewDialogVisible = true;\n\n                preview_options = [];\n                _context14.next = 7;\n                return this.originalfileDownload(task_id, 1);\n\n              case 7:\n                original_res = _context14.sent;\n\n                if (!this.original_is_Zip) {\n                  _context14.next = 18;\n                  break;\n                }\n\n                original_files_zip = new window.File([original_res.data], this.fileName, {\n                  type: 'zip'\n                });\n                original_files = new JSZip();\n                orignal_names = [];\n                this.original_files_zip = original_files_zip;\n                me = this;\n                _context14.next = 16;\n                return original_files.loadAsync(this.original_files_zip).then(function (zip) {\n                  for (var i in original_files.files) {\n                    var temp_object = {};\n                    orignal_names.push(i);\n                    temp_object['value'] = i;\n                    temp_object['label'] = i;\n                    temp_object['children'] = [];\n                    preview_options.push(temp_object);\n                  }\n\n                  me.original_files_zip = original_files_zip;\n                });\n\n              case 16:\n                _context14.next = 23;\n                break;\n\n              case 18:\n                temp_object = {};\n                temp_object['value'] = this.fileName;\n                temp_object['label'] = this.fileName;\n                temp_object['children'] = [];\n                preview_options.push(temp_object);\n\n              case 23:\n                _context14.next = 25;\n                return this.generatefileDownload(task_id, 1);\n\n              case 25:\n                generate_res = _context14.sent;\n\n                if (!this.generate_is_Zip) {\n                  _context14.next = 36;\n                  break;\n                }\n\n                generate_files_zip = new window.File([generate_res.data], this.fileName, {\n                  type: 'zip'\n                });\n                generate_files = new JSZip();\n                generate_names = [];\n                original_is_Zip = this.original_is_Zip;\n                _context14.next = 33;\n                return generate_files.loadAsync(generate_files_zip).then(function (generate_files_zip) {\n                  for (var i in generate_files.files) {\n                    generate_names.push(i);\n                  }\n\n                  if (original_is_Zip) {\n                    for (var i in orignal_names) {\n                      for (var j in generate_names) {\n                        if (generate_names[j].search(orignal_names[i]) != -1) {\n                          var temp_object = {};\n                          temp_object['value'] = generate_names[j];\n                          temp_object['label'] = generate_names[j];\n                          preview_options[i].children.push(temp_object);\n                        }\n                      }\n                    }\n                  } else {\n                    for (var j in generate_names) {\n                      var temp_object = {};\n                      temp_object['value'] = generate_names[j];\n                      temp_object['label'] = generate_names[j];\n                      preview_options[0].children.push(temp_object);\n                    }\n                  }\n                });\n\n              case 33:\n                this.generate_files_zip = generate_files_zip;\n                _context14.next = 40;\n                break;\n\n              case 36:\n                temp_object = {};\n                temp_object['value'] = this.fileName;\n                temp_object['label'] = this.fileName;\n                preview_options[0].children.push(temp_object);\n\n              case 40:\n                loading.close();\n                this.full_loading_flag = false;\n                this.previewDialogVisible = true;\n                this.$message.success('已获取文件列表，请选择需预览的文件！');\n                this.preview_options = preview_options;\n                this.loading = false;\n\n              case 46:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function point_cloud_preview(_x12) {\n        return _point_cloud_preview.apply(this, arguments);\n      }\n\n      return point_cloud_preview;\n    }(),\n    make_format_data: function make_format_data(points_name, pointscloud, flag) {\n      var _this2 = this;\n\n      var format_data = null;\n      var dot = points_name.lastIndexOf('.');\n\n      if (dot === -1) {\n        format_data = pointscloud.replaceAll('\\r\\n', '\\n').split('\\n'); // format_data = pointscloud.split('\\r\\n');\n\n        format_data.forEach(function (item) {\n          var arr = item.split(' ');\n\n          for (var k in arr) {\n            if (parseFloat(arr[k]) > _this2.maxAxisValue) {\n              _this2.maxAxisValue = parseFloat(arr[k]);\n            }\n\n            if (parseFloat(arr[k]) < _this2.minAxisValue) {\n              _this2.minAxisValue = parseFloat(arr[k]);\n            }\n          }\n\n          if ((arr.length === 3 || arr[3] === '') && !flag) {\n            if (arr.length === 3) {\n              arr.push('0');\n            } else if (arr[3] === '') {\n              arr[3] = '0';\n            }\n          } else if ((arr.length === 3 || arr[3] === '') && flag) {\n            if (arr.length === 3) {\n              arr.push('50');\n            } else if (arr[3] === '') {\n              arr[3] = '50';\n            }\n          }\n\n          if (!flag) {\n            _this2.originalPointCloudData.push(arr);\n          } else {\n            _this2.generatePointCloudData.push(arr);\n          }\n        });\n        return;\n      }\n\n      var data_type = points_name.substr(dot);\n\n      if (data_type === '.ply') {\n        format_data = pointscloud.replaceAll('\\r\\n', '\\n').split('\\n'); // format_data = pointscloud.split('\\r\\n');\n\n        var end_header_index = -1;\n\n        for (var i in format_data) {\n          if (format_data[i] === 'end_header') {\n            end_header_index = i;\n          }\n        }\n\n        format_data = format_data.splice(parseInt(end_header_index) + 1, format_data.length - parseInt(end_header_index) - 1);\n        format_data.forEach(function (item) {\n          var arr = item.split(' ');\n\n          for (var k in arr) {\n            if (parseFloat(arr[k]) > _this2.maxAxisValue) {\n              _this2.maxAxisValue = parseFloat(arr[k]);\n            }\n\n            if (parseFloat(arr[k]) < _this2.minAxisValue) {\n              _this2.minAxisValue = parseFloat(arr[k]);\n            }\n          }\n\n          if ((arr.length === 3 || arr[3] === '') && !flag) {\n            if (arr.length === 3) {\n              arr.push('0');\n            } else if (arr[3] === '') {\n              arr[3] = '0';\n            }\n          } else if ((arr.length === 3 || arr[3] === '') && flag) {\n            if (arr.length === 3) {\n              arr.push('50');\n            } else if (arr[3] === '') {\n              arr[3] = '50';\n            }\n          }\n\n          if (!flag) {\n            _this2.originalPointCloudData.push(arr);\n          } else {\n            _this2.generatePointCloudData.push(arr);\n          }\n        });\n      } else if (data_type === '.txt') {} else if (data_type === '.bin') {}\n    },\n    get_preview: function get_preview() {\n      var myChart = echarts.init(document.getElementById('preview'));\n      this.option = {\n        title: {\n          text: '点云生成预览'\n        },\n        tooltip: {\n          show: false,\n          showCcontant: true,\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        legend: {\n          type: 'plain',\n          data: ['original_data', 'generate_data'],\n          top: '10%'\n        },\n        grid3D: {\n          containLabel: true,\n          viewControl: {\n            projection: 'orthographic'\n          }\n        },\n        xAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        yAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        zAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        visualMap: {\n          show: false,\n          calculable: true,\n          max: 50,\n          min: -0,\n          range: [-200, 200],\n          inRange: {\n            symbolSize: 2,\n            color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n          }\n        },\n        series: [{\n          name: 'original_data',\n          type: 'scatter3D',\n          data: this.originalPointCloudData,\n          encode: {\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }, {\n          name: 'generate_data',\n          type: 'scatter3D',\n          data: this.generatePointCloudData,\n          encode: {\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }]\n      };\n      myChart.setOption(this.option);\n      var myChart_original = echarts.init(document.getElementById('preview_original'));\n      this.option_original = {\n        title: {\n          text: '原始图'\n        },\n        tooltip: {\n          show: false,\n          showCcontant: true,\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid3D: {\n          containLabel: true,\n          viewControl: {\n            projection: 'orthographic'\n          }\n        },\n        xAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        yAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        zAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        visualMap: {\n          show: false,\n          calculable: true,\n          max: 50,\n          min: -0,\n          range: [-200, 200],\n          inRange: {\n            symbolSize: 2,\n            color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n          }\n        },\n        series: [{\n          name: 'original_data',\n          type: 'scatter3D',\n          data: this.originalPointCloudData,\n          encode: {\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }]\n      };\n      myChart_original.setOption(this.option_original);\n      var myChart_generate = echarts.init(document.getElementById('preview_generate'));\n      this.option_generate = {\n        title: {\n          text: '生成图'\n        },\n        tooltip: {\n          show: true,\n          showCcontant: true,\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid3D: {\n          containLabel: true,\n          viewControl: {\n            projection: 'orthographic'\n          }\n        },\n        xAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        yAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        zAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        visualMap: {\n          show: false,\n          calculable: true,\n          max: 50,\n          min: -0,\n          range: [-200, 200],\n          inRange: {\n            symbolSize: 2,\n            color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n          }\n        },\n        series: [{\n          name: 'generate_data',\n          type: 'scatter3D',\n          data: this.generatePointCloudData,\n          encode: {\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }]\n      };\n      myChart_generate.setOption(this.option_generate);\n    },\n    previewHandleChange: function () {\n      var _previewHandleChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n        var original_points_name, generate_points_name, original_pointscloud, generate_pointscloud, original_files, generate_files, reader, me;\n        return regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                this.originalPointCloudData = [];\n                this.generatePointCloudData = [];\n                original_points_name = this.preview_value[0];\n                generate_points_name = this.preview_value[1];\n                original_pointscloud = null;\n                generate_pointscloud = null;\n\n                if (!this.original_is_Zip) {\n                  _context20.next = 17;\n                  break;\n                }\n\n                original_files = new JSZip();\n                _context20.next = 10;\n                return original_files.loadAsync(this.original_files_zip).then( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(file) {\n                    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                      while (1) {\n                        switch (_context15.prev = _context15.next) {\n                          case 0:\n                            _context15.next = 2;\n                            return original_files.file(original_points_name).async('string').then(function (content) {\n                              original_pointscloud = content;\n                            });\n\n                          case 2:\n                          case \"end\":\n                            return _context15.stop();\n                        }\n                      }\n                    }, _callee15);\n                  }));\n\n                  return function (_x13) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 10:\n                this.make_format_data(original_points_name, original_pointscloud, 0);\n                generate_files = new JSZip();\n                _context20.next = 14;\n                return generate_files.loadAsync(this.generate_files_zip).then( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(generate_files_zip) {\n                    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                      while (1) {\n                        switch (_context16.prev = _context16.next) {\n                          case 0:\n                            _context16.next = 2;\n                            return generate_files.file(generate_points_name).async('string').then(function (content) {\n                              generate_pointscloud = content;\n                            });\n\n                          case 2:\n                          case \"end\":\n                            return _context16.stop();\n                        }\n                      }\n                    }, _callee16);\n                  }));\n\n                  return function (_x14) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n\n              case 14:\n                this.make_format_data(generate_points_name, generate_pointscloud, 1);\n                _context20.next = 21;\n                break;\n\n              case 17:\n                reader = new FileReader();\n                reader.readAsText(this.original_blob);\n                me = this;\n                reader.onload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n                  var original_content, generate_files, reader2;\n                  return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                    while (1) {\n                      switch (_context19.prev = _context19.next) {\n                        case 0:\n                          original_content = this.result;\n                          me.make_format_data(me.preview_options[0].value, original_content, 0);\n\n                          if (!me.generate_is_Zip) {\n                            _context19.next = 10;\n                            break;\n                          }\n\n                          generate_files = new JSZip();\n                          _context19.next = 6;\n                          return generate_files.loadAsync(me.generate_files_zip).then( /*#__PURE__*/function () {\n                            var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(generate_files_zip) {\n                              return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                                while (1) {\n                                  switch (_context17.prev = _context17.next) {\n                                    case 0:\n                                      _context17.next = 2;\n                                      return generate_files.file(generate_points_name).async('string').then(function (content) {\n                                        generate_pointscloud = content;\n                                      });\n\n                                    case 2:\n                                    case \"end\":\n                                      return _context17.stop();\n                                  }\n                                }\n                              }, _callee17);\n                            }));\n\n                            return function (_x15) {\n                              return _ref6.apply(this, arguments);\n                            };\n                          }());\n\n                        case 6:\n                          me.make_format_data(generate_points_name, generate_pointscloud, 1);\n                          me.get_preview();\n                          _context19.next = 13;\n                          break;\n\n                        case 10:\n                          reader2 = new FileReader();\n                          reader2.readAsText(this.generate_blob);\n                          reader2.onload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n                            var generate_content;\n                            return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                              while (1) {\n                                switch (_context18.prev = _context18.next) {\n                                  case 0:\n                                    generate_content = this.result;\n                                    me.make_format_data(me.preview_options[0].children.value, generate_content, 1);\n\n                                  case 2:\n                                  case \"end\":\n                                    return _context18.stop();\n                                }\n                              }\n                            }, _callee18, this);\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context19.stop();\n                      }\n                    }\n                  }, _callee19, this);\n                }));\n\n              case 21:\n                console.log('this.originalPointCloudData:', this.originalPointCloudData);\n                console.log('this.generatePointCloudData:', this.generatePointCloudData); // this.generatePointCloudData = [];\n\n                this.get_preview();\n\n              case 24:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function previewHandleChange() {\n        return _previewHandleChange.apply(this, arguments);\n      }\n\n      return previewHandleChange;\n    }(),\n    handleClose: function handleClose(done) {\n      var _this3 = this;\n\n      this.$confirm('确认关闭？').then(function (_) {\n        _this3.previewDialogVisible = false;\n        _this3.fileName = '';\n        _this3.preview_value = [];\n        _this3.preview_options = [];\n        _this3.previewDialogVisible = false;\n        _this3.loading = true;\n        _this3.original_files_zip = null;\n        _this3.generate_files_zip = null;\n        _this3.originalPointCloudData = [];\n        _this3.generatePointCloudData = [];\n        _this3.maxAxisValue = -10000;\n        _this3.minAxisValue = 10000;\n      }).catch(function (_) {});\n    },\n    changeAxios_xz: function changeAxios_xz() {\n      for (var i in this.originalPointCloudData) {\n        var _ref8 = [this.originalPointCloudData[i][2], this.originalPointCloudData[i][0]];\n        this.originalPointCloudData[i][0] = _ref8[0];\n        this.originalPointCloudData[i][2] = _ref8[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref9 = [this.generatePointCloudData[i][2], this.generatePointCloudData[i][0]];\n        this.generatePointCloudData[i][0] = _ref9[0];\n        this.generatePointCloudData[i][2] = _ref9[1];\n      }\n\n      this.get_preview();\n    },\n    changeAxios_yz: function changeAxios_yz() {\n      for (var i in this.originalPointCloudData) {\n        var _ref10 = [this.originalPointCloudData[i][2], this.originalPointCloudData[i][1]];\n        this.originalPointCloudData[i][1] = _ref10[0];\n        this.originalPointCloudData[i][2] = _ref10[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref11 = [this.generatePointCloudData[i][2], this.generatePointCloudData[i][1]];\n        this.generatePointCloudData[i][1] = _ref11[0];\n        this.generatePointCloudData[i][2] = _ref11[1];\n      }\n\n      this.get_preview();\n    },\n    changeAxios_xy: function changeAxios_xy() {\n      for (var i in this.originalPointCloudData) {\n        var _ref12 = [this.originalPointCloudData[i][1], this.originalPointCloudData[i][0]];\n        this.originalPointCloudData[i][0] = _ref12[0];\n        this.originalPointCloudData[i][1] = _ref12[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref13 = [this.generatePointCloudData[i][1], this.generatePointCloudData[i][0]];\n        this.generatePointCloudData[i][0] = _ref13[0];\n        this.generatePointCloudData[i][1] = _ref13[1];\n      }\n\n      this.get_preview();\n    },\n    // >>>>>>>>>>表格空白部分填充>>>>>>>>>>>>>>>>\n    isBlank_num: function isBlank_num(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '-- --';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      return value;\n    },\n    isBlank_start: function isBlank_start(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '未开始';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n      return value;\n    },\n    isBlank_end: function isBlank_end(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '未结束';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n      return value;\n    }\n  }\n};",{"version":3,"sources":["Lidar_A_AugTaskList.vue"],"names":[],"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","sourcesContent":["<template>\n    <div>\n        <el-card>\n            <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n                <el-tab-pane label=\"Your Tasks\" name=\"self\">\n                    <el-row :gutter=\"20\" class=\"search\">\n                        <el-col :span=\"20\">\n                            <el-form :inline=\"true\" :model=\"formInline_Self\" class=\"demo-form-inline\">\n                                <el-form-item label=\"Query Mode\">\n                                    <el-select\n                                        v-model=\"formInline_Self.searchType\"\n                                        clearable\n                                        placeholder=\"Please select query mode\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @clear=\"getTaskList_Self()\"\n                                        @change=\"pageReflash_Self()\"\n                                    >\n                                        <el-option label=\"Method\" value=\"生成方法\"></el-option>\n                                        <el-option label=\"Task Name\" value=\"任务名称\"></el-option>\n                                        <el-option label=\"Task id\" value=\"任务id\"></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item v-show=\"formInline_Self.searchType == '生成方法'\" label=\"Method\">\n                                    <el-select\n                                        v-model=\"generate_func_self\"\n                                        placeholder=\"Please select method\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @change=\"\n                                            pageReflash_Self();\n                                            SearchTask_Self();\n                                        \"\n                                    >\n                                        <el-option\n                                            v-for=\"item in generate_func_list\"\n                                            :key=\"item.name\"\n                                            :label=\"item.name\"\n                                            :value=\"item.id\"\n                                        ></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item\n                                    label=\"Query Content\"\n                                    v-show=\"formInline_Self.searchType != '生成方法' && formInline_Self.searchType != ''\"\n                                >\n                                    <el-input\n                                        placeholder=\"Please enter the query content\"\n                                        v-model=\"formInline_Self.searchTaskInfo\"\n                                        clearable\n                                        @clear=\"handleSelectClear\"\n                                    >\n                                        <el-button\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(0);\n                                                pageReflash_Self();\n                                                SearchTask_Self();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>Precise</el-button\n                                        >\n                                        <el-button\n                                            v-if=\"formInline_Self.searchType != '任务id'\"\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(1);\n                                                pageReflash_Self();\n                                                SearchTask_Self();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>Fuzzy</el-button\n                                        >\n                                    </el-input>\n                                </el-form-item>\n                            </el-form>\n                        </el-col>\n                    </el-row>\n\n                    <v-table\n                        :taskList=\"this.taskList_Self\"\n                        :is_root=\"'0'\"\n                        :show_point_preview=\"1\"\n                        @getList=\"handleGetList\"\n                        @delete=\"removeTaskById\"\n                        @MethodDetail=\"MethodDetail\"\n                        @methodDialogClose=\"methodDialogClose\"\n                        @showEditDialog=\"showEditDialog\"\n                        @editDialogClosed=\"editDialogClosed\"\n                        @originalfileDownload=\"originalfileDownloadTemp\"\n                        @generatefileDownload=\"generatefileDownloadTemp\"\n                        @point_cloud_preview=\"point_cloud_preview\"\n                    ></v-table>\n\n                    <el-pagination\n                        @size-change=\"handleSizeChange_Self\"\n                        @current-change=\"handleCurrentChange_Self\"\n                        :current-page.sync=\"queryInfo_Self.page\"\n                        :page-size=\"10\"\n                        layout=\"prev, pager, next\"\n                        :total=\"total_Self\"\n                    >\n                    </el-pagination>\n                </el-tab-pane>\n                <el-tab-pane label=\"All user tasks\" name=\"all\" v-if=\"this.userRight === '超级管理员'\">\n                    <el-row :gutter=\"20\" class=\"search\">\n                        <el-col :span=\"20\">\n                            <el-form :inline=\"true\" :model=\"formInline_All\" class=\"demo-form-inline\">\n                                <el-form-item label=\"Query Mode\">\n                                    <el-select\n                                        v-model=\"formInline_All.searchType\"\n                                        placeholder=\"Please select query mode\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        clearable\n                                        @clear=\"\n                                            getTaskList_All();\n                                            clearSecondSelect_All();\n                                        \"\n                                        @change=\"pageReflash_All()\"\n                                    >\n                                        <el-option label=\"Method\" value=\"生成方法\"></el-option>\n                                        <el-option label=\"Task Name\" value=\"任务名称\"></el-option>\n                                        <el-option label=\"Task id\" value=\"任务id\"></el-option>\n                                        <el-option label=\"User id\" value=\"用户id\"></el-option>\n                                        <el-option label=\"User Name\" value=\"用户名\"></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item v-show=\"formInline_All.searchType == '生成方法'\" label=\"Method\">\n                                    <el-select\n                                        v-model=\"generate_func_all\"\n                                        placeholder=\"Please select method\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @change=\"\n                                            pageReflash_All();\n                                            getTaskList_All();\n                                        \"\n                                    >\n                                        <el-option\n                                            v-for=\"item in generate_func_list\"\n                                            :key=\"item.name\"\n                                            :label=\"item.name\"\n                                            :value=\"item.id\"\n                                        ></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item\n                                    v-show=\"formInline_All.searchType != '生成方法' && formInline_All.searchType != ''\"\n                                    label=\"Query Content\"\n                                >\n                                    <el-input\n                                        placeholder=\"Please enter the query content\"\n                                        v-model=\"formInline_All.searchTaskInfo\"\n                                        clearable\n                                        @clear=\"getTaskList_All\"\n                                    >\n                                        <el-button\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(0);\n                                                getTaskList_All();\n                                                pageReflash_All();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>Precise</el-button\n                                        >\n                                        <el-button\n                                            v-if=\"\n                                                formInline_All.searchType != '任务id' &&\n                                                    formInline_All.searchType != '用户id' &&\n                                                    formInline_All.searchType != '用户名'\n                                            \"\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(1);\n                                                getTaskList_All();\n                                                pageReflash_All();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>Fuzzy</el-button\n                                        >\n                                    </el-input>\n                                </el-form-item>\n                            </el-form>\n                        </el-col>\n                    </el-row>\n                    <v-table\n                        :taskList=\"this.taskList_All\"\n                        :is_root=\"'1'\"\n                        :show_point_preview=\"1\"\n                        @getList=\"handleGetList\"\n                        @delete=\"removeTaskById\"\n                        @MethodDetail=\"MethodDetail\"\n                        @methodDialogClose=\"methodDialogClose\"\n                        @showEditDialog=\"showEditDialog\"\n                        @editDialogClosed=\"editDialogClosed\"\n                        @originalfileDownload=\"originalfileDownloadTemp\"\n                        @generatefileDownload=\"generatefileDownloadTemp\"\n                        @point_cloud_preview=\"point_cloud_preview\"\n                    ></v-table>\n                    <el-pagination\n                        @size-change=\"handleSizeChange_All\"\n                        @current-change=\"handleCurrentChange_All\"\n                        :current-page.sync=\"queryInfo_All.page\"\n                        :page-size=\"10\"\n                        layout=\"prev, pager, next\"\n                        :total=\"total_All\"\n                    >\n                    </el-pagination>\n                </el-tab-pane>\n            </el-tabs>\n        </el-card>\n        <el-dialog title=\"编辑任务信息\" :visible.sync=\"editDialogSelfVisible\" width=\"50%\" @closed=\"editDialogClosed\">\n            <el-form :model=\"editForm_Self\" :rules=\"rulesList\" ref=\"editFormRef\" label-width=\"120px\" style=\"width: 90%\">\n                <el-form-item label=\"任务id\">\n                    <el-input v-model=\"editForm_Self.id\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"任务名\" prop=\"name\">\n                    <el-input v-model=\"editForm_Self.name\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"紧急等级\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.urgency_level\"></el-input> -->\n                    <el-slider v-model=\"editForm_Self.urgency_level\" :min=\"1\" :max=\"5\" :step=\"1\" :marks=\"mark_group.marks1_5\"> </el-slider>\n                </el-form-item>\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === 'FGSM-激光雷达'\" label=\"扰动幅度\" prop=\"epsilon\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.epsilon\"></el-input> -->\n                    <div class=\"block\" style=\"float: left; margin-right: 5px; width: 100%\">\n                        <!-- <el-input type=\"text\" v-model=\"form.epsilon\"></el-input> -->\n                        <el-form-item\n                            v-for=\"(domain, index) in editForm_Self.epsilon\"\n                            :label=\"'幅度' + (index + 1)\"\n                            :key=\"domain.key\"\n                            label-width=\"50px\"\n                        >\n                            <el-slider\n                                v-model=\"domain.value\"\n                                show-input\n                                :min=\"0.001\"\n                                :max=\"2\"\n                                :step=\"0.001\"\n                                :marks=\"mark_group.marks0001_2\"\n                            >\n                            </el-slider\n                            ><el-button @click.prevent=\"removeDomain(domain)\" style=\"margin-left: 20px\">删除</el-button>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button @click=\"addDomain()\">新增幅度</el-button>\n                            <el-button @click=\"resetForm('form')\">重置</el-button>\n                        </el-form-item>\n                    </div>\n                </el-form-item>\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-激光雷达'\" label=\"单步扰动幅度\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.ite_epsilon\"></el-input> -->\n                    <el-slider\n                        v-model=\"editForm_Self.ite_epsilon\"\n                        show-input\n                        :min=\"0.001\"\n                        :max=\"1\"\n                        :step=\"0.001\"\n                        :marks=\"mark_group.marks0001_1\"\n                    >\n                    </el-slider>\n                </el-form-item>\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === 'JSMA-激光雷达'\" label=\"单步扰动幅度\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.ite_epsilon\"></el-input> -->\n                    <el-slider\n                        v-model=\"editForm_Self.ite_epsilon\"\n                        show-input\n                        :min=\"0.001\"\n                        :max=\"2\"\n                        :step=\"0.001\"\n                        :marks=\"mark_group.marks0001_2\"\n                    >\n                    </el-slider>\n                </el-form-item>\n                <el-form-item\n                    v-if=\"\n                        this.editForm_Self.augmentation_method_name === 'JSMA-激光雷达' ||\n                            this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-激光雷达'\n                    \"\n                    label=\"扰动次数上限\"\n                >\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.ite_limit\"></el-input> -->\n                    <!-- :marks=\"mark_group.marks1_1000\" -->\n                    <el-slider\n                        v-if=\"this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-激光雷达'\"\n                        v-model=\"editForm_Self.ite_limit\"\n                        show-input\n                        :min=\"1\"\n                        :max=\"1000\"\n                        :step=\"1\"\n                        :marks=\"mark_group.marks1_1000\"\n                    >\n                    </el-slider>\n                    <!-- :marks=\"mark_group.marks1_15000\" -->\n                    <el-slider\n                        v-if=\"this.editForm_Self.augmentation_method_name === 'JSMA-激光雷达'\"\n                        v-model=\"editForm_Self.ite_limit\"\n                        show-input\n                        :min=\"1\"\n                        :max=\"15000\"\n                        :step=\"1\"\n                        :marks=\"mark_group.marks1_15000\"\n                    >\n                    </el-slider>\n                </el-form-item>\n                <el-form-item label=\"是否旋转\">\n                    <el-switch v-model=\"editForm_Self.whether_to_rotate\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                </el-form-item>\n                <el-form-item\n                    style=\"margin-right: 5px;\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === 'FGSM-激光雷达'\"\n                    label=\"单文件生成数量及参数\"\n                    prop=\"generate_per_file_and_params\"\n                >\n                    <!-- <el-input type=\"number\" v-model=\"editForm_Self.generate_per_file_and_params\"></el-input> -->\n                    <el-slider\n                        v-model=\"editForm_Self.generate_per_file_and_params\"\n                        show-input\n                        :min=\"1\"\n                        :max=\"100\"\n                        :step=\"1\"\n                        :marks=\"mark_group.marks1_100\"\n                    ></el-slider>\n                </el-form-item>\n                <el-form-item\n                    style=\"margin-right: 5px; width: 500px\"\n                    v-if=\"\n                        this.editForm_Self.augmentation_method_name === 'JSMA-激光雷达' ||\n                            this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-激光雷达'\n                    \"\n                    label=\"单文件生成数量\"\n                >\n                    <!-- <el-input type=\"number\" v-model=\"editForm_Self.generate_per_file\"></el-input> -->\n                    <el-slider\n                        v-model=\"editForm_Self.generate_per_file\"\n                        show-input\n                        :min=\"1\"\n                        :max=\"100\"\n                        :step=\"1\"\n                        :marks=\"mark_group.marks1_100\"\n                    ></el-slider>\n                </el-form-item>\n                <el-form-item label=\"严格模式\">\n                    <el-switch v-model=\"editForm_Self.strict_mode\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                </el-form-item>\n                <el-form-item\n                    v-if=\"this.editForm_Self.augmentation_method_name === 'JSMA-激光雷达'\"\n                    label=\"边界约束\"\n                    prop=\"boundary_constraint\"\n                >\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.boundary_constraint\"></el-input> -->\n                    <el-slider\n                        v-model=\"editForm_Self.boundary_constraint\"\n                        show-input\n                        :min=\"1\"\n                        :max=\"2\"\n                        :step=\"0.001\"\n                        :marks=\"mark_group.marks1_2\"\n                    >\n                    </el-slider>\n                </el-form-item>\n                <el-form-item label=\"重新上传文件\" prop=\"file\">\n                    <input type=\"file\" id=\"filetemp\" prop=\"editForm_Self.file\" /><br />\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"editDialogSelfVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"editTaskInfo\">确 定</el-button>\n            </span>\n        </el-dialog>\n        <!-- 任务详情对话框 -->\n        <el-dialog\n            title=\"Task Details\"\n            :visible.sync=\"methodDialogSelfVisible\"\n            width=\"50%\"\n            body-style=\"background-color: rgba(255, 255, 255, 0.6);\"\n            @close=\"methodDialogClose\"\n            destroy-on-close\n        >\n            <div class=\"user-info-list\">\n                Task id:\n                <span>{{ methodDetail.id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                Task Name:\n                <span>{{ methodDetail.name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                Urgency level:\n                <span>{{ methodDetail.urgency_level }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                Params:\n                <span>{{ methodDetail.params ? methodDetail.params : 'Nothing' }}</span>\n            </div>\n\n            <div class=\"user-info-list\">\n                Task Status:\n                <span>{{ methodDetail.task_status }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                Upload the original file:\n                <span>{{ methodDetail.task_have_origin_file ? 'Yes' : 'No' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                Generated the augmentation file:\n                <span>{{ methodDetail.task_have_generate_file ? 'Yes' : 'No' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                Generated Data:\n                <span>{{ methodDetail.generate_data_number ? methodDetail.generate_data_number : 'Nothing' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                Update time:\n                <span>{{ methodDetail.update_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                Start time:\n                <span>{{ methodDetail.start_datetime ? methodDetail.start_datetime : '未开始' | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                Completion time:\n                <span>{{ methodDetail.fin_datetime ? methodDetail.start_datetime : '未结束' | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                ID of the task creator:\n                <span>{{ methodDetail.master_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                Username of the task creator:\n                <span>{{ methodDetail.master_username }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                Nickname of the task creator:\n                <span>{{ methodDetail.master_nickname }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                User group of task Creator:\n                <span>{{ methodDetail.master_user_group }}</span>\n            </div>\n            <!-- <div class=\"user-info-list\">\n                任务所有者加入时间:\n                <span>{{ methodDetail.master_join_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者最近一次登录时间:\n                <span>{{ methodDetail.master_last_login_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者信息更新时间:\n                <span>{{ methodDetail.master_update_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法id:\n                <span>{{ methodDetail.augmentation_method_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法名称:\n                <span>{{ methodDetail.augmentation_method_name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法的细节、介绍等:\n                <span>{{ methodDetail.augmentation_method_details }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型id:\n                <span>{{ methodDetail.augmentation_type_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型名称:\n                <span>{{ methodDetail.augmentation_type_name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型的细节、介绍等:\n                <span>{{ methodDetail.augmentation_type_details }}</span>\n            </div> -->\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"taskException\" type=\"warning\">Mark task exception</el-button>\n                <el-button @click=\"methodDialogSelfVisible = false\">Close</el-button>\n            </span>\n        </el-dialog>\n        <el-dialog\n            title=\"Point cloud Preview\"\n            :visible.sync=\"previewDialogVisible\"\n            width=\"1300px\"\n            height=\"630px\"\n            :before-close=\"handleClose\"\n            center\n        >\n            <div v-loading=\"this.loading\" element-loading-text=\"Loading\" element-loading-spinner=\"el-icon-loading\" style=\"height: 600px\">\n                <div class=\"block\" v-if=\"!loading\">\n                    <span class=\"demonstration right\">Select the point cloud for comparison</span>\n                    <el-cascader\n                        v-model=\"preview_value\"\n                        :options=\"preview_options\"\n                        :props=\"{ expandTrigger: 'hover' }\"\n                        @change=\"previewHandleChange\"\n                        style=\"width: 800px\"\n                    ></el-cascader>\n                    <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"changeAxios_xz\">Exchange XZ </el-button>\n                    <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"changeAxios_xy\">Exchange XY </el-button>\n                    <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"changeAxios_yz\">Exchange YZ </el-button>\n                    <el-carousel trigger=\"click\" height=\"570px\">\n                        <el-carousel-item v-for=\"item in 2\" :key=\"item\">\n                            <div v-if=\"item == 1\" id=\"preview\" class=\"juzhog\"></div>\n                            <div v-if=\"item == 2\">\n                                <div id=\"preview_original\" class=\"view1\"></div>\n                                <div id=\"preview_generate\" class=\"view1\"></div>\n                            </div>\n                        </el-carousel-item>\n                    </el-carousel>\n                </div>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport * as echarts from 'echarts';\nimport 'echarts-gl';\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport vTable from './Table.vue';\nexport default {\n    data() {\n        const isNotNag_int = (rule, value, callback) => {\n            const boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n            if (value !== '0' && !boolean) {\n                callback(new Error('请输入非负整数'));\n            } else {\n                callback();\n            }\n        };\n        const generate_per_file_and_paramsRule = (rule, value, callback) => {\n            if (value < 1) {\n                callback(new Error('只能为大于等于1整数'));\n            } else {\n                callback();\n            }\n        };\n        const isNum = (rule, value, callback) => {\n            const age = /^[0-9]*$/;\n            if (!age.test(value)) {\n                callback(new Error('只能为非负数字'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag = (rule, value, callback) => {\n            if (value < 0) {\n                callback(new Error('只能为非负数'));\n            } else {\n                callback();\n            }\n        };\n        const epsilonRule = (rule, value, callback) => {\n            value = value.replace('[', '');\n            value = value.replace(']', '');\n            value = value.replace('，', ',');\n\n            var list = value.split(',');\n            for (var i in list) {\n                if (!typeof parseFloat(list[i]) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n                    callback(new Error('请填写合理的非负数字列表'));\n                } else {\n                    callback();\n                }\n            }\n        };\n        return {\n            mark_group: {\n                marks1_2: {\n                    1: '1',\n                    2: {\n                        style: {\n                            width: '10px'\n                        },\n                        label: '2'\n                    }\n                },\n                marks0001_2: {\n                    0.001: '0.001',\n                    2: {\n                        style: {\n                            width: '10px'\n                        },\n                        label: '2'\n                    }\n                },\n                marks0001_1: {\n                    0.001: '0.001',\n                    1: {\n                        style: {\n                            width: '10px'\n                        },\n                        label: '1'\n                    }\n                },\n                marks1_100: {\n                    1: '1',\n                    100: {\n                        style: {\n                            width: '30px'\n                        },\n                        label: '100'\n                    }\n                },\n                marks1_1000: {\n                    1: '1',\n                    1000: {\n                        style: {\n                            width: '40px'\n                        },\n                        label: '1000'\n                    }\n                },\n                marks1_15000: {\n                    1: '1',\n                    15000: {\n                        style: {\n                            width: '50px'\n                        },\n                        label: '15000'\n                    }\n                },\n                marks0_5: {\n                    0: '0',\n                    5: {\n                        style: {\n                            width: '10px'\n                        },\n                        label: '5'\n                    }\n                },\n                marks1_5: {\n                    1: '1',\n                    5: {\n                        style: {\n                            width: '10px'\n                        },\n                        label: '5'\n                    }\n                }\n            },\n            full_loading_flag: false,\n            generate_func_self: '',\n            generate_func_all: '',\n            generate_func_list: [],\n            queryInfo_Self: {\n                page: 1\n            },\n            taskList_Self: [],\n            total_Self: 0,\n            formInline_Self: {\n                searchType: '',\n                searchTaskInfo: ''\n            },\n            editDialogSelfVisible: false,\n            editForm_Self: {\n                task_id: 0,\n                master: this.$store.getters.userId,\n                name: '',\n                params: '',\n                file: {},\n                augmentation_method_name: ''\n            },\n            editFormSelfRules: {\n                name: [{ required: true, message: '请输入任务名', trigger: 'blur' }]\n            },\n            queryInfo_All: {\n                page: 1\n            },\n            taskList_All: [],\n            total_All: 0,\n            formInline_All: {\n                searchType: '',\n                searchTaskInfo: ''\n            },\n            editDialogAllVisible: false,\n            editForm_All: {},\n            editFormAllRules: {\n                name: [{ required: true, message: '请输入任务名', trigger: 'blur' }]\n            },\n            FuzzySearch: 1,\n            activeName: 'self',\n            taskList_All: [],\n            userRight: '',\n            methodDialogSelfVisible: false,\n            methodDetail: [],\n            mohu: true,\n            fileName: '',\n            preview_value: [],\n            preview_options: [],\n            previewDialogVisible: false,\n            loading: true,\n            original_files_zip: null,\n            generate_files_zip: null,\n            originalPointCloudData: [],\n            generatePointCloudData: [],\n            maxAxisValue: -10000,\n            minAxisValue: 10000,\n            original_is_Zip: false,\n            generate_is_Zip: false,\n            original_fileContent: '',\n            generate_fileContent: '',\n            original_blob: null,\n            generate_blob: null,\n            test_text: 'djshdkjdhkadh',\n            change_axios_buttom: false,\n            editForm: {},\n            rules1: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: epsilonRule, trigger: 'blur' }\n                ],\n                generate_per_file_and_params: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            rules2: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            rules3: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                boundary_constraint: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            picture: 'https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg'\n        };\n    },\n    components: {\n        vTable\n    },\n    computed: {\n        rulesList: function() {\n            if (this.editForm_Self.augmentation_method_name === 'FGSM') {\n                return this.rules1;\n            } else if (this.editForm_Self.augmentation_method_name === 'JSMA') {\n                return this.rules3;\n            } else {\n                return this.rules2;\n            }\n        }\n    },\n    created() {\n        this.userRight = window.sessionStorage.getItem('user_group_name');\n\n        this.getTaskList_Self();\n    },\n    async mounted() {\n        this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n        let data = await this.$http.get('/augmentation_method/?augmentation_type=1');\n        // ?id=1\n        console.log('data:', data);\n        this.generate_func_list = data.data.data;\n        console.log('this.generate_func_list:', this.generate_func_list);\n    },\n    methods: {\n        // >>>>>>>>>el-tab部分>>>>>>>>>>>>>>>.\n        handleClick(tab, event) {\n            if (tab.index === '1') {\n                this.getTaskList_All();\n            }\n        },\n        // >>>>>>>>>>>>>获取任务列表以及查询部分>>>>>>>>>>>>>>>\n        // 获取子组件getList指令\n        handleSelectClear() {\n            this.getTaskList_Self();\n            this.generate_func_self = '';\n        },\n        handleGetList(data) {\n            if (!data) {\n                this.getTaskList_Self();\n            } else {\n                this.getTaskList_All();\n            }\n        },\n        async getTaskList_Self() {\n            // const { data: data } = await this.$http.get('/task/self/search/' + '?page=' + this.queryInfo_Self.page);\n            const { data: data } = await this.$http.get(\n                '/task/augmentation_type/search/?augmentation_type=1&page=' + this.queryInfo_Self.page\n            );\n\n            if (data.code !== 20000) {\n                if (data.code === 40400) {\n                    console.log('data:', data);\n                    this.taskList_Self = [];\n                    this.totalPageNum = 0;\n                    this.total_Self = 0;\n                    return this.$message.error('本用户未添加任务！');\n                }\n\n                return this.$message.error('获取本用户任务列表失败！');\n            }\n\n            this.taskList_Self = data.data.details;\n\n            this.totalPageNum = data.data.pages;\n            // if (this.queryInfo_Self.page > this.totalPageNum) {\n            //     this.queryInfo_Self.page = this.totalPageNum;\n            // }\n            console.log('this.taskList_Self:', this.taskList_Self);\n\n            this.total_Self = this.totalPageNum * 10;\n        },\n        async SearchTask_Self() {\n            if (this.formInline_Self.searchType === '') {\n                return this.$message.error('请输入查询方式！');\n            }\n            var flag = 0;\n            var search_params = '';\n            if (this.formInline_Self.searchType === '生成方法') {\n                // search_params = '/task/augmentation_method/search/?augmentation_method=' + this.formInline_Self.searchTaskInfo;\n                search_params =\n                    '/task/augmentation_method/search/?augmentation_method=' +\n                    this.generate_func_self +\n                    '&page=' +\n                    this.queryInfo_Self.page;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                console.log('this.queryInfo_Self.page:', this.queryInfo_Self.page);\n            } else {\n                if (this.formInline_Self.searchTaskInfo === '') {\n                    return this.$message.error('请输入搜索内容！');\n                }\n\n                if (this.formInline_Self.searchType === '任务名称') {\n                    console.log('this.queryInfo_Self.page:', this.queryInfo_Self.page);\n                    search_params =\n                        '/task/name/search/?augmentation_type=1&task_name=' +\n                        this.formInline_Self.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch +\n                        '&page=' +\n                        this.queryInfo_Self.page;\n                } else {\n                    search_params =\n                        '/task/id/search/?augmentation_type=1&task_id=' +\n                        this.formInline_Self.searchTaskInfo +\n                        '&page=' +\n                        this.queryInfo_Self.page;\n                    //  +\n                    // '&search_type=' +\n                    // this.FuzzySearch;\n                }\n            }\n            const { data: data } = await this.$http.get(search_params);\n            console.log('data:', data);\n            if (data.code !== 20000) {\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return this.$message.error('未搜索到该任务！');\n            }\n            if (this.formInline_Self.searchType === '任务id') {\n                flag = 1;\n                this.taskList_Self = [];\n                this.taskList_Self.push(data.data);\n            } else {\n                this.taskList_Self = data.data.details;\n            }\n            console.log('data:', data);\n            // this.total_Self = this.taskList_Self ? this.taskList_Self.length : 0;\n            this.totalPageNum = data.data.pages;\n            // if (this.queryInfo_Self.page > this.totalPageNum) {\n            //     this.queryInfo_Self.page = this.totalPageNum;\n            // }\n            this.total_Self = this.totalPageNum * 10;\n            this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n            if (flag) {\n                this.total_Self = this.taskList_Self.length;\n            }\n        },\n        // 获取所有用户任务列表\n        async getTaskList_All() {\n            console.log('this.generate_func_all:', this.generate_func_all);\n            console.log('this.formInline_All.searchType:', this.formInline_All.searchType);\n            if (\n                this.formInline_All.searchType !== '生成方法' &&\n                (this.formInline_All.searchType === '' || this.formInline_All.searchTaskInfo === '')\n            ) {\n                // const { data: data } = await this.$http.get('task/all/admin/search/' + '?page=' + this.queryInfo_All.page);\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/?augmentation_type=1&page=' + this.queryInfo_All.page\n                );\n                if (data.code == 40400) {\n                    console.log('data:', data);\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('所有用户都未添加任务！');\n                }\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取任务列表失败[所有用户]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '用户id') {\n                console.log('this.formInline_All.searchTaskInfo:', this.formInline_All.searchTaskInfo);\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/' +\n                        '?augmentation_type=1&page=' +\n                        this.queryInfo_All.page +\n                        '&user_id=' +\n                        this.formInline_All.searchTaskInfo\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取任务列表失败[用户id]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '任务名称') {\n                const { data: data } = await this.$http.get(\n                    '/task/name/admin/search/' +\n                        '?augmentation_type=1&page=' +\n                        this.queryInfo_All.page +\n                        '&task_name=' +\n                        this.formInline_All.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch\n                );\n                console.log('data:', data);\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[任务名称]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '任务id') {\n                const { data: data } = await this.$http.get(\n                    '/task/id/admin/search/' +\n                        '?augmentation_type=1&page=' +\n                        this.queryInfo_All.page +\n                        '&task_id=' +\n                        this.formInline_All.searchTaskInfo\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[任务id]！' + '错误原因：' + data.msg);\n                }\n                console.log('data:', data);\n                console.log('this.taskList_All:', this.taskList_All);\n                this.taskList_Self = [];\n                this.taskList_Self.push(data.data.details);\n                this.totalPageNum = data.data.pages;\n                // this.total_All = this.taskList_All;\n                this.total_All = this.taskList_All.length;\n            } else if (this.formInline_All.searchType === '生成类型id') {\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/' +\n                        '?page=' +\n                        this.queryInfo_All.page +\n                        '&augmentation_type=' +\n                        this.formInline_All.searchTaskInfo\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[生成类型]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType == '生成方法') {\n                console.log('here,this.generate_func_all22222:', this.generate_func_all);\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_method/admin/search/' +\n                        '?page=' +\n                        this.queryInfo_All.page +\n                        '&augmentation_method=' +\n                        this.generate_func_all\n                );\n                console.log('data:', data);\n                if (data.code !== 20000) {\n                    console.log('data:', data);\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[生成方法]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '用户名') {\n                console.log('username:', this.formInline_All.searchTaskInfo);\n                const { data: data } = await this.$http.get(\n                    '/task/master/admin/search/' +\n                        '?augmentation_type=1&page=' +\n                        this.queryInfo_All.page +\n                        '&username=' +\n                        this.formInline_All.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch\n                );\n                console.log('data:', data);\n                if (data.code !== 20000) {\n                    return this.$message.error('获取任务列表失败[用户名]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                console.log('this.taskList_All:', this.taskList_All);\n                this.total_All = this.totalPageNum * 10;\n            }\n            // console.log('data:', data);\n        },\n        async generate_change(type) {\n            if (type == '本用户') {\n                let search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                const { data: data } = await this.$http.get(search_params);\n                if (data.code !== 20000) {\n                    this.taskList_Self = [];\n                    this.total_Self = 0;\n                    return this.$message.error('未搜索到该任务！');\n                }\n                console.log('data:', data);\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n                console.log('this.total_Self:', this.total_Self);\n                console.log('this.totalPageNum:', this.totalPageNum);\n            } else {\n                let search_params = '/task/augmentation_method/admin/search/?augmentation_method=' + this.generate_func_all;\n                const { data: data } = await this.$http.get(search_params);\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.total_All = 0;\n                    return this.$message.error('未搜索到该任务！');\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                this.total_All = this.total_All ? this.taskList_All.length : 0;\n            }\n        },\n        // 是否启用模糊搜索\n        isFuzzySearch(flag) {\n            this.FuzzySearch = flag;\n            console.log('this.FuzzySearch:', this.FuzzySearch);\n        },\n        // 清空二级搜索框\n        clearSecondSelect_All() {\n            this.generate_func_all = '';\n            this.formInline_All.searchTaskInfo = '';\n        },\n        clearSecondSelect_Self() {\n            this.generate_func_self = '';\n            this.formInline_Self.searchTaskInfo = '';\n        },\n        // >>>>>>>>>>分页部分>>>>>>>>>>>>>>>>>>>\n        handleSizeChange_Self(newSize) {\n            this.queryInfo_Self.pagesize = newSize;\n            console.log('newSize-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n            console.log('newSize-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n            this.getTaskList_Self();\n        },\n        handleCurrentChange_Self(newPage) {\n            this.queryInfo_Self.page = newPage;\n            console.log('newPage-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n            console.log('newPage-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n\n            if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                this.getTaskList_Self();\n            } else {\n                this.SearchTask_Self();\n            }\n        },\n        handleSizeChange_All(newSize) {\n            this.queryInfo_All.pagesize = newSize;\n            console.log('newSize-this.formInline_All.searchType:', this.formInline_All.searchType);\n            console.log('newSize-this.queryInfo_All.page:', this.queryInfo_All.page);\n            this.getTaskList_All();\n        },\n        handleCurrentChange_All(newPage) {\n            this.queryInfo_All.page = newPage;\n            console.log('newPage-this.formInline_All.searchType:', this.formInline_All.searchType);\n            console.log('newPage-this.queryInfo_All.page:', this.queryInfo_All.page);\n            this.getTaskList_All();\n            // if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n            //     this.getTaskList_All();\n            // } else {\n            //     this.SearchTask_All();\n            // }\n            // this.queryInfo_All.page = newPage;\n            // this.getTaskList_All();\n        },\n        pageReflash_All() {\n            this.queryInfo_All.page = 1;\n        },\n        pageReflash_Self() {\n            this.queryInfo_Self.page = 1;\n        },\n        // >>>>>>>>>>>>>下载文件部分>>>>>>>>>>>>>>\n        originalfileDownloadTemp(data) {\n            var task_id = data['task_id'];\n            var flag = data['flag'];\n            this.originalfileDownload(task_id, flag);\n        },\n        async originalfileDownload(task_id, flag) {\n            const loading = this.full_loading_flag\n                ? ''\n                : this.$loading({\n                      lock: true,\n                      text: 'Loading',\n                      spinner: 'el-icon-loading',\n                      background: 'rgba(0, 0, 0, 0.7)'\n                  });\n            this.original_fileContent = '';\n            const data = await this.$http.get('/task/file/?task_id=' + task_id + '&file_type=0&format=json', {\n                responseType: 'blob',\n                headers: { 'Content-Type': 'application/json; application/octet-stream' }\n            });\n\n            console.log('data:', data);\n\n            var file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n            this.fileName = file_name1[file_name1.length - 1];\n            this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n            var dot = this.fileName.lastIndexOf('.');\n            this.original_is_Zip = false;\n            if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                this.original_is_Zip = true;\n            } else {\n                this.original_blob = data.data;\n            }\n            if (!this.full_loading_flag) {\n                loading.close();\n            }\n            if (!flag) {\n                fileDownload(data.data, this.fileName);\n            }\n            return data;\n        },\n        generatefileDownloadTemp(data) {\n            var task_id = data['task_id'];\n            var flag = data['flag'];\n            this.generatefileDownload(task_id, flag);\n        },\n        async generatefileDownload(task_id, flag) {\n            const loading = this.full_loading_flag\n                ? ''\n                : this.$loading({\n                      lock: true,\n                      text: 'Loading',\n                      spinner: 'el-icon-loading',\n                      background: 'rgba(0, 0, 0, 0.7)'\n                  });\n            const data = await this.$http.get('/task/file/?task_id=' + task_id + '&file_type=1&format=json', {\n                responseType: 'blob',\n                headers: { 'Content-Type': 'application/json; application/octet-stream' }\n            });\n            var file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n            this.fileName = file_name1[file_name1.length - 1];\n            this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n\n            var dot = this.fileName.lastIndexOf('.');\n            this.generate_is_Zip = false;\n            if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                this.generate_is_Zip = true;\n            } else {\n                this.generate_blob = data.data;\n            }\n            if (!this.full_loading_flag) {\n                loading.close();\n            }\n            if (!flag) {\n                fileDownload(data.data, this.fileName);\n            }\n            return data;\n        },\n        // >>>>>>>>>>>>操作按钮部分>>>>>>>>>>>>>\n        async removeTaskById(task_id) {\n            const confirmResult = await this.$confirm('此操作将永久删除该任务, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).catch(err => err);\n            if (confirmResult !== 'confirm') {\n                return this.$message.info('已取消删除');\n            }\n            const { data: data } = await this.$http.delete('/task/?task_id=' + task_id);\n            if (data.code !== 20000) {\n                return this.$message.error('删除任务失败！' + '错误原因：' + data.msg);\n            }\n            this.$message.success('删除任务成功！');\n            if (this.activeName === 'self') {\n                this.queryInfo_Self.page = 1;\n                if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                    this.getTaskList_Self();\n                } else {\n                    this.SearchTask_Self();\n                }\n            } else {\n                this.queryInfo_All.page = 1;\n                if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n                    this.getTaskList_All();\n                } else {\n                    this.SearchTask_All();\n                }\n            }\n        },\n        resetForm(formName) {\n            console.log('formName:', formName);\n            this.editForm_Self.epsilon = [\n                {\n                    value: 0\n                }\n            ];\n        },\n        removeDomain(item) {\n            if (this.editForm_Self.epsilon.length == 1) {\n                this.$message.error('扰动幅度不可为空!');\n            } else {\n                var item_index = this.editForm_Self.epsilon.indexOf(item);\n                if (item_index !== -1) {\n                    this.editForm_Self.epsilon.splice(item_index, 1);\n                }\n            }\n        },\n        addDomain() {\n            this.editForm_Self.epsilon.push({\n                value: 0,\n                key: Date.now()\n            });\n        },\n        async showEditDialog(row) {\n            this.editForm_Self = JSON.parse(JSON.stringify(row));\n            console.log('this.editForm_Self:', this.editForm_Self);\n            this.editForm_Self.params = JSON.parse(row.params);\n            for (var i in this.editForm_Self.params) {\n                this.$set(this.editForm_Self, i, this.editForm_Self.params[i]);\n            }\n            this.editForm_Self.urgency_level = this.editForm_Self.urgency_level;\n            if (this.editForm_Self.augmentation_method_name === 'FGSM-激光雷达') {\n                this.editForm_Self.generate_per_file_and_params = parseInt(this.editForm_Self.generate_per_file_and_params);\n            } else if (\n                this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-激光雷达' ||\n                this.editForm_Self.augmentation_method_name === 'JSMA-激光雷达'\n            ) {\n                this.editForm_Self.generate_per_file = parseInt(this.editForm_Self.generate_per_file);\n                this.editForm_Self.ite_epsilon = parseFloat(this.editForm_Self.ite_epsilon);\n                this.editForm_Self.boundary_constraint = parseFloat(this.editForm_Self.boundary_constraint);\n                this.editForm_Self.ite_limit = parseInt(this.editForm_Self.ite_limit);\n            }\n\n            this.editForm_Self.whether_to_rotate = this.editForm_Self.whether_to_rotate === '1' ? true : false;\n            this.editForm_Self.strict_mode = this.editForm_Self.strict_mode === '1' ? true : false;\n\n            if (this.editForm_Self.augmentation_method_name === 'FGSM-激光雷达') {\n                console.log('this.editForm_Self.epsilon:', this.editForm_Self.epsilon);\n                var temp_array = this.editForm_Self.epsilon\n                    .replace('[', '')\n                    .replace(']', '')\n                    .split(',');\n                console.log('temp_array:', temp_array);\n                var temp = [];\n                for (var i in temp_array) {\n                    var temp_item = {};\n                    temp_item.value = parseFloat(temp_array[i]);\n                    temp.push(temp_item);\n                }\n                console.log('temp:', temp);\n                this.editForm_Self.epsilon = temp;\n                // this.editForm_Self.epsilon = this.editForm_Self.epsilon;\n            }\n\n            this.editDialogSelfVisible = true;\n        },\n        editDialogClosed() {\n            this.editForm_Self = {\n                task_id: 0,\n                master: this.$store.getters.userId,\n                name: '',\n                params: '',\n                file: {},\n                augmentation_method_name: ''\n            };\n        },\n        async editTaskInfo() {\n            this.editForm_Self.master = this.$store.state.userId;\n            // if (this.editForm_Self.epsilon) {\n            //     this.editForm_Self.epsilon = this.editForm_Self.epsilon.replace('，', ',');\n            // }\n\n            var adddata = new FormData();\n            adddata.append('task_id', this.editForm_Self.id);\n            adddata.append('name', this.editForm_Self.name);\n            adddata.append('master', this.editForm_Self.master);\n\n            adddata.append('urgency_level', this.editForm_Self.urgency_level + '');\n            var temp_params = {};\n\n            if (this.editForm_Self.augmentation_method_name === 'FGSM-激光雷达') {\n                console.log('here');\n                var temp = [];\n                for (var x in this.editForm_Self.epsilon) {\n                    console.log('this.editForm_Self.epsilon[x][\"value\"]:', this.editForm_Self.epsilon[x]['value']);\n                    temp.push(this.editForm_Self.epsilon[x]['value']);\n                }\n                temp_params.epsilon = '[' + temp.toString() + ']';\n                console.log('temp_params.epsilon:', temp_params.epsilon);\n                temp_params = {\n                    epsilon: temp_params.epsilon,\n                    whether_to_rotate: this.editForm_Self.whether_to_rotate,\n                    generate_per_file_and_params: this.editForm_Self.generate_per_file_and_params + '',\n                    strict_mode: this.editForm_Selfstrict_mode\n                };\n            } else if (this.editForm_Self.augmentation_method_name === 'I-FGSM(BIM)-激光雷达') {\n                temp_params = {\n                    ite_epsilon: this.editForm_Self.ite_epsilon + '',\n                    ite_limit: this.editForm_Self.ite_limit + '',\n                    whether_to_rotate: this.editForm_Self.whether_to_rotate,\n                    generate_per_file: this.editForm_Self.generate_per_file + '',\n                    strict_mode: this.editForm_Self.strict_mode\n                };\n            } else if (this.editForm_Self.augmentation_method_name === 'JSMA-激光雷达') {\n                temp_params = {\n                    ite_epsilon: this.editForm_Self.ite_epsilon + '',\n                    ite_limit: this.editForm_Self.ite_limit + '',\n                    whether_to_rotate: this.editForm_Self.whether_to_rotate,\n                    generate_per_file: this.editForm_Self.generate_per_file + '',\n                    boundary_constraint: this.editForm_Self.boundary_constraint + '',\n                    strict_mode: this.editForm_Self.strict_mode\n                };\n            }\n            temp_params.whether_to_rotate = this.editForm_Self.whether_to_rotate ? '1' : '0';\n            temp_params.strict_mode = this.editForm_Self.strict_mode ? '1' : '0';\n\n            temp_params = JSON.stringify(temp_params);\n\n            adddata.append('params', temp_params);\n            this.editForm_Self.file = document.getElementById('filetemp').files[0];\n            if (this.editForm_Self.file) {\n                adddata.append('file', this.editForm_Self.file);\n            }\n            for (var [a, b] of adddata.entries()) {\n                console.log(a, b);\n            }\n            const { data: data } = await this.$http({\n                url: '/task/',\n                data: adddata,\n                method: 'put'\n            });\n            if (data.code !== 20000) {\n                return this.$message.error('修改任务失败！' + '错误原因：' + data.msg);\n            }\n            this.$message.success('修改任务成功！');\n            this.editDialogSelfVisible = false;\n            this.$refs.editFormRef.resetFields();\n            this.editForm_Self.augmentation_type = '';\n            this.editForm_Self.augmentation_method = '';\n            this.editForm_Self.file = {};\n            this.getTaskList_Self();\n            this.getTaskList_All();\n        },\n        async getdata(reader, self) {\n            return (reader.onload = await function() {\n                self.fileContent = this.result;\n            });\n        },\n        // 标记任务异常\n        taskException() {\n            this.$confirm('是否确定将该任务标记成异常状态？')\n                .then(async _ => {\n                    var adddata = new FormData();\n                    adddata.append('task_id', this.methodDetail.id);\n                    const { data: data } = await this.$http({\n                        url: '/task/exception/',\n                        data: adddata,\n                        method: 'post'\n                    });\n                    if (data.code !== 20000) {\n                        return this.$message.error('添加生成任务失败！' + '错误原因：' + data.msg);\n                    }\n                    this.$message.success('标记成异常成功！');\n                    if (this.activeName === 'self') {\n                        if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                            this.getTaskList_Self();\n                        } else {\n                            this.SearchTask_Self();\n                        }\n                    } else {\n                        if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n                            this.getTaskList_All();\n                        } else {\n                            this.SearchTask_All();\n                        }\n                    }\n                })\n                .catch(_ => {});\n        },\n        //任务详情对话框\n        async MethodDetail(id) {\n            // id = data\n            console.log('this.methodDetail:', this.methodDetail);\n            this.methodDialogSelfVisible = true;\n            const { data: data } = await this.$http.get('/task/' + '?task_id=' + id);\n            console.log('data:', data);\n            if (data.code !== 20000) {\n                return this.$message.error('获取本用户任务详情失败！' + '错误原因：' + data.msg);\n            }\n\n            this.methodDetail = data.data;\n        },\n        methodDialogClose() {\n            console.log('this.methodDetail:', this.methodDetail);\n            this.methodDetail = [];\n        },\n        // >>>>>>>>>>点云预览部分>>>>>>>>>>>>>>>\n        // point_cloud_preview-previewHandleChange-make_format_data-get_preview\n        async point_cloud_preview(task_id) {\n            this.full_loading_flag = true;\n            const loading = this.$loading({\n                lock: true,\n                text: 'Loading',\n                spinner: 'el-icon-loading',\n                background: 'rgba(0, 0, 0, 0.7)'\n            });\n            console.log('loading:', loading);\n            console.log('this.$loading.lock:', this.$loading.lock);\n            // this.previewDialogVisible = true;\n            var preview_options = [];\n            var original_res = await this.originalfileDownload(task_id, 1);\n\n            if (this.original_is_Zip) {\n                let original_files_zip = new window.File([original_res.data], this.fileName, { type: 'zip' });\n\n                let original_files = new JSZip();\n                var orignal_names = [];\n                this.original_files_zip = original_files_zip;\n                let me = this;\n                await original_files.loadAsync(this.original_files_zip).then(function(zip) {\n                    for (var i in original_files.files) {\n                        var temp_object = {};\n                        orignal_names.push(i);\n                        temp_object['value'] = i;\n                        temp_object['label'] = i;\n                        temp_object['children'] = [];\n                        preview_options.push(temp_object);\n                    }\n\n                    me.original_files_zip = original_files_zip;\n                });\n            } else {\n                var temp_object = {};\n                temp_object['value'] = this.fileName;\n                temp_object['label'] = this.fileName;\n                temp_object['children'] = [];\n                preview_options.push(temp_object);\n            }\n            var generate_res = await this.generatefileDownload(task_id, 1);\n            if (this.generate_is_Zip) {\n                let generate_files_zip = new window.File([generate_res.data], this.fileName, { type: 'zip' });\n                var generate_files = new JSZip();\n                var generate_names = [];\n                var original_is_Zip = this.original_is_Zip;\n                await generate_files.loadAsync(generate_files_zip).then(function(generate_files_zip) {\n                    for (var i in generate_files.files) {\n                        generate_names.push(i);\n                    }\n\n                    if (original_is_Zip) {\n                        for (var i in orignal_names) {\n                            for (var j in generate_names) {\n                                if (generate_names[j].search(orignal_names[i]) != -1) {\n                                    var temp_object = {};\n                                    temp_object['value'] = generate_names[j];\n                                    temp_object['label'] = generate_names[j];\n\n                                    preview_options[i].children.push(temp_object);\n                                }\n                            }\n                        }\n                    } else {\n                        for (var j in generate_names) {\n                            var temp_object = {};\n                            temp_object['value'] = generate_names[j];\n                            temp_object['label'] = generate_names[j];\n                            preview_options[0].children.push(temp_object);\n                        }\n                    }\n                });\n                this.generate_files_zip = generate_files_zip;\n            } else {\n                var temp_object = {};\n                temp_object['value'] = this.fileName;\n                temp_object['label'] = this.fileName;\n                preview_options[0].children.push(temp_object);\n            }\n            loading.close();\n            this.full_loading_flag = false;\n            this.previewDialogVisible = true;\n            this.$message.success('已获取文件列表，请选择需预览的文件！');\n            this.preview_options = preview_options;\n\n            this.loading = false;\n        },\n        make_format_data(points_name, pointscloud, flag) {\n            var format_data = null;\n            var dot = points_name.lastIndexOf('.');\n            if (dot === -1) {\n                format_data = pointscloud.replaceAll('\\r\\n', '\\n').split('\\n');\n                // format_data = pointscloud.split('\\r\\n');\n                format_data.forEach(item => {\n                    let arr = item.split(' ');\n                    for (var k in arr) {\n                        if (parseFloat(arr[k]) > this.maxAxisValue) {\n                            this.maxAxisValue = parseFloat(arr[k]);\n                        }\n                        if (parseFloat(arr[k]) < this.minAxisValue) {\n                            this.minAxisValue = parseFloat(arr[k]);\n                        }\n                    }\n                    if ((arr.length === 3 || arr[3] === '') && !flag) {\n                        if (arr.length === 3) {\n                            arr.push('0');\n                        } else if (arr[3] === '') {\n                            arr[3] = '0';\n                        }\n                    } else if ((arr.length === 3 || arr[3] === '') && flag) {\n                        if (arr.length === 3) {\n                            arr.push('50');\n                        } else if (arr[3] === '') {\n                            arr[3] = '50';\n                        }\n                    }\n                    if (!flag) {\n                        this.originalPointCloudData.push(arr);\n                    } else {\n                        this.generatePointCloudData.push(arr);\n                    }\n                });\n\n                return;\n            }\n            var data_type = points_name.substr(dot);\n            if (data_type === '.ply') {\n                format_data = pointscloud.replaceAll('\\r\\n', '\\n').split('\\n');\n                // format_data = pointscloud.split('\\r\\n');\n                var end_header_index = -1;\n                for (var i in format_data) {\n                    if (format_data[i] === 'end_header') {\n                        end_header_index = i;\n                    }\n                }\n\n                format_data = format_data.splice(parseInt(end_header_index) + 1, format_data.length - parseInt(end_header_index) - 1);\n                format_data.forEach(item => {\n                    let arr = item.split(' ');\n                    for (var k in arr) {\n                        if (parseFloat(arr[k]) > this.maxAxisValue) {\n                            this.maxAxisValue = parseFloat(arr[k]);\n                        }\n                        if (parseFloat(arr[k]) < this.minAxisValue) {\n                            this.minAxisValue = parseFloat(arr[k]);\n                        }\n                    }\n                    if ((arr.length === 3 || arr[3] === '') && !flag) {\n                        if (arr.length === 3) {\n                            arr.push('0');\n                        } else if (arr[3] === '') {\n                            arr[3] = '0';\n                        }\n                    } else if ((arr.length === 3 || arr[3] === '') && flag) {\n                        if (arr.length === 3) {\n                            arr.push('50');\n                        } else if (arr[3] === '') {\n                            arr[3] = '50';\n                        }\n                    }\n                    if (!flag) {\n                        this.originalPointCloudData.push(arr);\n                    } else {\n                        this.generatePointCloudData.push(arr);\n                    }\n                });\n            } else if (data_type === '.txt') {\n            } else if (data_type === '.bin') {\n            }\n        },\n        get_preview() {\n            var myChart = echarts.init(document.getElementById('preview'));\n            this.option = {\n                title: {\n                    text: '点云生成预览'\n                },\n                tooltip: {\n                    show: false,\n                    showCcontant: true,\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        label: {\n                            backgroundColor: '#6a7985'\n                        }\n                    }\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                legend: {\n                    type: 'plain',\n                    data: ['original_data', 'generate_data'],\n                    top: '10%'\n                },\n                grid3D: {\n                    containLabel: true,\n                    viewControl: {\n                        projection: 'orthographic'\n                    }\n                },\n                xAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                yAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                zAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                visualMap: {\n                    show: false,\n                    calculable: true,\n                    max: 50,\n                    min: -0,\n                    range: [-200, 200],\n                    inRange: {\n                        symbolSize: 2,\n                        color: [\n                            '#313695',\n                            '#4575b4',\n                            '#74add1',\n                            '#abd9e9',\n                            '#e0f3f8',\n                            '#ffffbf',\n                            '#fee090',\n                            '#fdae61',\n                            '#f46d43',\n                            '#d73027',\n                            '#a50026'\n                        ]\n                    }\n                },\n                series: [\n                    {\n                        name: 'original_data',\n                        type: 'scatter3D',\n                        data: this.originalPointCloudData,\n                        encode: {\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    },\n                    {\n                        name: 'generate_data',\n                        type: 'scatter3D',\n                        data: this.generatePointCloudData,\n                        encode: {\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    }\n                ]\n            };\n            myChart.setOption(this.option);\n            var myChart_original = echarts.init(document.getElementById('preview_original'));\n            this.option_original = {\n                title: {\n                    text: '原始图'\n                },\n                tooltip: {\n                    show: false,\n                    showCcontant: true,\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        label: {\n                            backgroundColor: '#6a7985'\n                        }\n                    }\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                grid3D: {\n                    containLabel: true,\n                    viewControl: {\n                        projection: 'orthographic'\n                    }\n                },\n                xAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                yAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                zAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                visualMap: {\n                    show: false,\n                    calculable: true,\n                    max: 50,\n                    min: -0,\n                    range: [-200, 200],\n                    inRange: {\n                        symbolSize: 2,\n                        color: [\n                            '#313695',\n                            '#4575b4',\n                            '#74add1',\n                            '#abd9e9',\n                            '#e0f3f8',\n                            '#ffffbf',\n                            '#fee090',\n                            '#fdae61',\n                            '#f46d43',\n                            '#d73027',\n                            '#a50026'\n                        ]\n                    }\n                },\n                series: [\n                    {\n                        name: 'original_data',\n                        type: 'scatter3D',\n                        data: this.originalPointCloudData,\n                        encode: {\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    }\n                ]\n            };\n            myChart_original.setOption(this.option_original);\n            var myChart_generate = echarts.init(document.getElementById('preview_generate'));\n            this.option_generate = {\n                title: {\n                    text: '生成图'\n                },\n                tooltip: {\n                    show: true,\n                    showCcontant: true,\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        label: {\n                            backgroundColor: '#6a7985'\n                        }\n                    }\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                grid3D: {\n                    containLabel: true,\n                    viewControl: {\n                        projection: 'orthographic'\n                    }\n                },\n                xAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                yAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                zAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                visualMap: {\n                    show: false,\n                    calculable: true,\n                    max: 50,\n                    min: -0,\n                    range: [-200, 200],\n                    inRange: {\n                        symbolSize: 2,\n                        color: [\n                            '#313695',\n                            '#4575b4',\n                            '#74add1',\n                            '#abd9e9',\n                            '#e0f3f8',\n                            '#ffffbf',\n                            '#fee090',\n                            '#fdae61',\n                            '#f46d43',\n                            '#d73027',\n                            '#a50026'\n                        ]\n                    }\n                },\n                series: [\n                    {\n                        name: 'generate_data',\n                        type: 'scatter3D',\n                        data: this.generatePointCloudData,\n                        encode: {\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    }\n                ]\n            };\n            myChart_generate.setOption(this.option_generate);\n        },\n        async previewHandleChange() {\n            this.originalPointCloudData = [];\n            this.generatePointCloudData = [];\n            var original_points_name = this.preview_value[0];\n            var generate_points_name = this.preview_value[1];\n            var original_pointscloud = null;\n            var generate_pointscloud = null;\n            if (this.original_is_Zip) {\n                var original_files = new JSZip();\n                await original_files.loadAsync(this.original_files_zip).then(async function(file) {\n                    await original_files\n                        .file(original_points_name)\n                        .async('string')\n                        .then(function(content) {\n                            original_pointscloud = content;\n                        });\n                });\n                this.make_format_data(original_points_name, original_pointscloud, 0);\n                var generate_files = new JSZip();\n                await generate_files.loadAsync(this.generate_files_zip).then(async function(generate_files_zip) {\n                    await generate_files\n                        .file(generate_points_name)\n                        .async('string')\n                        .then(function(content) {\n                            generate_pointscloud = content;\n                        });\n                });\n                this.make_format_data(generate_points_name, generate_pointscloud, 1);\n            } else {\n                var reader = new FileReader();\n                reader.readAsText(this.original_blob);\n                let me = this;\n\n                reader.onload = async function() {\n                    var original_content = this.result;\n\n                    me.make_format_data(me.preview_options[0].value, original_content, 0);\n\n                    if (me.generate_is_Zip) {\n                        var generate_files = new JSZip();\n                        await generate_files.loadAsync(me.generate_files_zip).then(async function(generate_files_zip) {\n                            await generate_files\n                                .file(generate_points_name)\n                                .async('string')\n                                .then(function(content) {\n                                    generate_pointscloud = content;\n                                });\n                        });\n                        me.make_format_data(generate_points_name, generate_pointscloud, 1);\n\n                        me.get_preview();\n                    } else {\n                        var reader2 = new FileReader();\n                        reader2.readAsText(this.generate_blob);\n\n                        reader2.onload = async function() {\n                            var generate_content = this.result;\n                            me.make_format_data(me.preview_options[0].children.value, generate_content, 1);\n                        };\n                    }\n                };\n            }\n            console.log('this.originalPointCloudData:', this.originalPointCloudData);\n            console.log('this.generatePointCloudData:', this.generatePointCloudData);\n            // this.generatePointCloudData = [];\n            this.get_preview();\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n                .then(_ => {\n                    this.previewDialogVisible = false;\n                    this.fileName = '';\n                    this.preview_value = [];\n                    this.preview_options = [];\n                    this.previewDialogVisible = false;\n                    this.loading = true;\n                    this.original_files_zip = null;\n                    this.generate_files_zip = null;\n                    this.originalPointCloudData = [];\n                    this.generatePointCloudData = [];\n                    this.maxAxisValue = -10000;\n                    this.minAxisValue = 10000;\n                })\n                .catch(_ => {});\n        },\n        changeAxios_xz() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][0], this.originalPointCloudData[i][2]] = [\n                    this.originalPointCloudData[i][2],\n                    this.originalPointCloudData[i][0]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][0], this.generatePointCloudData[i][2]] = [\n                    this.generatePointCloudData[i][2],\n                    this.generatePointCloudData[i][0]\n                ];\n            }\n            this.get_preview();\n        },\n        changeAxios_yz() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][1], this.originalPointCloudData[i][2]] = [\n                    this.originalPointCloudData[i][2],\n                    this.originalPointCloudData[i][1]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][1], this.generatePointCloudData[i][2]] = [\n                    this.generatePointCloudData[i][2],\n                    this.generatePointCloudData[i][1]\n                ];\n            }\n            this.get_preview();\n        },\n        changeAxios_xy() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][0], this.originalPointCloudData[i][1]] = [\n                    this.originalPointCloudData[i][1],\n                    this.originalPointCloudData[i][0]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][0], this.generatePointCloudData[i][1]] = [\n                    this.generatePointCloudData[i][1],\n                    this.generatePointCloudData[i][0]\n                ];\n            }\n            this.get_preview();\n        },\n        // >>>>>>>>>>表格空白部分填充>>>>>>>>>>>>>>>>\n        isBlank_num(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '-- --';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            return value;\n        },\n        isBlank_start(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '未开始';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n            return value;\n        },\n        isBlank_end(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '未结束';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n            return value;\n        }\n    }\n};\n</script>\n<style scoped>\n.juzhog {\n    width: 600px;\n    height: 530px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -300px;\n    margin-top: -265px;\n    background-color: #fff;\n}\n.search {\n    margin-bottom: 10px !important;\n}\n.right {\n    margin-right: 5px !important;\n}\n.right10 {\n    margin-right: 10px !important;\n}\n.user-info-list {\n    padding-left: 10px;\n    background-color: rgba(255, 255, 255, 0.4);\n    font-size: 14px;\n    color: #000;\n    line-height: 25px;\n}\n.el-input__inner {\n    width: 600px !important;\n}\n.view1 {\n    width: 600px;\n    height: 530px;\n    margin: 0 10px 0 0;\n    background-color: #fff;\n    float: left;\n}\n.el-dialog {\n    display: flex;\n    flex-direction: column;\n    margin: 0 !important;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    max-height: calc(100% - 30px);\n    max-width: calc(100% - 30px);\n}\n.el-dialog .el-dialog__body {\n    flex: 1;\n    overflow: auto;\n}\n/* .inlineBlock {\n    display: inline-block;\n} */\n</style>\n"],"sourceRoot":"src/components/page"}]}