{"remainingRequest":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/thread-loader/dist/cjs.js!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/Lidar_T_AugTaskList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/Lidar_T_AugTaskList.vue","mtime":1628741922000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _slicedToArray from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _typeof from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as echarts from 'echarts';\nimport 'echarts-gl';\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport vTable from \"./Table.vue\";\nexport default {\n  data: function data() {\n    var _ref;\n\n    var isNotNag_int_urg = function isNotNag_int_urg(rule, value, callback) {\n      var boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n      if (value !== 0 && !boolean) {\n        callback(new Error('请输入非负整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNotNag_int = function isNotNag_int(rule, value, callback) {\n      var boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n      if (value !== '0' && !boolean) {\n        callback(new Error('请输入非负整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var generate_per_file_and_paramsRule = function generate_per_file_and_paramsRule(rule, value, callback) {\n      if (value < 1) {\n        callback(new Error('只能为大于等于1整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNum = function isNum(rule, value, callback) {\n      var age = /^[0-9]*$/;\n\n      if (!age.test(value)) {\n        callback(new Error('只能为非负数字'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNotNag = function isNotNag(rule, value, callback) {\n      if (value < 0) {\n        callback(new Error('只能为非负数'));\n      } else {\n        callback();\n      }\n    };\n\n    var epsilonRule = function epsilonRule(rule, value, callback) {\n      value = value.replace('[', '');\n      value = value.replace(']', '');\n      value = value.replace('，', ',');\n      var list = value.split(',');\n\n      for (var i in list) {\n        if (!_typeof(parseFloat(list[i])) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n          callback(new Error('请填写合理的非负数字列表'));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    return _ref = {\n      mark_group: {\n        mark0: {\n          0: '0'\n        },\n        mark01_255: {\n          0.1: '0.1',\n          255: '255'\n        },\n        marks0_5: {\n          0: '0',\n          5: '5'\n        },\n        marks1_5: {\n          1: '1',\n          5: '5'\n        }\n      },\n      marks: {\n        0: '0'\n      },\n      truck_options: [{\n        value: '1',\n        label: '类型1'\n      }, {\n        value: '2',\n        label: '类型2'\n      }, {\n        value: '3',\n        label: '类型3'\n      }],\n      car_options: [{\n        value: '1',\n        label: '类型1'\n      }],\n      cyclist_options: [{\n        value: '1',\n        label: '类型1'\n      }, {\n        value: '2',\n        label: '类型2'\n      }],\n      full_loading_flag: false,\n      generate_func_self: '',\n      generate_func_all: '',\n      generate_func_list: [],\n      queryInfo_Self: {\n        page: 1\n      },\n      taskList_Self: [],\n      total_Self: 0,\n      formInline_Self: {\n        searchType: '',\n        searchTaskInfo: ''\n      },\n      editDialogSelfVisible: false,\n      editForm_Self: {\n        task_id: 0,\n        master: this.$store.getters.userId,\n        name: '',\n        params: '',\n        file: {},\n        augmentation_method_name: '',\n        aug_object_truck: null,\n        aug_object_car: null,\n        aug_object_cyclist: null\n      },\n      editFormSelfRules: {\n        name: [{\n          required: true,\n          message: '请输入任务名',\n          trigger: 'blur'\n        }]\n      },\n      queryInfo_All: {\n        page: 1\n      },\n      taskList_All: [],\n      total_All: 0,\n      formInline_All: {\n        searchType: '',\n        searchTaskInfo: ''\n      },\n      editDialogAllVisible: false,\n      editForm_All: {},\n      editFormAllRules: {\n        name: [{\n          required: true,\n          message: '请输入任务名',\n          trigger: 'blur'\n        }]\n      },\n      FuzzySearch: 1,\n      activeName: 'self'\n    }, _defineProperty(_ref, \"taskList_All\", []), _defineProperty(_ref, \"userRight\", ''), _defineProperty(_ref, \"methodDialogSelfVisible\", false), _defineProperty(_ref, \"methodDetail\", []), _defineProperty(_ref, \"mohu\", true), _defineProperty(_ref, \"fileName\", ''), _defineProperty(_ref, \"preview_value\", []), _defineProperty(_ref, \"preview_options\", []), _defineProperty(_ref, \"previewDialogVisible\", false), _defineProperty(_ref, \"loading\", true), _defineProperty(_ref, \"original_files_zip\", null), _defineProperty(_ref, \"generate_files_zip\", null), _defineProperty(_ref, \"originalPointCloudData\", []), _defineProperty(_ref, \"generatePointCloudData\", []), _defineProperty(_ref, \"originalLabelData\", []), _defineProperty(_ref, \"generateLabelData\", []), _defineProperty(_ref, \"maxAxisValue\", -10000), _defineProperty(_ref, \"minAxisValue\", 10000), _defineProperty(_ref, \"original_is_Zip\", false), _defineProperty(_ref, \"generate_is_Zip\", false), _defineProperty(_ref, \"original_fileContent\", ''), _defineProperty(_ref, \"generate_fileContent\", ''), _defineProperty(_ref, \"original_blob\", null), _defineProperty(_ref, \"generate_blob\", null), _defineProperty(_ref, \"test_text\", 'djshdkjdhkadh'), _defineProperty(_ref, \"change_axios_buttom\", false), _defineProperty(_ref, \"editForm\", {}), _defineProperty(_ref, \"rules1\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: epsilonRule,\n        trigger: 'blur'\n      }],\n      generate_per_file_and_params: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"rules2\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      ite_epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      ite_limit: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      generate_per_file: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"rules3\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      ite_epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      ite_limit: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      generate_per_file: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      boundary_constraint: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"picture\", 'https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg'), _ref;\n  },\n  components: {\n    vTable: vTable\n  },\n  computed: {\n    rulesList: function rulesList() {\n      if (this.editForm_Self.augmentation_method_name === 'FGSM') {\n        return this.rules1;\n      } else if (this.editForm_Self.augmentation_method_name === 'JSMA') {\n        return this.rules3;\n      } else {\n        return this.rules2;\n      }\n    }\n  },\n  created: function created() {\n    this.userRight = window.sessionStorage.getItem('user_group_name');\n    this.getTaskList_Self();\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var data;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n              _context.next = 3;\n              return this.$http.get('/augmentation_method/?augmentation_type=2');\n\n            case 3:\n              data = _context.sent;\n              // ?id=1\n              console.log('data:', data);\n              this.generate_func_list = data.data.data;\n              console.log('this.generate_func_list:', this.generate_func_list);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    // >>>>>>>>>el-tab部分>>>>>>>>>>>>>>>.\n    handleClick: function handleClick(tab, event) {\n      if (tab.index === '1') {\n        this.getTaskList_All();\n      }\n    },\n    // >>>>>>>>>>>>>获取任务列表以及查询部分>>>>>>>>>>>>>>>\n    // 获取子组件getList指令\n    handleSelectClear: function handleSelectClear() {\n      this.getTaskList_Self();\n      this.generate_func_self = '';\n    },\n    handleGetList: function handleGetList(data) {\n      if (!data) {\n        this.getTaskList_Self();\n      } else {\n        this.getTaskList_All();\n      }\n    },\n    getTaskList_Self: function () {\n      var _getTaskList_Self = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get('/task/augmentation_type/search/?augmentation_type=2&page=' + this.queryInfo_Self.page);\n\n              case 2:\n                _yield$this$$http$get = _context2.sent;\n                data = _yield$this$$http$get.data;\n\n                if (!(data.code !== 20000)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                if (!(data.code === 40400)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                console.log('data:', data);\n                this.taskList_Self = [];\n                this.totalPageNum = 0;\n                this.total_Self = 0;\n                return _context2.abrupt(\"return\", this.$message.error('本用户未添加任务！'));\n\n              case 11:\n                return _context2.abrupt(\"return\", this.$message.error('获取本用户任务列表失败！'));\n\n              case 12:\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages; // if (this.queryInfo_Self.page > this.totalPageNum) {\n                //     this.queryInfo_Self.page = this.totalPageNum;\n                // }\n\n                console.log('this.taskList_Self:', this.taskList_Self);\n                this.total_Self = this.totalPageNum * 10;\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getTaskList_Self() {\n        return _getTaskList_Self.apply(this, arguments);\n      }\n\n      return getTaskList_Self;\n    }(),\n    SearchTask_Self: function () {\n      var _SearchTask_Self = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var flag, search_params, _yield$this$$http$get2, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.formInline_Self.searchType === '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('请输入查询方式！'));\n\n              case 2:\n                flag = 0;\n                search_params = '';\n\n                if (!(this.formInline_Self.searchType === '生成方法')) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                // search_params = '/task/augmentation_method/search/?augmentation_method=' + this.formInline_Self.searchTaskInfo;\n                search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self + '&page=' + this.queryInfo_Self.page;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                console.log('this.queryInfo_Self.page:', this.queryInfo_Self.page);\n                _context3.next = 13;\n                break;\n\n              case 10:\n                if (!(this.formInline_Self.searchTaskInfo === '')) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('请输入搜索内容！'));\n\n              case 12:\n                if (this.formInline_Self.searchType === '任务名称') {\n                  search_params = '/task/name/search/?augmentation_type=2&task_name=' + this.formInline_Self.searchTaskInfo + '&search_type=' + this.FuzzySearch + '&page=' + this.queryInfo_Self.page;\n                } else {\n                  search_params = '/task/id/search/?augmentation_type=2&task_id=' + this.formInline_Self.searchTaskInfo + '&page=' + this.queryInfo_Self.page;\n                }\n\n              case 13:\n                _context3.next = 15;\n                return this.$http.get(search_params);\n\n              case 15:\n                _yield$this$$http$get2 = _context3.sent;\n                data = _yield$this$$http$get2.data;\n                console.log('data:', data);\n\n                if (!(data.code !== 20000)) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return _context3.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 22:\n                if (this.formInline_Self.searchType === '任务id') {\n                  flag = 1;\n                  this.taskList_Self = [];\n                  this.taskList_Self.push(data.data);\n                } else {\n                  this.taskList_Self = data.data.details;\n                }\n\n                console.log('data:', data); // this.total_Self = this.taskList_Self ? this.taskList_Self.length : 0;\n\n                this.totalPageNum = data.data.pages; // if (this.queryInfo_Self.page > this.totalPageNum) {\n                //     this.queryInfo_Self.page = this.totalPageNum;\n                // }\n\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n\n                if (flag) {\n                  this.total_Self = this.taskList_Self.length;\n                }\n\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function SearchTask_Self() {\n        return _SearchTask_Self.apply(this, arguments);\n      }\n\n      return SearchTask_Self;\n    }(),\n    // 获取所有用户任务列表\n    getTaskList_All: function () {\n      var _getTaskList_All = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$this$$http$get3, data, _yield$this$$http$get4, _data, _yield$this$$http$get5, _data2, _yield$this$$http$get6, _data3, _yield$this$$http$get7, _data4, _yield$this$$http$get8, _data5, _yield$this$$http$get9, _data6;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log('this.generate_func_all:', this.generate_func_all);\n                console.log('this.formInline_All.searchType:', this.formInline_All.searchType);\n\n                if (!(this.formInline_All.searchType !== '生成方法' && (this.formInline_All.searchType === '' || this.formInline_All.searchTaskInfo === ''))) {\n                  _context4.next = 24;\n                  break;\n                }\n\n                _context4.next = 5;\n                return this.$http.get('/task/augmentation_type/admin/search/?augmentation_type=2&page=' + this.queryInfo_All.page);\n\n              case 5:\n                _yield$this$$http$get3 = _context4.sent;\n                data = _yield$this$$http$get3.data;\n\n                if (!(data.code == 40400)) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                console.log('data:', data);\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('所有用户都未添加任务！'));\n\n              case 13:\n                if (!(data.code !== 20000)) {\n                  _context4.next = 19;\n                  break;\n                }\n\n                console.log('所有用户data:', data);\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[所有用户]！' + '错误原因：' + data.msg));\n\n              case 19:\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 120;\n                break;\n\n              case 24:\n                if (!(this.formInline_All.searchType === '用户id')) {\n                  _context4.next = 40;\n                  break;\n                }\n\n                _context4.next = 27;\n                return this.$http.get('/task/augmentation_type/admin/search/' + '?augmentation_type=2&page=' + this.queryInfo_All.page + '&user_id=' + this.formInline_All.searchTaskInfo);\n\n              case 27:\n                _yield$this$$http$get4 = _context4.sent;\n                _data = _yield$this$$http$get4.data;\n\n                if (!(_data.code !== 20000)) {\n                  _context4.next = 35;\n                  break;\n                }\n\n                console.log('data:', _data);\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[用户id]！' + '错误原因：' + _data.msg));\n\n              case 35:\n                this.taskList_All = _data.data.details;\n                this.totalPageNum = _data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 120;\n                break;\n\n              case 40:\n                if (!(this.formInline_All.searchType === '任务名称')) {\n                  _context4.next = 56;\n                  break;\n                }\n\n                _context4.next = 43;\n                return this.$http.get('/task/name/admin/search/' + '?augmentation_type=2&page=' + this.queryInfo_All.page + '&task_name=' + this.formInline_All.searchTaskInfo + '&search_type=' + this.FuzzySearch);\n\n              case 43:\n                _yield$this$$http$get5 = _context4.sent;\n                _data2 = _yield$this$$http$get5.data;\n                console.log('data:', _data2);\n\n                if (!(_data2.code !== 20000)) {\n                  _context4.next = 51;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[任务名称]！' + '错误原因：' + _data2.msg));\n\n              case 51:\n                this.taskList_All = _data2.data.details;\n                this.totalPageNum = _data2.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 120;\n                break;\n\n              case 56:\n                if (!(this.formInline_All.searchType === '任务id')) {\n                  _context4.next = 74;\n                  break;\n                }\n\n                _context4.next = 59;\n                return this.$http.get('/task/id/admin/search/' + '?augmentation_type=2&page=' + this.queryInfo_All.page + '&task_id=' + this.formInline_All.searchTaskInfo);\n\n              case 59:\n                _yield$this$$http$get6 = _context4.sent;\n                _data3 = _yield$this$$http$get6.data;\n\n                if (!(_data3.code !== 20000)) {\n                  _context4.next = 66;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[任务id]！' + '错误原因：' + _data3.msg));\n\n              case 66:\n                console.log('data:', _data3);\n                console.log('this.taskList_All:', this.taskList_All);\n                this.taskList_Self = [];\n                this.taskList_Self.push(_data3.data.details);\n                this.totalPageNum = _data3.data.pages; // this.total_All = this.taskList_All;\n\n                this.total_All = this.taskList_All.length;\n                _context4.next = 120;\n                break;\n\n              case 74:\n                if (!(this.formInline_All.searchType === '生成类型id')) {\n                  _context4.next = 89;\n                  break;\n                }\n\n                _context4.next = 77;\n                return this.$http.get('/task/augmentation_type/admin/search/' + '?page=' + this.queryInfo_All.page + '&augmentation_type=' + this.formInline_All.searchTaskInfo);\n\n              case 77:\n                _yield$this$$http$get7 = _context4.sent;\n                _data4 = _yield$this$$http$get7.data;\n\n                if (!(_data4.code !== 20000)) {\n                  _context4.next = 84;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[生成类型]！' + '错误原因：' + _data4.msg));\n\n              case 84:\n                this.taskList_All = _data4.data.details;\n                this.totalPageNum = _data4.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 120;\n                break;\n\n              case 89:\n                if (!(this.formInline_All.searchType === '生成方法')) {\n                  _context4.next = 106;\n                  break;\n                }\n\n                console.log('here,this.generate_func_all22222:', this.generate_func_all);\n                _context4.next = 93;\n                return this.$http.get('/task/augmentation_method/admin/search/' + '?page=' + this.queryInfo_All.page + '&augmentation_method=' + this.generate_func_all);\n\n              case 93:\n                _yield$this$$http$get8 = _context4.sent;\n                _data5 = _yield$this$$http$get8.data;\n                console.log('data:', _data5);\n\n                if (!(_data5.code !== 20000)) {\n                  _context4.next = 101;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[生成方法]！' + '错误原因：' + _data5.msg));\n\n              case 101:\n                this.taskList_All = _data5.data.details;\n                this.totalPageNum = _data5.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 120;\n                break;\n\n              case 106:\n                if (!(this.formInline_All.searchType === '用户名')) {\n                  _context4.next = 120;\n                  break;\n                }\n\n                _context4.next = 109;\n                return this.$http.get('/task/master/admin/search/' + '?augmentation_type=2&page=' + this.queryInfo_All.page + '&username=' + this.formInline_All.searchTaskInfo + '&search_type=' + this.FuzzySearch);\n\n              case 109:\n                _yield$this$$http$get9 = _context4.sent;\n                _data6 = _yield$this$$http$get9.data;\n\n                if (!(_data6.code !== 20000)) {\n                  _context4.next = 116;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[用户名]！' + '错误原因：' + _data6.msg));\n\n              case 116:\n                this.taskList_All = _data6.data.details;\n                this.totalPageNum = _data6.data.pages;\n                console.log('this.taskList_All:', this.taskList_All);\n                this.total_All = this.totalPageNum * 10;\n\n              case 120:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getTaskList_All() {\n        return _getTaskList_All.apply(this, arguments);\n      }\n\n      return getTaskList_All;\n    }(),\n    generate_change: function () {\n      var _generate_change = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(type) {\n        var search_params, _yield$this$$http$get10, data, _search_params, _yield$this$$http$get11, _data7;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(type == '本用户')) {\n                  _context5.next = 20;\n                  break;\n                }\n\n                search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                _context5.next = 5;\n                return this.$http.get(search_params);\n\n              case 5:\n                _yield$this$$http$get10 = _context5.sent;\n                data = _yield$this$$http$get10.data;\n\n                if (!(data.code !== 20000)) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return _context5.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 11:\n                console.log('data:', data);\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n                console.log('this.total_Self:', this.total_Self);\n                console.log('this.totalPageNum:', this.totalPageNum);\n                _context5.next = 33;\n                break;\n\n              case 20:\n                _search_params = '/task/augmentation_method/admin/search/?augmentation_method=' + this.generate_func_all;\n                _context5.next = 23;\n                return this.$http.get(_search_params);\n\n              case 23:\n                _yield$this$$http$get11 = _context5.sent;\n                _data7 = _yield$this$$http$get11.data;\n\n                if (!(_data7.code !== 20000)) {\n                  _context5.next = 29;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.total_All = 0;\n                return _context5.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 29:\n                this.taskList_All = _data7.data.details;\n                this.totalPageNum = _data7.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                this.total_All = this.total_All ? this.taskList_All.length : 0;\n\n              case 33:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function generate_change(_x) {\n        return _generate_change.apply(this, arguments);\n      }\n\n      return generate_change;\n    }(),\n    // 是否启用模糊搜索\n    isFuzzySearch: function isFuzzySearch(flag) {\n      this.FuzzySearch = flag;\n    },\n    // 清空二级搜索框\n    clearSecondSelect_All: function clearSecondSelect_All() {\n      this.generate_func_all = '';\n      this.formInline_All.searchTaskInfo = '';\n    },\n    clearSecondSelect_Self: function clearSecondSelect_Self() {\n      this.generate_func_self = '';\n      this.formInline_Self.searchTaskInfo = '';\n    },\n    // >>>>>>>>>>分页部分>>>>>>>>>>>>>>>>>>>\n    handleSizeChange_Self: function handleSizeChange_Self(newSize) {\n      this.queryInfo_Self.pagesize = newSize;\n      console.log('newSize-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n      console.log('newSize-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n      this.getTaskList_Self();\n    },\n    handleCurrentChange_Self: function handleCurrentChange_Self(newPage) {\n      this.queryInfo_Self.page = newPage;\n      console.log('newPage-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n      console.log('newPage-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n\n      if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n        this.getTaskList_Self();\n      } else {\n        this.SearchTask_Self();\n      }\n    },\n    handleSizeChange_All: function handleSizeChange_All(newSize) {\n      this.queryInfo_All.pagesize = newSize;\n      console.log('newSize-this.formInline_All.searchType:', this.formInline_All.searchType);\n      console.log('newSize-this.queryInfo_All.page:', this.queryInfo_All.page);\n      this.getTaskList_All();\n    },\n    handleCurrentChange_All: function handleCurrentChange_All(newPage) {\n      this.queryInfo_All.page = newPage;\n      console.log('newPage-this.formInline_All.searchType:', this.formInline_All.searchType);\n      console.log('newPage-this.queryInfo_All.page:', this.queryInfo_All.page);\n      this.getTaskList_All(); // if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n      //     this.getTaskList_All();\n      // } else {\n      //     this.SearchTask_All();\n      // }\n      // this.queryInfo_All.page = newPage;\n      // this.getTaskList_All();\n    },\n    pageReflash_All: function pageReflash_All() {\n      this.queryInfo_All.page = 1;\n    },\n    pageReflash_Self: function pageReflash_Self() {\n      this.queryInfo_Self.page = 1;\n    },\n    // >>>>>>>>>>>>>下载文件部分>>>>>>>>>>>>>>\n    originalfileDownloadTemp: function originalfileDownloadTemp(data) {\n      var task_id = data['task_id'];\n      var flag = data['flag'];\n      this.originalfileDownload(task_id, flag);\n    },\n    originalfileDownload: function () {\n      var _originalfileDownload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(task_id, flag) {\n        var loading, data, file_name1, dot;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                loading = this.full_loading_flag ? '' : this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                this.original_fileContent = '';\n                _context6.next = 4;\n                return this.$http.get('/task/file/?task_id=' + task_id + '&file_type=0&format=json', {\n                  responseType: 'blob',\n                  headers: {\n                    'Content-Type': 'application/json; application/octet-stream'\n                  }\n                });\n\n              case 4:\n                data = _context6.sent;\n                console.log('data:', data);\n                file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n                this.fileName = file_name1[file_name1.length - 1];\n                this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n                dot = this.fileName.lastIndexOf('.');\n                this.original_is_Zip = false;\n\n                if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                  this.original_is_Zip = true;\n                } else {\n                  this.original_blob = data.data;\n                }\n\n                if (!this.full_loading_flag) {\n                  loading.close();\n                }\n\n                if (!flag) {\n                  fileDownload(data.data, this.fileName);\n                }\n\n                return _context6.abrupt(\"return\", data);\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function originalfileDownload(_x2, _x3) {\n        return _originalfileDownload.apply(this, arguments);\n      }\n\n      return originalfileDownload;\n    }(),\n    generatefileDownloadTemp: function generatefileDownloadTemp(data) {\n      var task_id = data['task_id'];\n      var flag = data['flag'];\n      this.generatefileDownload(task_id, flag);\n    },\n    generatefileDownload: function () {\n      var _generatefileDownload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(task_id, flag) {\n        var loading, data, file_name1, dot;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                loading = this.full_loading_flag ? '' : this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                _context7.next = 3;\n                return this.$http.get('/task/file/?task_id=' + task_id + '&file_type=1&format=json', {\n                  responseType: 'blob',\n                  headers: {\n                    'Content-Type': 'application/json; application/octet-stream'\n                  }\n                });\n\n              case 3:\n                data = _context7.sent;\n                file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n                this.fileName = file_name1[file_name1.length - 1];\n                this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n                dot = this.fileName.lastIndexOf('.');\n                this.generate_is_Zip = false;\n\n                if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                  this.generate_is_Zip = true;\n                } else {\n                  this.generate_blob = data.data;\n                }\n\n                if (!this.full_loading_flag) {\n                  loading.close();\n                }\n\n                if (!flag) {\n                  fileDownload(data.data, this.fileName);\n                }\n\n                return _context7.abrupt(\"return\", data);\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function generatefileDownload(_x4, _x5) {\n        return _generatefileDownload.apply(this, arguments);\n      }\n\n      return generatefileDownload;\n    }(),\n    // >>>>>>>>>>>>操作按钮部分>>>>>>>>>>>>>\n    removeTaskById: function () {\n      var _removeTaskById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(task_id) {\n        var confirmResult, _yield$this$$http$del, data;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.$confirm('此操作将永久删除该任务, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context8.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.info('已取消删除'));\n\n              case 5:\n                _context8.next = 7;\n                return this.$http.delete('/task/?task_id=' + task_id);\n\n              case 7:\n                _yield$this$$http$del = _context8.sent;\n                data = _yield$this$$http$del.data;\n\n                if (!(data.code !== 20000)) {\n                  _context8.next = 11;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.error('删除任务失败！' + '错误原因：' + data.msg));\n\n              case 11:\n                this.$message.success('删除任务成功！');\n\n                if (this.activeName === 'self') {\n                  this.queryInfo_Self.page = 1;\n\n                  if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                    this.getTaskList_Self();\n                  } else {\n                    this.SearchTask_Self();\n                  }\n                } else {\n                  this.queryInfo_All.page = 1;\n\n                  if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n                    this.getTaskList_All();\n                  } else {\n                    this.SearchTask_All();\n                  }\n                }\n\n              case 13:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function removeTaskById(_x6) {\n        return _removeTaskById.apply(this, arguments);\n      }\n\n      return removeTaskById;\n    }(),\n    showeditForm: function showeditForm() {\n      console.log('this.editForm_Self:', this.editForm_Self);\n    },\n    showEditDialog: function () {\n      var _showEditDialog = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(row) {\n        var i;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.editForm_Self = JSON.parse(JSON.stringify(row));\n                this.editForm_Self.params = JSON.parse(row.params);\n\n                for (i in this.editForm_Self.params) {\n                  this.$set(this.editForm_Self, i, this.editForm_Self.params[i]);\n                }\n\n                this.editForm_Self.urgency_level = this.editForm_Self.urgency_level;\n                this.editForm_Self.aug_object_truck = this.editForm_Self.aug_count_truck == '0' || !this.editForm_Self.aug_count_truck ? null : this.editForm_Self.aug_object_truck;\n                this.editForm_Self.aug_object_car = this.editForm_Self.aug_count_car == '0' || !this.editForm_Self.aug_count_car ? null : this.editForm_Self.aug_object_car;\n                this.editForm_Self.aug_object_cyclist = this.editForm_Self.aug_count_cyclist == '0' || !this.editForm_Self.aug_count_cyclist ? null : this.editForm_Self.aug_object_cyclist;\n                this.editForm_Self.aug_count_truck = parseInt(this.editForm_Self.aug_count_truck);\n                this.editForm_Self.aug_count_car = parseInt(this.editForm_Self.aug_count_car);\n                this.editForm_Self.aug_count_cyclist = parseInt(this.editForm_Self.aug_count_cyclist);\n                this.editForm_Self.angle = parseFloat(this.editForm_Self.angle);\n                console.log('this.editForm_Self:', this.editForm_Self);\n                this.editDialogSelfVisible = true;\n\n              case 13:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function showEditDialog(_x7) {\n        return _showEditDialog.apply(this, arguments);\n      }\n\n      return showEditDialog;\n    }(),\n    editDialogClosed: function editDialogClosed() {\n      this.editForm_Self = {\n        task_id: 0,\n        master: this.$store.getters.userId,\n        name: '',\n        params: '',\n        file: {},\n        augmentation_method_name: ''\n      };\n    },\n    editTaskInfo: function editTaskInfo() {\n      var _this = this;\n\n      this.editForm_Self.master = this.$store.state.userId;\n\n      if (this.editForm_Self.epsilon) {\n        this.editForm_Self.epsilon = this.editForm_Self.epsilon.replace('，', ',');\n      }\n\n      this.$refs.editFormRef.validate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(valid) {\n          var adddata, temp_params, _iterator, _step, _step$value, a, b, _yield$_this$$http, data;\n\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  if (valid) {\n                    _context10.next = 2;\n                    break;\n                  }\n\n                  return _context10.abrupt(\"return\");\n\n                case 2:\n                  adddata = new FormData();\n                  adddata.append('task_id', _this.editForm_Self.id);\n                  adddata.append('name', _this.editForm_Self.name);\n                  adddata.append('master', _this.editForm_Self.master);\n                  adddata.append('urgency_level', _this.editForm_Self.urgency_level);\n                  temp_params = {};\n\n                  if (_this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达') {\n                    temp_params = {\n                      aug_object_car: _this.editForm_Self.aug_object_car ? _this.editForm_Self.aug_object_car : '1',\n                      aug_object_truck: _this.editForm_Self.aug_object_truck ? _this.editForm_Self.aug_object_truck : '1',\n                      aug_object_cyclist: _this.editForm_Self.aug_object_cyclist ? _this.editForm_Self.aug_object_cyclist : '1',\n                      aug_count_car: _this.editForm_Self.aug_count_car + '',\n                      aug_count_truck: _this.editForm_Self.aug_count_truck + '',\n                      aug_count_cyclist: _this.editForm_Self.aug_count_cyclist + ''\n                    };\n                  } else if (_this.editForm_Self.augmentation_method_name === '场景物体旋转蜕变-激光雷达') {\n                    temp_params = {\n                      angle: _this.editForm_Self.angle + ''\n                    };\n                  } else if (_this.editForm_Self.augmentation_method_name === '极端场景蜕变-激光雷达') {\n                    temp_params = {\n                      aug_Truck: _this.editForm_Self.aug_Truck,\n                      aug_Car: _this.editForm_Self.aug_Car,\n                      aug_Cyclist: _this.editForm_Self.aug_Cyclist\n                    };\n                  }\n\n                  temp_params = JSON.stringify(temp_params);\n                  adddata.append('params', temp_params);\n                  _this.editForm_Self.file = document.getElementById('filetemp').files[0];\n\n                  if (_this.editForm_Self.file) {\n                    adddata.append('file', _this.editForm_Self.file);\n                  }\n\n                  _iterator = _createForOfIteratorHelper(adddata.entries());\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      _step$value = _slicedToArray(_step.value, 2), a = _step$value[0], b = _step$value[1];\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  _context10.next = 17;\n                  return _this.$http({\n                    url: '/task/',\n                    data: adddata,\n                    method: 'put'\n                  });\n\n                case 17:\n                  _yield$_this$$http = _context10.sent;\n                  data = _yield$_this$$http.data;\n\n                  if (!(data.code !== 20000)) {\n                    _context10.next = 21;\n                    break;\n                  }\n\n                  return _context10.abrupt(\"return\", _this.$message.error('修改任务失败！' + '错误原因：' + data.msg));\n\n                case 21:\n                  _this.$message.success('修改任务成功！');\n\n                  _this.editDialogSelfVisible = false;\n\n                  _this.$refs.editFormRef.resetFields();\n\n                  _this.editForm_Self.augmentation_type = '';\n                  _this.editForm_Self.augmentation_method = '';\n                  _this.editForm_Self.file = {};\n\n                  _this.getTaskList_Self();\n\n                  _this.getTaskList_All();\n\n                case 29:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x8) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    getdata: function () {\n      var _getdata = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(reader, self) {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return function () {\n                  self.fileContent = this.result;\n                };\n\n              case 2:\n                return _context11.abrupt(\"return\", reader.onload = _context11.sent);\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function getdata(_x9, _x10) {\n        return _getdata.apply(this, arguments);\n      }\n\n      return getdata;\n    }(),\n    // 标记任务异常\n    taskException: function () {\n      var _taskException = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this.$confirm('是否确定将该任务标记成异常状态？').then( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(_) {\n                    var adddata, _yield$_this2$$http, data;\n\n                    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                      while (1) {\n                        switch (_context12.prev = _context12.next) {\n                          case 0:\n                            adddata = new FormData();\n                            adddata.append('task_id', _this2.methodDetail.id);\n                            _context12.next = 4;\n                            return _this2.$http({\n                              url: '/task/exception/',\n                              data: adddata,\n                              method: 'post'\n                            });\n\n                          case 4:\n                            _yield$_this2$$http = _context12.sent;\n                            data = _yield$_this2$$http.data;\n\n                            if (!(data.code !== 20000)) {\n                              _context12.next = 8;\n                              break;\n                            }\n\n                            return _context12.abrupt(\"return\", _this2.$message.error('添加生成任务失败！' + '错误原因：' + data.msg));\n\n                          case 8:\n                            _this2.$message.success('标记成异常成功！');\n\n                          case 9:\n                          case \"end\":\n                            return _context12.stop();\n                        }\n                      }\n                    }, _callee12);\n                  }));\n\n                  return function (_x11) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }()).catch(function (_) {});\n\n              case 1:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function taskException() {\n        return _taskException.apply(this, arguments);\n      }\n\n      return taskException;\n    }(),\n    //任务详情对话框\n    MethodDetail: function () {\n      var _MethodDetail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(id) {\n        var _yield$this$$http$get12, data;\n\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                // id = data\n                console.log('this.methodDetail:', this.methodDetail);\n                this.methodDialogSelfVisible = true;\n                _context14.next = 4;\n                return this.$http.get('/task/' + '?task_id=' + id);\n\n              case 4:\n                _yield$this$$http$get12 = _context14.sent;\n                data = _yield$this$$http$get12.data;\n\n                if (!(data.code !== 20000)) {\n                  _context14.next = 8;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", this.$message.error('获取本用户任务详情失败！' + '错误原因：' + data.msg));\n\n              case 8:\n                this.methodDetail = data.data;\n\n              case 9:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function MethodDetail(_x12) {\n        return _MethodDetail.apply(this, arguments);\n      }\n\n      return MethodDetail;\n    }(),\n    methodDialogClose: function methodDialogClose() {\n      console.log('this.methodDetail:', this.methodDetail);\n      this.methodDetail = [];\n    },\n    // >>>>>>>>>>点云预览部分>>>>>>>>>>>>>>>\n    // point_cloud_preview-previewHandleChange-make_format_data-get_preview\n    point_cloud_preview: function () {\n      var _point_cloud_preview = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(task_id) {\n        var loading, preview_options, original_res, original_files_zip, original_files, orignal_names, me, generate_res, generate_files_zip, generate_files, generate_names, original_is_Zip;\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                this.full_loading_flag = true;\n                loading = this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                }); // console.log('loading:', loading);\n                // console.log('this.$loading.lock:', this.$loading.lock);\n                // this.previewDialogVisible = true;\n\n                preview_options = [];\n                _context15.next = 5;\n                return this.originalfileDownload(task_id, 1);\n\n              case 5:\n                original_res = _context15.sent;\n                // 处理原始压缩文件\n                original_files_zip = new window.File([original_res.data], this.fileName, {\n                  type: 'zip'\n                });\n                original_files = new JSZip();\n                orignal_names = [];\n                this.original_files_zip = original_files_zip;\n                me = this;\n                _context15.next = 13;\n                return original_files.loadAsync(this.original_files_zip).then(function (zip) {\n                  console.log('original_files.files:', original_files.files);\n                  var index = 0;\n\n                  for (var i in original_files.files) {\n                    // console.log('file_i:', i);\n                    if (i.indexOf('velodyne_txt/0') != -1) {\n                      var temp_object = {};\n                      var temp_name = i.split('/');\n                      temp_name = temp_name[temp_name.length - 1];\n                      console.log('temp_name:', temp_name);\n                      orignal_names.push(i);\n                      temp_object['point'] = i;\n                      temp_object['value'] = index;\n                      temp_object['label'] = temp_name;\n                      temp_object['label_real'] = 'training/label_2/' + temp_name;\n                      temp_object['children'] = [];\n                      preview_options.push(temp_object);\n                      index = index + 1;\n                    }\n                  }\n\n                  console.log('preview_options_original:', preview_options);\n                  me.original_files_zip = original_files_zip;\n                });\n\n              case 13:\n                _context15.next = 15;\n                return this.generatefileDownload(task_id, 1);\n\n              case 15:\n                generate_res = _context15.sent;\n                generate_files_zip = new window.File([generate_res.data], this.fileName, {\n                  type: 'zip'\n                });\n                generate_files = new JSZip();\n                generate_names = [];\n                original_is_Zip = this.original_is_Zip;\n                _context15.next = 22;\n                return generate_files.loadAsync(generate_files_zip).then(function (generate_files_zip) {\n                  console.log('generate_files.files:', generate_files.files);\n\n                  for (var i in preview_options) {\n                    // console.log('index:', index);\n                    var temp_object = {};\n                    var label_real = ''; // var temp_name = i.split('/');\n                    // temp_object['value'] = index;\n                    // index = index + 1;\n\n                    var label_dir = preview_options[i]['label'].split('.')[0]; // console.log('i: preview_options[i][\"label\"].split(\".\")[0]:', i, preview_options[i]['label'].split('.')[0]);\n\n                    var index = 0;\n\n                    for (var j in generate_files.files) {\n                      if (j.indexOf(label_dir + '/points') != -1) {\n                        console.log('j:', j);\n                        var temp_object = {};\n                        var label_real = '';\n                        var temp_name = j.split('/');\n                        temp_object['value'] = index;\n                        index = index + 1;\n                        temp_object['label'] = temp_name[1];\n                        temp_object['name'] = j; // j.indexOf(i.substring(i.length - 6, i.length)) != -1\n\n                        temp_object['label_real'] = label_dir + '/label_real' + j.substring(j.length - 6, j.length);\n                        preview_options[i].children.push(temp_object);\n                      }\n                    }\n                  }\n\n                  console.log('preview_options:', preview_options);\n                });\n\n              case 22:\n                this.generate_files_zip = generate_files_zip;\n                loading.close();\n                this.full_loading_flag = false;\n                this.previewDialogVisible = true;\n                this.$message.success('已获取文件列表，请选择需预览的文件！');\n                this.preview_options = preview_options;\n                this.loading = false;\n\n              case 29:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function point_cloud_preview(_x13) {\n        return _point_cloud_preview.apply(this, arguments);\n      }\n\n      return point_cloud_preview;\n    }(),\n    make_format_data: function make_format_data(content, flag) {\n      var _this3 = this;\n\n      var format_data = null;\n      var label_temp = [];\n      var arr = null;\n      format_data = content.replaceAll('\\r\\n', '\\n').split('\\n');\n      format_data.forEach(function (item) {\n        arr = item.split(' ');\n\n        for (var k in arr) {\n          if (k < 3 && parseFloat(arr[k]) > _this3.maxAxisValue) {\n            _this3.maxAxisValue = parseFloat(arr[k]);\n          }\n\n          if (k < 3 && parseFloat(arr[k]) < _this3.minAxisValue) {\n            _this3.minAxisValue = parseFloat(arr[k]);\n          }\n        }\n\n        if ((flag === 2 || flag === 3) && arr[0] != 'DontCare' && arr[0] != '') {\n          var label_temp_item = [];\n          label_temp_item.push(parseFloat(arr[13]));\n          label_temp_item.push(-1 * parseFloat(arr[11]));\n          label_temp_item.push(-1 * parseFloat(arr[12]));\n          label_temp.push(label_temp_item);\n          console.log('label_temp:', label_temp);\n        }\n\n        if (flag === 0) {\n          _this3.originalPointCloudData.push(arr);\n        } else if (flag === 1) {\n          _this3.generatePointCloudData.push(arr);\n        }\n      });\n\n      if (flag === 2) {\n        this.originalLabelData = label_temp;\n      } else if (flag === 3) {\n        this.generateLabelData = label_temp;\n      }\n\n      if (flag == 0) {\n        console.log('this.originalPointCloudData:', this.originalPointCloudData);\n      } else if (flag == 1) {\n        console.log('this.generatePointCloudData:', this.generatePointCloudData);\n      } else if (flag == 2) {\n        console.log('this.originalLabelData:', this.originalLabelData);\n      } else if (flag == 3) {\n        console.log('this.generateLabelData:', this.generateLabelData);\n      }\n    },\n    get_preview: function get_preview() {\n      var myChart = echarts.init(document.getElementById('preview'));\n      this.option = {\n        title: {\n          text: '点云生成预览'\n        },\n        tooltip: {\n          show: false,\n          showCcontant: true,\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        legend: {\n          type: 'plain',\n          data: ['original_data', 'generate_data', 'original_label', 'generate_label'],\n          top: '10%'\n        },\n        grid3D: {\n          containLabel: true,\n          viewControl: {\n            projection: 'orthographic'\n          }\n        },\n        xAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        yAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        zAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        series: [{\n          name: 'original_data',\n          type: 'scatter3D',\n          data: this.originalPointCloudData,\n          symbolSize: 2,\n          encode: {\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }, {\n          name: 'generate_data',\n          type: 'scatter3D',\n          data: this.generatePointCloudData,\n          symbolSize: 2,\n          encode: {\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }, {\n          name: 'original_label',\n          type: 'scatter3D',\n          data: this.originalLabelData,\n          symbolSize: 10,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }, {\n          name: 'generate_label',\n          type: 'scatter3D',\n          data: this.generateLabelData,\n          symbolSize: 5,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }]\n      };\n      myChart.setOption(this.option);\n      var myChart_original = echarts.init(document.getElementById('preview_original'));\n      this.option_original = {\n        title: {\n          text: '原始图'\n        },\n        tooltip: {\n          show: false,\n          showCcontant: true,\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        legend: {\n          // 就是显示哪些东西\n          type: 'plain',\n          data: ['original_data', 'original_label'],\n          top: '10%'\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid3D: {\n          containLabel: true,\n          viewControl: {\n            projection: 'orthographic'\n          }\n        },\n        xAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        yAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        zAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        series: [{\n          name: 'original_data',\n          type: 'scatter3D',\n          data: this.originalPointCloudData,\n          symbolSize: 2,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }, {\n          name: 'original_label',\n          type: 'scatter3D',\n          data: this.originalLabelData,\n          symbolSize: 10,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }]\n      };\n      myChart_original.setOption(this.option_original);\n      var myChart_generate = echarts.init(document.getElementById('preview_generate'));\n      this.option_generate = {\n        title: {\n          text: '生成图'\n        },\n        tooltip: {\n          show: true,\n          showCcontant: true,\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        legend: {\n          // 就是显示哪些东西\n          type: 'plain',\n          data: ['generate_data', 'generate_label'],\n          top: '10%'\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid3D: {\n          containLabel: true,\n          viewControl: {\n            projection: 'orthographic'\n          }\n        },\n        xAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        yAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        zAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        series: [{\n          name: 'generate_data',\n          type: 'scatter3D',\n          data: this.generatePointCloudData,\n          symbolSize: 2,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }, {\n          name: 'generate_label',\n          type: 'scatter3D',\n          data: this.generateLabelData,\n          symbolSize: 10,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }]\n      };\n      myChart_generate.setOption(this.option_generate);\n    },\n    previewHandleChange: function () {\n      var _previewHandleChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n        var loading, original_points_name, generate_points_name, original_label_name, generate_label_name, original_pointscloud, generate_pointscloud, original_label, generate_label, original_files, generate_files;\n        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                this.full_loading_flag = true;\n                loading = this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                this.originalPointCloudData = [];\n                this.generatePointCloudData = [];\n                this.originalLabelData = [];\n                this.generateLabelData = [];\n                console.log('this.preview_value[0]:', this.preview_value[0]);\n                console.log('this.preview_value[1]:', this.preview_value[1]); // this.preview_value[0]: velodyne_txt/000009.txt\n                // this.preview_value[1]: 2\n\n                original_points_name = this.preview_options[this.preview_value[0]]['point'];\n                generate_points_name = this.preview_options[this.preview_value[0]]['children'][this.preview_value[1]]['name'];\n                console.log('original_points_name:', original_points_name);\n                console.log('generate_points_name:', generate_points_name); // console.log('this.preview_options:', this.preview_options);\n\n                original_label_name = this.preview_options[this.preview_value[0]]['label_real'];\n                generate_label_name = this.preview_options[this.preview_value[0]]['children'][this.preview_value[1]]['label_real'];\n                console.log('original_label_name:', original_label_name);\n                console.log('generate_label_name:', generate_label_name);\n                original_pointscloud = null;\n                generate_pointscloud = null;\n                original_label = null;\n                generate_label = null;\n                original_files = new JSZip();\n                _context18.next = 23;\n                return original_files.loadAsync(this.original_files_zip).then( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(file) {\n                    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                      while (1) {\n                        switch (_context16.prev = _context16.next) {\n                          case 0:\n                            _context16.next = 2;\n                            return original_files.file(original_points_name).async('string').then(function (content) {\n                              original_pointscloud = content;\n                            });\n\n                          case 2:\n                            _context16.next = 4;\n                            return original_files.file(original_label_name).async('string').then(function (content) {\n                              original_label = content;\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context16.stop();\n                        }\n                      }\n                    }, _callee16);\n                  }));\n\n                  return function (_x14) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n\n              case 23:\n                console.log('original_pointscloud:', original_pointscloud);\n                this.make_format_data(original_pointscloud, 0);\n                this.make_format_data(original_label, 2);\n                console.log('this.originalPointCloudData:', this.originalPointCloudData);\n                console.log('this.originalLabelData:', this.originalLabelData);\n                generate_files = new JSZip(); // console.log('this.generate_files_zip:', this.generate_files_zip);\n                // console.log('generate_points_name:', generate_points_name);\n                // console.log('generate_label_name:', generate_label_name);\n\n                _context18.next = 31;\n                return generate_files.loadAsync(this.generate_files_zip).then( /*#__PURE__*/function () {\n                  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(file) {\n                    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                      while (1) {\n                        switch (_context17.prev = _context17.next) {\n                          case 0:\n                            _context17.next = 2;\n                            return generate_files.file(generate_points_name).async('string').then(function (content) {\n                              generate_pointscloud = content;\n                            });\n\n                          case 2:\n                            _context17.next = 4;\n                            return generate_files.file(generate_label_name).async('string').then(function (content) {\n                              generate_label = content;\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context17.stop();\n                        }\n                      }\n                    }, _callee17);\n                  }));\n\n                  return function (_x15) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }());\n\n              case 31:\n                // console.log('generate_pointscloud:', generate_pointscloud);\n                // console.log('generate_label:', generate_label);\n                this.make_format_data(generate_pointscloud, 1);\n                this.make_format_data(generate_label, 3);\n                console.log('this.generatePointCloudData:', this.generatePointCloudData);\n                console.log('this.generateLabelData:', this.generateLabelData); // this.generatePointCloudData = [];\n\n                this.get_preview();\n                loading.close();\n                this.full_loading_flag = false;\n\n              case 38:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function previewHandleChange() {\n        return _previewHandleChange.apply(this, arguments);\n      }\n\n      return previewHandleChange;\n    }(),\n    handleClose: function handleClose(done) {\n      var _this4 = this;\n\n      this.$confirm('确认关闭？').then(function (_) {\n        _this4.previewDialogVisible = false;\n        _this4.fileName = '';\n        _this4.preview_value = [];\n        _this4.preview_options = [];\n        _this4.previewDialogVisible = false;\n        _this4.loading = true;\n        _this4.original_files_zip = null;\n        _this4.generate_files_zip = null;\n        _this4.originalPointCloudData = [];\n        _this4.generatePointCloudData = [];\n        _this4.maxAxisValue = -10000;\n        _this4.minAxisValue = 10000;\n      }).catch(function (_) {});\n    },\n    changeAxios_xz: function changeAxios_xz() {\n      for (var i in this.originalPointCloudData) {\n        var _ref6 = [this.originalPointCloudData[i][2], this.originalPointCloudData[i][0]];\n        this.originalPointCloudData[i][0] = _ref6[0];\n        this.originalPointCloudData[i][2] = _ref6[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref7 = [this.generatePointCloudData[i][2], this.generatePointCloudData[i][0]];\n        this.generatePointCloudData[i][0] = _ref7[0];\n        this.generatePointCloudData[i][2] = _ref7[1];\n      }\n\n      this.get_preview();\n    },\n    changeAxios_yz: function changeAxios_yz() {\n      for (var i in this.originalPointCloudData) {\n        var _ref8 = [this.originalPointCloudData[i][2], this.originalPointCloudData[i][1]];\n        this.originalPointCloudData[i][1] = _ref8[0];\n        this.originalPointCloudData[i][2] = _ref8[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref9 = [this.generatePointCloudData[i][2], this.generatePointCloudData[i][1]];\n        this.generatePointCloudData[i][1] = _ref9[0];\n        this.generatePointCloudData[i][2] = _ref9[1];\n      }\n\n      this.get_preview();\n    },\n    changeAxios_xy: function changeAxios_xy() {\n      for (var i in this.originalPointCloudData) {\n        var _ref10 = [this.originalPointCloudData[i][1], this.originalPointCloudData[i][0]];\n        this.originalPointCloudData[i][0] = _ref10[0];\n        this.originalPointCloudData[i][1] = _ref10[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref11 = [this.generatePointCloudData[i][1], this.generatePointCloudData[i][0]];\n        this.generatePointCloudData[i][0] = _ref11[0];\n        this.generatePointCloudData[i][1] = _ref11[1];\n      }\n\n      this.get_preview();\n    },\n    // >>>>>>>>>>表格空白部分填充>>>>>>>>>>>>>>>>\n    isBlank_num: function isBlank_num(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '-- --';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      return value;\n    },\n    isBlank_start: function isBlank_start(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '未开始';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n      return value;\n    },\n    isBlank_end: function isBlank_end(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '未结束';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n      return value;\n    }\n  }\n};",null]}