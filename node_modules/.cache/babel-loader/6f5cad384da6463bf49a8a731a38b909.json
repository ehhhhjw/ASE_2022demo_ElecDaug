{"remainingRequest":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/thread-loader/dist/cjs.js!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/AugmentationManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/AugmentationManage.vue","mtime":1636377758000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport qs from 'qs';\nexport default {\n  data: function data() {\n    return {\n      id: '',\n      name: '',\n      augTypeList: [],\n      addDialogVisible: false,\n      addForm: {\n        name: '',\n        details: ''\n      },\n      addFormRules: {\n        name: [{\n          required: true,\n          message: '请输入生成类型名',\n          trigger: 'blur'\n        }]\n      },\n      editDialogVisible: false,\n      editForm: {\n        id: '',\n        name: '',\n        details: ''\n      },\n      editFormRules: {\n        name: [{\n          required: true,\n          message: '请输入生成类型名',\n          trigger: 'blur'\n        }]\n      },\n      searchAugName: '',\n      searchAugId: '',\n      augMethodList: [],\n      methodDialogVisible: false,\n      addMethodDialogVisible: false,\n      addMethodForm: {\n        name: '',\n        details: '',\n        augmentation_type: 0\n      },\n      addMethodFormRules: {\n        name: [{\n          required: true,\n          message: '请输入生成方法名',\n          trigger: 'blur'\n        }]\n      },\n      editMethodDialogVisible: false,\n      editMethodForm: {\n        id: '',\n        name: '',\n        details: '',\n        augmentation_type: 0\n      },\n      editMethodFormRules: {\n        name: [{\n          required: true,\n          message: '请输入生成类型名',\n          trigger: 'blur'\n        }]\n      },\n      userRight: '',\n      fullscreenLoading: false\n    };\n  },\n  created: function created() {\n    this.userRight = this.$store.state.user_group_name;\n    this.getAugList();\n  },\n  methods: {\n    getAugList: function () {\n      var _getAugList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var param, _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                param = '';\n\n                if (this.name !== '') {\n                  param = '?name=' + this.name;\n                }\n\n                _context.next = 4;\n                return this.$http.get('/augmentation_type/' + param);\n\n              case 4:\n                _yield$this$$http$get = _context.sent;\n                data = _yield$this$$http$get.data;\n                console.log('data:', data);\n\n                if (!(data.code !== 20000)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取生成类型失败！' + '错误原因：' + data.msg));\n\n              case 9:\n                this.augTypeList = data.data;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAugList() {\n        return _getAugList.apply(this, arguments);\n      }\n\n      return getAugList;\n    }(),\n    PreciseSearchAug: function () {\n      var _PreciseSearchAug = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var params, _yield$this$$http$get2, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.searchAugName === '' && this.searchAugId === '')) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('请输入搜索内容！'));\n\n              case 2:\n                params = '';\n\n                if (this.searchAugName && this.searchAugId) {\n                  params = params + '?name=' + this.searchAugName + '&id=' + this.searchAugId;\n                } else if (this.searchAugName) {\n                  params = params + '?name=' + this.searchAugName;\n                } else if (this.searchAugId) {\n                  params = params + '?id=' + this.searchAugId;\n                }\n\n                _context2.next = 6;\n                return this.$http.get('/augmentation_type/' + params);\n\n              case 6:\n                _yield$this$$http$get2 = _context2.sent;\n                data = _yield$this$$http$get2.data;\n\n                if (!(data.code !== 20000)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('未精确搜索到该生成类型！'));\n\n              case 10:\n                this.augTypeList = [];\n                this.augTypeList.push(data.data);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function PreciseSearchAug() {\n        return _PreciseSearchAug.apply(this, arguments);\n      }\n\n      return PreciseSearchAug;\n    }(),\n    addAugType: function addAugType() {\n      var _this = this;\n\n      var loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      this.$refs.addFormRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(valid) {\n          var _yield$_this$$http$po, data;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 3;\n                    break;\n                  }\n\n                  loading.close();\n                  return _context3.abrupt(\"return\");\n\n                case 3:\n                  if (_this.addForm.details === '') {\n                    _this.addForm.details = '暂无';\n                  }\n\n                  _context3.next = 6;\n                  return _this.$http.post('/augmentation_type/', qs.stringify(_this.addForm));\n\n                case 6:\n                  _yield$_this$$http$po = _context3.sent;\n                  data = _yield$_this$$http$po.data;\n                  loading.close();\n\n                  if (!(data.code !== 20000)) {\n                    _context3.next = 11;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\", _this.$message.error('添加生成类型失败！请检查生成类型名是否重复'));\n\n                case 11:\n                  _this.$message.success('添加生成类型成功！');\n\n                  _this.addDialogVisible = false;\n\n                  _this.getAugList();\n\n                case 14:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    addDialogClosed: function addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    removeAugById: function () {\n      var _removeAugById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(id) {\n        var confirmResult, _yield$this$$http$del, data;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.$confirm('此操作将永久删除该生成类型, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context4.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.info('已取消删除'));\n\n              case 5:\n                if (!(this.augTypeList.length == 1)) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error('删除生成类型失败！' + '错误原因：系统至少需有一种生成类型'));\n\n              case 7:\n                _context4.next = 9;\n                return this.$http.delete('/augmentation_type/' + '?id=' + id);\n\n              case 9:\n                _yield$this$$http$del = _context4.sent;\n                data = _yield$this$$http$del.data;\n\n                if (!(data.code !== 20000)) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error('删除生成类型失败！' + '错误原因：' + data.msg));\n\n              case 13:\n                this.$message.success('删除生成类型成功！');\n                this.getAugList();\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function removeAugById(_x2) {\n        return _removeAugById.apply(this, arguments);\n      }\n\n      return removeAugById;\n    }(),\n    showEditDialog: function () {\n      var _showEditDialog = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(id, name, details) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.editForm.id = id;\n                this.editForm.name = name;\n                this.editForm.details = details;\n                this.editDialogVisible = true;\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function showEditDialog(_x3, _x4, _x5) {\n        return _showEditDialog.apply(this, arguments);\n      }\n\n      return showEditDialog;\n    }(),\n    editDialogClosed: function editDialogClosed() {\n      this.$refs.editFormRef.resetFields();\n    },\n    // 修改扩增类型\n    editAugTypeInfo: function editAugTypeInfo() {\n      var _this2 = this;\n\n      var loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      }); // this.fullscreenLoading = true;\n\n      this.$refs.editFormRef.validate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(valid) {\n          var temp_form, _yield$_this2$$http$p, data;\n\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  if (valid) {\n                    _context6.next = 3;\n                    break;\n                  }\n\n                  loading.close();\n                  return _context6.abrupt(\"return\");\n\n                case 3:\n                  temp_form = {};\n                  temp_form['id'] = _this2.editForm.id;\n\n                  if (_this2.editForm.name) {\n                    temp_form['name'] = _this2.editForm.name;\n                  }\n\n                  if (_this2.editForm.details) {\n                    temp_form['details'] = _this2.editForm.details;\n                  }\n\n                  console.log('temp_form:', temp_form);\n                  console.log('this.editForm:', _this2.editForm);\n                  _context6.next = 11;\n                  return _this2.$http.put('/augmentation_type/', qs.stringify(_this2.temp_form));\n\n                case 11:\n                  _yield$_this2$$http$p = _context6.sent;\n                  data = _yield$_this2$$http$p.data;\n                  loading.close();\n                  console.log('data:', data);\n\n                  if (!(data.code !== 20000)) {\n                    _context6.next = 17;\n                    break;\n                  }\n\n                  return _context6.abrupt(\"return\", _this2.$message.error('修改生成类型失败！' + '错误原因：' + data.msg));\n\n                case 17:\n                  _this2.$message.success('修改生成类型成功！');\n\n                  _this2.editDialogVisible = false;\n\n                  _this2.getAugList();\n\n                case 20:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    augMethodsById: function () {\n      var _augMethodsById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(id) {\n        var _yield$this$$http$get3, data, str;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.methodDialogVisible = true;\n                _context7.next = 3;\n                return this.$http.get('/augmentation_method/?augmentation_type=' + id);\n\n              case 3:\n                _yield$this$$http$get3 = _context7.sent;\n                data = _yield$this$$http$get3.data;\n\n                if (!(data.code === 45000)) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", this.$message.error('该生成类型暂无方法！'));\n\n              case 7:\n                if (!(data.code !== 20000)) {\n                  _context7.next = 9;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", this.$message.error('查询生成方法失败！' + '错误原因：' + data.msg));\n\n              case 9:\n                this.augMethodList = data.data;\n                str = JSON.stringify(this.augMethodList);\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function augMethodsById(_x7) {\n        return _augMethodsById.apply(this, arguments);\n      }\n\n      return augMethodsById;\n    }(),\n    addMethodDialogClosed: function addMethodDialogClosed() {\n      this.$refs.addMethodFormRef.resetFields();\n    },\n    addAugMethod: function () {\n      var _addAugMethod = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var _this3 = this;\n\n        var loading;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                loading = this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                this.$refs.addMethodFormRef.validate( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(valid) {\n                    var _yield$_this3$$http$p, data;\n\n                    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                      while (1) {\n                        switch (_context8.prev = _context8.next) {\n                          case 0:\n                            if (valid) {\n                              _context8.next = 3;\n                              break;\n                            }\n\n                            loading.close();\n                            return _context8.abrupt(\"return\");\n\n                          case 3:\n                            if (_this3.addMethodForm.details === '') {\n                              _this3.addMethodForm.details = '暂无';\n                            }\n\n                            _this3.addMethodForm.augmentation_type = _this3.augMethodList[0].augmentation_type_id;\n                            _context8.next = 7;\n                            return _this3.$http.post('/augmentation_method/', qs.stringify(_this3.addMethodForm));\n\n                          case 7:\n                            _yield$_this3$$http$p = _context8.sent;\n                            data = _yield$_this3$$http$p.data;\n                            loading.close();\n\n                            if (!(data.code !== 20000)) {\n                              _context8.next = 12;\n                              break;\n                            }\n\n                            return _context8.abrupt(\"return\", _this3.$message.error('添加生成方法失败！请检查生成方法名是否重复'));\n\n                          case 12:\n                            _this3.$message.success('添加生成方法成功！');\n\n                            _this3.addMethodDialogVisible = false;\n\n                            _this3.augMethodsById(_this3.augMethodList[0].augmentation_type_id);\n\n                          case 15:\n                          case \"end\":\n                            return _context8.stop();\n                        }\n                      }\n                    }, _callee8);\n                  }));\n\n                  return function (_x8) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function addAugMethod() {\n        return _addAugMethod.apply(this, arguments);\n      }\n\n      return addAugMethod;\n    }(),\n    showMethodEditDialog: function showMethodEditDialog(id, name, details) {\n      this.editMethodForm.id = id;\n      this.editMethodForm.name = name;\n      this.editMethodForm.details = details ? details : '暂无';\n      this.editMethodForm.augmentation_type = this.augMethodList[0].augmentation_type_id;\n      this.editMethodDialogVisible = true;\n    },\n    editAugMethodInfo: function editAugMethodInfo() {\n      var _this4 = this;\n\n      var loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      this.$refs.editMethodFormRef.validate( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(valid) {\n          var temp_form, _yield$_this4$$http$p, data;\n\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  if (valid) {\n                    _context10.next = 3;\n                    break;\n                  }\n\n                  loading.close();\n                  return _context10.abrupt(\"return\");\n\n                case 3:\n                  temp_form = {};\n                  temp_form['id'] = _this4.editMethodForm.id;\n\n                  if (_this4.editMethodForm.name) {\n                    temp_form['name'] = _this4.editMethodForm.name;\n                  }\n\n                  if (_this4.editMethodForm.details) {\n                    temp_form['details'] = _this4.editMethodForm.details;\n                  } // console.log('temp_form:', temp_form);\n                  // console.log('this.editMethodForm:', this.editMethodForm);\n\n\n                  _context10.next = 9;\n                  return _this4.$http.put('/augmentation_method/', qs.stringify(temp_form));\n\n                case 9:\n                  _yield$_this4$$http$p = _context10.sent;\n                  data = _yield$_this4$$http$p.data;\n                  loading.close();\n\n                  if (!(data.code !== 20000)) {\n                    _context10.next = 14;\n                    break;\n                  }\n\n                  return _context10.abrupt(\"return\", _this4.$message.error('修改生成方法失败，请添加修改！' + '错误原因：' + data.msg));\n\n                case 14:\n                  _this4.$message.success('修改生成方法成功！');\n\n                  _this4.editMethodDialogVisible = false;\n\n                  _this4.augMethodsById(_this4.editMethodForm.augmentation_type);\n\n                case 17:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x9) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    },\n    editMethodDialogClosed: function editMethodDialogClosed() {\n      this.$refs.editMethodFormRef.resetFields();\n    },\n    removeAugMethodById: function () {\n      var _removeAugMethodById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(id) {\n        var confirmResult, _yield$this$$http$del2, data;\n\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.$confirm('此操作将永久删除该生成方法, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context11.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context11.next = 5;\n                  break;\n                }\n\n                return _context11.abrupt(\"return\", this.$message.info('已取消删除'));\n\n              case 5:\n                if (!(this.augMethodList.length == 1)) {\n                  _context11.next = 7;\n                  break;\n                }\n\n                return _context11.abrupt(\"return\", this.$message.error('删除生成方法失败！' + '错误原因：生成类型至少需有一种生成方法'));\n\n              case 7:\n                _context11.next = 9;\n                return this.$http.delete('/augmentation_method/' + '?id=' + id);\n\n              case 9:\n                _yield$this$$http$del2 = _context11.sent;\n                data = _yield$this$$http$del2.data;\n\n                if (!(data.code !== 20000)) {\n                  _context11.next = 13;\n                  break;\n                }\n\n                return _context11.abrupt(\"return\", this.$message.error('删除生成方法失败！' + '错误原因：' + data.msg));\n\n              case 13:\n                this.$message.success('删除生成方法成功！');\n                this.augMethodsById(this.augMethodList[0].augmentation_type_id);\n\n              case 15:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function removeAugMethodById(_x10) {\n        return _removeAugMethodById.apply(this, arguments);\n      }\n\n      return removeAugMethodById;\n    }(),\n    MethodsDialogClosed: function MethodsDialogClosed() {\n      this.augMethodList = [];\n    }\n  },\n  mounted: function mounted() {\n    this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n  }\n};",null]}