{"remainingRequest":"E:\\LidarPlatformFrontend-hjw\\node_modules\\babel-loader\\lib\\index.js!E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\Image_A_AugTaskAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-hjw\\src\\components\\page\\Image_A_AugTaskAdd.vue","mtime":1637242891115},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-hjw\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport _slicedToArray from \"E:/LidarPlatformFrontend-hjw/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:/LidarPlatformFrontend-hjw/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _typeof from \"E:/LidarPlatformFrontend-hjw/node_modules/@babel/runtime/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport qs from 'qs';\nexport default {\n  name: 'baseform',\n  inject: ['reload'],\n  data: function data() {\n    var isNotNag_int = function isNotNag_int(rule, value, callback) {\n      var boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n      if (value !== '0' && !boolean) {\n        callback(new Error('请输入非负整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var generate_per_file_and_paramsRule = function generate_per_file_and_paramsRule(rule, value, callback) {\n      if (value < 1) {\n        callback(new Error('只能为大于等于1整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNum = function isNum(rule, value, callback) {\n      var age = /^[0-9]*$/;\n\n      if (!age.test(value)) {\n        callback(new Error('只能为非负数字'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNotNag = function isNotNag(rule, value, callback) {\n      if (value < 0) {\n        callback(new Error('只能为非负数'));\n      } else {\n        callback();\n      }\n    };\n\n    var epsilonRule = function epsilonRule(rule, value, callback) {\n      var list = value.split(',');\n\n      for (var i in list) {\n        if (!_typeof(parseFloat(list[i])) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n          callback(new Error('请填写合理的非负数字列表'));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    return {\n      mark_group: {\n        mark0: {\n          0: '0'\n        },\n        mark01_255: {\n          0.1: '0.1',\n          255: '255'\n        },\n        marks0_5: {\n          0: '0',\n          5: '5'\n        },\n        marks1_5: {\n          1: '1',\n          5: '5'\n        }\n      },\n      radio_epsilon_4: '1',\n      radio_epsilon_5: '1',\n      radio_epsilon_6: '1',\n      radio_epsilon_7: '1',\n      loading: false,\n      form: {\n        domain_4: [{\n          value: 0\n        }],\n        domain_5: [{\n          value: 0\n        }],\n        domain_6: [{\n          value: 0\n        }],\n        domain_7: [{\n          value: 0\n        }],\n        target: null,\n        positive: '1',\n        name: '',\n        augmentation_method: null,\n        epsilon: '',\n        // range_epsilon_5: null,\n        // range_epsilon_6: null,\n        range_epsilon_7: [0.1, 0.1],\n        range_epsilon_4: [0.1, 0.1],\n        range_epsilon_5: [0.1, 0.1],\n        range_epsilon_6: [0.1, 0.1],\n        // ite_limit: null,\n        ite_limit: null,\n        num_iters: [1, 1],\n        gamma: [1, 1],\n        whether_to_rotate: false,\n        // generate_per_file_and_params: null,\n        generate_per_file_and_params: 1,\n        // generate_per_file: null,\n        generate_per_file: 1,\n        boundary_constraint: null,\n        strict_mode: false,\n        master: this.$store.state.userId,\n        urgency_level: 0,\n        file: {},\n        epsilon_7: null,\n        epsilon_4: null,\n        epsilon_5: null,\n        epsilon_6: null\n      },\n      marks: {\n        1: '1',\n        50: '50'\n      },\n      range_epsilon_6_marks: {\n        0.1: '0.1',\n        10: '10'\n      },\n      ite_limit_bili_marks: {\n        1: '1%',\n        100: '100%'\n      },\n      methods: [{\n        value: '0',\n        label: '黑盒对抗',\n        children: [{\n          // Guassian_noise\n          value: '7',\n          label: 'SIMBA'\n        }]\n      }, {\n        value: '1',\n        label: '白盒对抗',\n        children: [{\n          value: '4',\n          label: 'FGSM'\n        }, {\n          value: '5',\n          label: 'I-FGSM(BIM)'\n        }, {\n          value: '6',\n          label: 'JSMA'\n        }]\n      }],\n      directional: [{\n        value: '0',\n        label: '定向',\n        children: [{\n          value: '0',\n          label: '2S1'\n        }, {\n          value: '1',\n          label: 'BMP2'\n        }, {\n          value: '2',\n          label: 'BRDM_2'\n        }, {\n          value: '3',\n          label: 'BTR60'\n        }, {\n          value: '4',\n          label: 'BTR70'\n        }, {\n          value: '5',\n          label: 'D7'\n        }, {\n          value: '6',\n          label: 'T62'\n        }, {\n          value: '7',\n          label: 'T72'\n        }, {\n          value: '8',\n          label: 'ZIL131'\n        }, {\n          value: '9',\n          label: 'ZSU_23_4'\n        }]\n      }, {\n        value: '10',\n        label: '非定向',\n        children: [{\n          // Guassian_noise\n          value: '10',\n          label: '随机'\n        }]\n      }],\n      fileList: [],\n      typeList: [],\n      params_id: [null, null],\n      directional_id: ['10', '10'],\n      is_available_to_submit: true,\n      rules1: {\n        // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n        epsilon: [{\n          required: true,\n          message: '不能为空',\n          trigger: 'blur'\n        }, {\n          validator: epsilonRule,\n          trigger: 'blur'\n        }],\n        generate_per_file_and_params: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: generate_per_file_and_paramsRule,\n          trigger: 'blur'\n        }, {\n          validator: isNum,\n          trigger: 'blur'\n        }],\n        urgency_level: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNotNag_int,\n          trigger: 'blur'\n        }]\n      },\n      rules2: {\n        // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n        range_epsilon_5: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNotNag,\n          trigger: 'blur'\n        }],\n        ite_limit: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNum,\n          trigger: 'blur'\n        }],\n        generate_per_file: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: generate_per_file_and_paramsRule,\n          trigger: 'blur'\n        }, {\n          validator: isNum,\n          trigger: 'blur'\n        }]\n      },\n      rules3: {\n        // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n        range_epsilon_6: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNotNag,\n          trigger: 'blur'\n        }],\n        ite_limit: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNum,\n          trigger: 'blur'\n        }],\n        generate_per_file: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: generate_per_file_and_paramsRule,\n          trigger: 'blur'\n        }, {\n          validator: isNum,\n          trigger: 'blur'\n        }],\n        boundary_constraint: [{\n          required: true,\n          message: '请输入数字',\n          trigger: 'blur'\n        }, {\n          validator: isNotNag,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    rulesList: function rulesList() {\n      if (this.params_id === 1) {\n        return this.rules1;\n      } else if (this.params_id === 2) {\n        return this.rules2;\n      } else {\n        return this.rules3;\n      }\n    }\n  },\n  methods: {\n    resetForm: function resetForm(formName, index) {\n      console.log('formName:', formName); // this.$refs[formName].resetFields();\n\n      if (index == 4) {\n        this.form.domain_4 = [{\n          value: 0\n        }];\n      } else if (index == 5) {\n        this.form.domain_5 = [{\n          value: 0\n        }];\n      } else if (index == 6) {\n        this.form.domain_6 = [{\n          value: 0\n        }];\n      } else if (index == 7) {\n        this.form.domain_7 = [{\n          value: 0\n        }];\n      }\n    },\n    removeDomain: function removeDomain(item, index) {\n      if (index == 4) {\n        if (this.form.domain_4.length == 1) {\n          this.$message.error('扰动幅度不可为空!');\n        } else {\n          var item_index = this.form.domain_4.indexOf(item);\n\n          if (item_index !== -1) {\n            this.form.domain_4.splice(item_index, 1);\n          }\n        }\n      } else if (index == 5) {\n        if (this.form.domain_5.length == 1) {\n          this.$message.error('单步扰动幅度不可为空!');\n        } else {\n          var item_index = this.form.domain_5.indexOf(item);\n\n          if (item_index !== -1) {\n            this.form.domain_5.splice(item_index, 1);\n          }\n        }\n      } else if (index == 6) {\n        if (this.form.domain_6.length == 1) {\n          this.$message.error('单步扰动幅度不可为空!');\n        } else {\n          var item_index = this.form.domain_6.indexOf(item);\n\n          if (item_index !== -1) {\n            this.form.domain_6.splice(item_index, 1);\n          }\n        }\n      } else if (index == 7) {\n        if (this.form.domain_7.length == 1) {\n          this.$message.error('单步扰动幅度不可为空!');\n        } else {\n          var item_index = this.form.domain_7.indexOf(item);\n\n          if (item_index !== -1) {\n            this.form.domain_7.splice(item_index, 1);\n          }\n        }\n      }\n    },\n    addDomain: function addDomain(index) {\n      if (index == 4) {\n        this.form.domain_4.push({\n          value: 0,\n          key: Date.now()\n        });\n      } else if (index == 5) {\n        this.form.domain_5.push({\n          value: 0,\n          key: Date.now()\n        });\n      } else if (index == 6) {\n        this.form.domain_6.push({\n          value: 0,\n          key: Date.now()\n        });\n      } else if (index == 7) {\n        this.form.domain_7.push({\n          value: 0,\n          key: Date.now()\n        });\n      }\n    },\n    handleChange: function handleChange() {\n      console.log('this.params_id:', this.params_id);\n    },\n    trim: function trim(str) {\n      return str.replace(/(^s*)|(s*$)/g, '');\n    },\n    onSubmit: function onSubmit() {\n      var _this = this;\n\n      this.loading = true;\n      this.form.master = this.$store.state.userId;\n      this.$refs.formRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(valid) {\n          var adddata, temp_params, temp, x, _iterator, _step, _step$value, a, b, _yield$_this$$http, data;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!1) {\n                    _context.next = 35;\n                    break;\n                  }\n\n                  console.log('this.form.augmentation_method[1]:', _this.form.augmentation_method[1]);\n\n                  if (!(_this.form.augmentation_method[1] === '')) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _this.loading = false;\n                  return _context.abrupt(\"return\", _this.$message.error('请选择生成方法!'));\n\n                case 5:\n                  adddata = new FormData();\n\n                  if (_this.form.name) {\n                    adddata.append('name', _this.form.name);\n                  }\n\n                  adddata.append('augmentation_method', _this.form.augmentation_method[1]);\n                  adddata.append('master', _this.form.master);\n                  adddata.append('urgency_level', _this.form.urgency_level + ''); // adddata.append('urgency_level', this.form.urgency_level);\n\n                  temp_params = {};\n\n                  if (_this.form.augmentation_method[1] == 4) {\n                    temp_params = {\n                      strict_mode: _this.form.strict_mode\n                    };\n                    temp_params.strict_mode = _this.form.strict_mode ? '1' : '0';\n\n                    if (_this.radio_epsilon_4 == '1') {\n                      // 列表\n                      // epsilon: '[' + this.form.epsilon + ']',\n                      // temp_params.epsilon = '[' + this.form.epsilon_4 + ']';\n                      temp = [];\n\n                      for (x in _this.form.domain_4) {\n                        console.log('this.form.domain_4[x][\"value\"]:', _this.form.domain_4[x]['value']);\n                        temp.push(_this.form.domain_4[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                      console.log('temp_params.epsilon:', temp_params.epsilon);\n                    } else if (_this.radio_epsilon_4 == '2') {\n                      // 范围\n                      temp_params.epsilon_upper_limit = _this.form.range_epsilon_4[1] + '';\n                      temp_params.epsilon_lower_limit = _this.form.range_epsilon_4[0] + '';\n                      temp_params.generate_per_file = _this.form.generate_per_file + '';\n                    }\n                  } else if (_this.form.augmentation_method[1] == 5) {\n                    temp_params = {\n                      ite_limit: _this.form.ite_limit + '',\n                      strict_mode: _this.form.strict_mode\n                    };\n                    temp_params.strict_mode = _this.form.strict_mode ? '1' : '0';\n\n                    if (_this.radio_epsilon_5 == '1') {\n                      // 列表\n                      // epsilon: '[' + this.form.epsilon + ']',\n                      // temp_params.epsilon = '[' + this.form.epsilon_5 + ']';\n                      temp = [];\n\n                      for (x in _this.form.domain_5) {\n                        console.log('this.form.domain_5[x][\"value\"]:', _this.form.domain_5[x]['value']);\n                        temp.push(_this.form.domain_5[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                      console.log('temp:', temp);\n                      console.log('temp_params.epsilon:', temp_params.epsilon);\n                    } else if (_this.radio_epsilon_5 == '2') {\n                      // 列表\n                      temp_params.epsilon_upper_limit = _this.form.range_epsilon_5[1] + '';\n                      temp_params.epsilon_lower_limit = _this.form.range_epsilon_5[0] + '';\n                      temp_params.generate_per_file = _this.form.generate_per_file + '';\n                    }\n                  } else if (_this.form.augmentation_method[1] == 6) {\n                    temp_params = {\n                      gamma: _this.form.gamma / 100,\n                      positive: _this.form.positive,\n                      strict_mode: _this.form.strict_mode\n                    };\n                    temp_params.strict_mode = _this.form.strict_mode ? '1' : '0';\n\n                    if (_this.radio_epsilon_6 == '1') {\n                      // 列表\n                      // epsilon: '[' + this.form.epsilon + ']',\n                      // temp_params.epsilon = '[' + this.form.epsilon_6 + ']';\n                      temp = [];\n\n                      for (x in _this.form.domain_6) {\n                        console.log('this.form.domain_6[x][\"value\"]:', _this.form.domain_6[x]['value']);\n                        temp.push(_this.form.domain_6[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                      console.log('temp:', temp);\n                      console.log('temp_params.epsilon:', temp_params.epsilon);\n                    } else if (_this.radio_epsilon_6 == '2') {\n                      // 列表\n                      temp_params.epsilon_upper_limit = _this.form.range_epsilon_6[1] + '';\n                      temp_params.epsilon_lower_limit = _this.form.range_epsilon_6[0] + '';\n                      temp_params.generate_per_file = _this.form.generate_per_file + '';\n                    }\n\n                    if (_this.directional_id[1] != 10) {\n                      temp_params.target = _this.directional_id[1];\n                    }\n                  } else if (_this.form.augmentation_method[1] == 7) {\n                    temp_params = {\n                      num_iters: _this.form.num_iters + '',\n                      strict_mode: _this.form.strict_mode\n                    };\n                    temp_params.strict_mode = _this.form.strict_mode ? '1' : '0';\n\n                    if (_this.radio_epsilon_7 == '1') {\n                      // 列表\n                      // temp_params.epsilon = '[' + this.form.epsilon_7 + ']';\n                      temp = [];\n\n                      for (x in _this.form.domain_7) {\n                        console.log('this.form.domain_7[x][\"value\"]:', _this.form.domain_7[x]['value']);\n                        temp.push(_this.form.domain_7[x]['value']);\n                      }\n\n                      temp_params.epsilon = '[' + temp.toString() + ']';\n                      console.log('temp:', temp);\n                      console.log('temp_params.epsilon:', temp_params.epsilon);\n                    } else if (_this.radio_epsilon_7 == '2') {\n                      // 列表\n                      temp_params.epsilon_upper_limit = _this.form.range_epsilon_7[1] + '';\n                      temp_params.epsilon_lower_limit = _this.form.range_epsilon_7[0] + '';\n                      temp_params.generate_per_file = _this.form.generate_per_file + '';\n                    }\n                  }\n\n                  temp_params = JSON.stringify(temp_params);\n                  adddata.append('params', temp_params);\n                  _this.form.file = document.getElementById('filetemp').files[0];\n\n                  if (!_this.form.file) {\n                    _context.next = 19;\n                    break;\n                  }\n\n                  adddata.append('file', _this.form.file);\n                  _context.next = 21;\n                  break;\n\n                case 19:\n                  _this.loading = false;\n                  return _context.abrupt(\"return\", _this.$message.error('请上传文件！'));\n\n                case 21:\n                  _iterator = _createForOfIteratorHelper(adddata.entries());\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      _step$value = _slicedToArray(_step.value, 2), a = _step$value[0], b = _step$value[1];\n                      console.log(a, b);\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  _context.next = 25;\n                  return _this.$http({\n                    url: '/task/',\n                    data: adddata,\n                    method: 'post'\n                  });\n\n                case 25:\n                  _yield$_this$$http = _context.sent;\n                  data = _yield$_this$$http.data;\n                  console.log('data:', data);\n\n                  if (!(data.code !== 20000)) {\n                    _context.next = 31;\n                    break;\n                  }\n\n                  _this.loading = false;\n                  return _context.abrupt(\"return\", _this.$message.error('添加生成任务失败！' + '错误原因：' + data.msg));\n\n                case 31:\n                  _this.$message.success('提交成功！');\n\n                  _this.reload();\n\n                  _context.next = 36;\n                  break;\n\n                case 35:\n                  _this.loading = false;\n\n                case 36:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    methodChanged: function () {\n      var _methodChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(method_id) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.params_id = method_id;\n                this.form.augmentation_method = this.params_id;\n                this.is_available_to_submit = false;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function methodChanged(_x2) {\n        return _methodChanged.apply(this, arguments);\n      }\n\n      return methodChanged;\n    }(),\n    fileLoad: function fileLoad() {\n      var selectedFile = this.$refs.image_a_file_ref.files[0];\n      var fileName = selectedFile.name;\n      var pos = fileName.lastIndexOf('.');\n      var lastName = fileName.substring(pos, fileName.length);\n      console.log(lastName, lastName.toLowerCase());\n      console.log('lastName:', lastName);\n\n      if (lastName.toLowerCase() !== '.jpg' && lastName.toLowerCase() !== '.jpeg' && lastName.toLowerCase() !== '.zip') {\n        this.$message.error('文件必须为 .jpg/.jpeg/.zip 类型'); // this.$refs.lidar_t_file_ref.clearFiles;\n\n        this.$refs.image_a_file_ref.value = ''; // 清空file文件\n        // return false;\n      } else {\n        this.form.file = selectedFile;\n      }\n    },\n    clickLoad: function clickLoad() {\n      this.$refs.refFile.dispatchEvent(new MouseEvent('click'));\n    },\n    getTypeList: function () {\n      var _getTypeList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$http.get('/augmentation_type/');\n\n              case 2:\n                _yield$this$$http$get = _context3.sent;\n                data = _yield$this$$http$get.data;\n\n                if (!(data.code !== 20000)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('获取任务列表失败！' + '错误原因：' + data.msg));\n\n              case 6:\n                this.typeList = data.data;\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getTypeList() {\n        return _getTypeList.apply(this, arguments);\n      }\n\n      return getTypeList;\n    }()\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var id;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n              id = 1; // const { data: data } = await this.$http.get('/augmentation_method/?augmentation_type=' + id);\n              // if (data.code === 45000) {\n              //     return this.$message.error('该生成类型暂无方法！');\n              // }\n              // if (data.code !== 20000) {\n              //     return this.$message.error('查询生成方法失败！');\n              // }\n              // this.methods = data.data.filter(item => {\n              //     return item.augmentation_type_id === id;\n              // });\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  created: function created() {\n    this.getTypeList();\n  }\n};",{"version":3,"sources":["Image_A_AugTaskAdd.vue"],"names":[],"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","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item> <i class=\"el-icon-picture-outline\"></i> SAR雷达对抗 </el-breadcrumb-item>\n                <el-breadcrumb-item>添加生成任务</el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <div class=\"container\">\n            <div class=\"form-box\">\n                <el-form ref=\"formRef\" :model=\"form\" :rules=\"rulesList\" label-width=\"120px\">\n                    <el-form-item label=\"任务名称\" prop=\"name\">\n                        <el-input v-model=\"form.name\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"任务类型\">\n                        <el-cascader\n                            v-model=\"params_id\"\n                            :options=\"methods\"\n                            :props=\"{ expandTrigger: 'hover' }\"\n                            @change=\"methodChanged\"\n                        ></el-cascader>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id[1] == 7 || params_id[1] == 4 || params_id[1] == 5 || params_id[1] == 6\" label=\"紧急等级\">\n                        <div style=\"float: left; margin-right: 5px; width:300px\">\n                            <!-- <el-input type=\"text\" v-model=\"form.urgency_level\"></el-input> -->\n                            <el-slider v-model=\"form.urgency_level\" :min=\"1\" :max=\"5\" :step=\"1\" :marks=\"mark_group.marks1_5\"> </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"紧急等级:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"任务的紧急程度，系统会根据紧急等级对任务进行调度\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"params_id[1] == 4\" label=\"扰动幅度\">\n                        <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.range_epsilon_6\"></el-input> -->\n                            <!-- <el-slider v-model=\"form.range_epsilon_5\" range :min=\"0.1\" :max=\"10\" :marks=\"range_epsilon_6_marks\" :step=\"0.1\">\n                            </el-slider> -->\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"扰动幅度:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示攻击中对图像的扰动值，可批量设置\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                        <el-radio v-model=\"radio_epsilon_4\" label=\"1\">列表</el-radio>\n                        <el-radio v-model=\"radio_epsilon_4\" label=\"2\">范围</el-radio>\n\n                        <div style=\"margin-right: 5px\" v-if=\"radio_epsilon_4 == '1'\">\n                            <!-- <el-input v-if=\"radio_epsilon_4 == '1'\" type=\"text\" v-model=\"form.epsilon_4\"></el-input> -->\n                            <el-form-item\n                                v-for=\"(domain, index) in form.domain_4\"\n                                :label=\"'幅度' + (index + 1)\"\n                                :key=\"domain.key\"\n                                label-width=\"50px\"\n                            >\n                                <el-slider\n                                    v-model=\"domain.value\"\n                                    show-input\n                                    :min=\"0.1\"\n                                    :max=\"255\"\n                                    :step=\"0.1\"\n                                    :marks=\"mark_group.mark01_255\"\n                                >\n                                </el-slider\n                                ><el-button @click.prevent=\"removeDomain(domain, 4)\" style=\"margin-left: 20px\">删除</el-button>\n                            </el-form-item>\n                            <el-form-item>\n                                <el-button @click=\"addDomain(4)\">新增幅度</el-button>\n                                <el-button @click=\"resetForm('form', 4)\">重置</el-button>\n                            </el-form-item>\n                        </div>\n\n                        <el-slider\n                            v-if=\"radio_epsilon_4 == '2'\"\n                            v-model=\"form.range_epsilon_4\"\n                            range\n                            :min=\"0.1\"\n                            :max=\"255\"\n                            :step=\"0.1\"\n                            :marks=\"mark_group.mark01_255\"\n                        >\n                        </el-slider>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"params_id[1] == 7\" label=\"单步扰动幅度\">\n                        <!-- <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <el-input type=\"number\" v-model=\"form.range_epsilon_5\"></el-input>\n                        </div> -->\n                        <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.range_epsilon_6\"></el-input> -->\n                            <!-- <el-slider v-model=\"form.range_epsilon_5\" range :min=\"0.1\" :max=\"10\" :marks=\"range_epsilon_6_marks\" :step=\"0.1\">\n                            </el-slider> -->\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"单步扰动幅度:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示迭代攻击中每步对图像的扰动值，可批量设置\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                        <el-radio v-model=\"radio_epsilon_7\" label=\"1\">列表</el-radio>\n                        <el-radio v-model=\"radio_epsilon_7\" label=\"2\">范围</el-radio>\n\n                        <div style=\"margin-right: 5px\" v-if=\"radio_epsilon_7 == '1'\">\n                            <!-- <el-input type=\"text\" v-model=\"form.epsilon_7\"></el-input> -->\n                            <el-form-item\n                                v-for=\"(domain, index) in form.domain_7\"\n                                :label=\"'幅度' + (index + 1)\"\n                                :key=\"domain.key\"\n                                label-width=\"50px\"\n                            >\n                                <el-slider\n                                    v-model=\"domain.value\"\n                                    show-input\n                                    :min=\"0.1\"\n                                    :max=\"255\"\n                                    :step=\"0.1\"\n                                    :marks=\"mark_group.mark01_255\"\n                                >\n                                </el-slider\n                                ><el-button @click.prevent=\"removeDomain(domain, 7)\" style=\"margin-left: 20px\">删除</el-button>\n                            </el-form-item>\n                            <el-form-item>\n                                <el-button @click=\"addDomain(7)\">新增幅度</el-button>\n                                <el-button @click=\"resetForm('form', 7)\">重置</el-button>\n                            </el-form-item>\n                        </div>\n\n                        <el-slider\n                            v-if=\"radio_epsilon_7 == '2'\"\n                            v-model=\"form.range_epsilon_7\"\n                            range\n                            :min=\"0.1\"\n                            :max=\"255\"\n                            :step=\"0.1\"\n                            :marks=\"mark_group.mark01_255\"\n                        >\n                        </el-slider>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"params_id[1] == 5\" label=\"单步扰动幅度\">\n                        <!-- <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <el-input type=\"number\" v-model=\"form.range_epsilon_5\"></el-input>\n                        </div> -->\n                        <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.range_epsilon_6\"></el-input> -->\n                            <!-- <el-slider v-model=\"form.range_epsilon_5\" range :min=\"0.1\" :max=\"10\" :marks=\"range_epsilon_6_marks\" :step=\"0.1\">\n                            </el-slider> -->\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"单步扰动幅度:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示迭代攻击中每步对图像的扰动值，可批量设置\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                        <el-radio v-model=\"radio_epsilon_5\" label=\"1\">列表</el-radio>\n                        <el-radio v-model=\"radio_epsilon_5\" label=\"2\">范围</el-radio>\n\n                        <div style=\"margin-right: 5px\" v-if=\"radio_epsilon_5 == '1'\">\n                            <!-- <el-input type=\"text\" v-model=\"form.epsilon_5\"></el-input> -->\n                            <el-form-item\n                                v-for=\"(domain, index) in form.domain_5\"\n                                :label=\"'幅度' + (index + 1)\"\n                                :key=\"domain.key\"\n                                label-width=\"50px\"\n                            >\n                                <el-slider\n                                    v-model=\"domain.value\"\n                                    show-input\n                                    :min=\"0.1\"\n                                    :max=\"255\"\n                                    :step=\"0.1\"\n                                    :marks=\"mark_group.mark01_255\"\n                                >\n                                </el-slider\n                                ><el-button @click.prevent=\"removeDomain(domain, 5)\" style=\"margin-left: 20px\">删除</el-button>\n                            </el-form-item>\n                            <el-form-item>\n                                <el-button @click=\"addDomain(5)\">新增幅度</el-button>\n                                <el-button @click=\"resetForm('form', 5)\">重置</el-button>\n                            </el-form-item>\n                        </div>\n\n                        <el-slider\n                            v-if=\"radio_epsilon_5 == '2'\"\n                            v-model=\"form.range_epsilon_5\"\n                            range\n                            :min=\"0.1\"\n                            :max=\"255\"\n                            :step=\"0.1\"\n                            :marks=\"mark_group.mark01_255\"\n                        >\n                        </el-slider>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id[1] == 6\" label=\"单步扰动幅度\">\n                        <!-- <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <el-slider v-model=\"form.range_epsilon_6\" range :min=\"0.1\" :max=\"10\" :marks=\"range_epsilon_6_marks\" :step=\"0.1\">\n                            </el-slider>\n                        </div> -->\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"单步扰动幅度:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示迭代攻击中每步对图像的扰动值【推荐取值0.5以上】，可批量设置\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                        <el-radio v-model=\"radio_epsilon_6\" label=\"1\">列表</el-radio>\n                        <el-radio v-model=\"radio_epsilon_6\" label=\"2\">范围</el-radio>\n\n                        <div style=\"margin-right: 5px\" v-if=\"radio_epsilon_6 == '1'\">\n                            <!-- <el-input type=\"text\" v-model=\"form.epsilon_6\"></el-input> -->\n                            <el-form-item\n                                v-for=\"(domain, index) in form.domain_6\"\n                                :label=\"'幅度' + (index + 1)\"\n                                :key=\"domain.key\"\n                                label-width=\"50px\"\n                            >\n                                <el-slider\n                                    v-model=\"domain.value\"\n                                    show-input\n                                    :min=\"0.1\"\n                                    :max=\"255\"\n                                    :step=\"0.1\"\n                                    :marks=\"mark_group.mark01_255\"\n                                >\n                                </el-slider\n                                ><el-button @click.prevent=\"removeDomain(domain, 6)\" style=\"margin-left: 20px\">删除</el-button>\n                            </el-form-item>\n                            <el-form-item>\n                                <el-button @click=\"addDomain(6)\">新增幅度</el-button>\n                                <el-button @click=\"resetForm('form', 6)\">重置</el-button>\n                            </el-form-item>\n                        </div>\n\n                        <el-slider\n                            v-if=\"radio_epsilon_6 == '2'\"\n                            v-model=\"form.range_epsilon_6\"\n                            range\n                            :min=\"0.1\"\n                            :max=\"255\"\n                            :step=\"0.1\"\n                            :marks=\"mark_group.mark01_255\"\n                        >\n                        </el-slider>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"radio_epsilon_7 == '2' && params_id[1] == 7\" label=\"单文件生成数量\" prop=\"generate_per_file\">\n                        <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.generate_per_file_and_params\"></el-input> -->\n                            <el-slider v-model=\"form.generate_per_file\" :min=\"1\" :max=\"50\" :marks=\"marks\"> </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"单文件生成数量及参数:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示所期望生成的图像数量\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"radio_epsilon_4 == '2' && params_id[1] == 4\" label=\"单文件生成数量\" prop=\"generate_per_file\">\n                        <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.generate_per_file_and_params\"></el-input> -->\n                            <el-slider v-model=\"form.generate_per_file\" :min=\"1\" :max=\"50\" :marks=\"marks\"> </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"单文件生成数量及参数:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示所期望生成的图像数量\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"radio_epsilon_5 == '2' && params_id[1] == 5\" label=\"单文件生成数量\" prop=\"generate_per_file\">\n                        <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.generate_per_file_and_params\"></el-input> -->\n                            <el-slider v-model=\"form.generate_per_file\" :min=\"1\" :max=\"50\" :marks=\"marks\"> </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"单文件生成数量及参数:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示所期望生成的图像数量\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"radio_epsilon_6 == '2' && params_id[1] == 6\" label=\"单文件生成数量\" prop=\"generate_per_file\">\n                        <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.generate_per_file_and_params\"></el-input> -->\n                            <el-slider v-model=\"form.generate_per_file\" :min=\"1\" :max=\"50\" :marks=\"marks\"> </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"单文件生成数量及参数:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示所期望生成的图像数量\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"params_id[1] == 5\" label=\"迭代次数上限\">\n                        <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.ite_limit\"></el-input> -->\n                            <el-slider v-model=\"form.ite_limit\" :min=\"1\" :max=\"50\" :marks=\"marks\"> </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"迭代次数上限:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示可对图像单步扰动的最大次数\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id[1] == 7\" label=\"迭代次数\" prop=\"num_iters\">\n                        <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.ite_limit\"></el-input> -->\n                            <el-slider v-model=\"form.num_iters\" :min=\"1\" :max=\"50\" :marks=\"marks\"> </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"迭代次数:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示可扰动的最大次数\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id[1] == 6\" label=\"最多扰动特征数比例\" prop=\"gamma\">\n                        <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.ite_limit\"></el-input> -->\n                            <el-slider v-model=\"form.gamma\" :min=\"1\" :max=\"100\" :marks=\"ite_limit_bili_marks\"> </el-slider>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"最多扰动特征数比例:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"【推荐取值50%-100%】\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id[1] == 6\" label=\"定向攻击标签\" prop=\"target\">\n                        <div class=\"block\" style=\"float: left; margin-right: 20px; width: 200px\">\n                            <!-- <el-input type=\"number\" v-model=\"form.ite_limit\"></el-input> -->\n                            <!-- <el-slider v-model=\"form.ite_limit\" range :max=\"50\" :marks=\"marks\"> </el-slider> -->\n                            <el-cascader\n                                v-model=\"directional_id\"\n                                :options=\"directional\"\n                                :props=\"{ expandTrigger: 'hover' }\"\n                                @change=\"handleChange\"\n                            ></el-cascader>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"定向攻击标签:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"选择定向攻击的方式\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id[1] == 6\" label=\"攻击方向\" prop=\"positive\">\n                        <el-radio v-model=\"form.positive\" label=\"1\">正向</el-radio>\n                        <el-radio v-model=\"form.positive\" label=\"0\">负向</el-radio>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"攻击方向:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"对抗方向可分为正向或者负向\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n\n                    <el-form-item v-if=\"params_id[1] == 4 || params_id[1] == 5 || params_id[1] == 6 || params_id[1] == 7\" label=\"严格模式\">\n                        <div style=\"float: left; margin-right: 5px\">\n                            <el-switch v-model=\"form.strict_mode\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                        </div>\n                        <div style=\"float: left\">\n                            <el-popover\n                                placement=\"right-start\"\n                                title=\"严格模式:\"\n                                width=\"200\"\n                                trigger=\"hover\"\n                                content=\"表示是否是严格模式(“是”，表示生成结果必须使得模型做出错误判断才算扩增数据；“否”，表示直接经过参数设定生成的数据即视为扩增数据)\"\n                                style=\"float: left\"\n                            >\n                                <i class=\"el-icon-info\" slot=\"reference\"></i>\n                            </el-popover>\n                        </div>\n                    </el-form-item>\n                    <el-form-item v-if=\"params_id[1] == 7 || params_id[1] == 4 || params_id[1] == 5 || params_id[1] == 6\" label=\"上传文件\">\n                        <input type=\"file\" id=\"filetemp\" prop=\"form.file\" ref=\"image_a_file_ref\" @change=\"fileLoad\" />\n                        <el-popover\n                            placement=\"right-start\"\n                            title=\"上传文件:\"\n                            width=\"200\"\n                            trigger=\"hover\"\n                            content=\"该方法所需上传文件类型限制为 .jpg/.jpeg/.zip 类型\"\n                        >\n                            <i class=\"el-icon-info\" slot=\"reference\"></i>\n                        </el-popover>\n                        <br />\n                    </el-form-item>\n                    <el-form-item>\n                        <el-button\n                            type=\"primary\"\n                            :disabled=\"is_available_to_submit\"\n                            @click=\"onSubmit\"\n                            :loading=\"loading\"\n                            element-loading-spinner=\"el-icon-loading\"\n                            element-loading-text=\"提交中\"\n                            >表单提交</el-button\n                        >\n                    </el-form-item>\n                </el-form>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport qs from 'qs';\nexport default {\n    name: 'baseform',\n    inject: ['reload'],\n    data() {\n        const isNotNag_int = (rule, value, callback) => {\n            const boolean = new RegExp('^[1-9][0-9]*$').test(value);\n            if (value !== '0' && !boolean) {\n                callback(new Error('请输入非负整数'));\n            } else {\n                callback();\n            }\n        };\n        const generate_per_file_and_paramsRule = (rule, value, callback) => {\n            if (value < 1) {\n                callback(new Error('只能为大于等于1整数'));\n            } else {\n                callback();\n            }\n        };\n        const isNum = (rule, value, callback) => {\n            const age = /^[0-9]*$/;\n            if (!age.test(value)) {\n                callback(new Error('只能为非负数字'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag = (rule, value, callback) => {\n            if (value < 0) {\n                callback(new Error('只能为非负数'));\n            } else {\n                callback();\n            }\n        };\n        const epsilonRule = (rule, value, callback) => {\n            var list = value.split(',');\n            for (var i in list) {\n                if (!typeof parseFloat(list[i]) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n                    callback(new Error('请填写合理的非负数字列表'));\n                } else {\n                    callback();\n                }\n            }\n        };\n        return {\n            mark_group: {\n                mark0: {\n                    0: '0'\n                },\n                mark01_255: {\n                    0.1: '0.1',\n                    255: '255'\n                },\n                marks0_5: {\n                    0: '0',\n                    5: '5'\n                },\n                marks1_5: {\n                    1: '1',\n                    5: '5'\n                }\n            },\n            radio_epsilon_4: '1',\n            radio_epsilon_5: '1',\n            radio_epsilon_6: '1',\n            radio_epsilon_7: '1',\n            loading: false,\n\n            form: {\n                domain_4: [\n                    {\n                        value: 0\n                    }\n                ],\n                domain_5: [\n                    {\n                        value: 0\n                    }\n                ],\n                domain_6: [\n                    {\n                        value: 0\n                    }\n                ],\n                domain_7: [\n                    {\n                        value: 0\n                    }\n                ],\n                target: null,\n                positive: '1',\n                name: '',\n                augmentation_method: null,\n                epsilon: '',\n                // range_epsilon_5: null,\n                // range_epsilon_6: null,\n                range_epsilon_7: [0.1, 0.1],\n                range_epsilon_4: [0.1, 0.1],\n                range_epsilon_5: [0.1, 0.1],\n                range_epsilon_6: [0.1, 0.1],\n                // ite_limit: null,\n                ite_limit: null,\n                num_iters: [1, 1],\n                gamma: [1, 1],\n                whether_to_rotate: false,\n                // generate_per_file_and_params: null,\n                generate_per_file_and_params: 1,\n                // generate_per_file: null,\n                generate_per_file: 1,\n                boundary_constraint: null,\n                strict_mode: false,\n                master: this.$store.state.userId,\n                urgency_level: 0,\n                file: {},\n                epsilon_7: null,\n                epsilon_4: null,\n                epsilon_5: null,\n                epsilon_6: null\n            },\n\n            marks: {\n                1: '1',\n                50: '50'\n            },\n            range_epsilon_6_marks: {\n                0.1: '0.1',\n                10: '10'\n            },\n            ite_limit_bili_marks: {\n                1: '1%',\n                100: '100%'\n            },\n            methods: [\n                {\n                    value: '0',\n                    label: '黑盒对抗',\n                    children: [\n                        {\n                            // Guassian_noise\n                            value: '7',\n                            label: 'SIMBA'\n                        }\n                    ]\n                },\n                {\n                    value: '1',\n                    label: '白盒对抗',\n                    children: [\n                        {\n                            value: '4',\n                            label: 'FGSM'\n                        },\n                        {\n                            value: '5',\n                            label: 'I-FGSM(BIM)'\n                        },\n                        {\n                            value: '6',\n                            label: 'JSMA'\n                        }\n                    ]\n                }\n            ],\n            directional: [\n                {\n                    value: '0',\n                    label: '定向',\n                    children: [\n                        {\n                            value: '0',\n                            label: '2S1'\n                        },\n                        {\n                            value: '1',\n                            label: 'BMP2'\n                        },\n                        {\n                            value: '2',\n                            label: 'BRDM_2'\n                        },\n                        {\n                            value: '3',\n                            label: 'BTR60'\n                        },\n                        {\n                            value: '4',\n                            label: 'BTR70'\n                        },\n                        {\n                            value: '5',\n                            label: 'D7'\n                        },\n                        {\n                            value: '6',\n                            label: 'T62'\n                        },\n                        {\n                            value: '7',\n                            label: 'T72'\n                        },\n                        {\n                            value: '8',\n                            label: 'ZIL131'\n                        },\n                        {\n                            value: '9',\n                            label: 'ZSU_23_4'\n                        }\n                    ]\n                },\n                {\n                    value: '10',\n                    label: '非定向',\n                    children: [\n                        {\n                            // Guassian_noise\n                            value: '10',\n                            label: '随机'\n                        }\n                    ]\n                }\n            ],\n            fileList: [],\n            typeList: [],\n            params_id: [null, null],\n            directional_id: ['10', '10'],\n            is_available_to_submit: true,\n            rules1: {\n                // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: epsilonRule, trigger: 'blur' }\n                ],\n                generate_per_file_and_params: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            rules2: {\n                // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                range_epsilon_5: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ]\n            },\n            rules3: {\n                // augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                range_epsilon_6: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                boundary_constraint: [\n                    { required: true, message: '请输入数字', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ]\n            }\n        };\n    },\n    computed: {\n        rulesList: function() {\n            if (this.params_id === 1) {\n                return this.rules1;\n            } else if (this.params_id === 2) {\n                return this.rules2;\n            } else {\n                return this.rules3;\n            }\n        }\n    },\n    methods: {\n        resetForm(formName, index) {\n            console.log('formName:', formName);\n            // this.$refs[formName].resetFields();\n            if (index == 4) {\n                this.form.domain_4 = [\n                    {\n                        value: 0\n                    }\n                ];\n            } else if (index == 5) {\n                this.form.domain_5 = [\n                    {\n                        value: 0\n                    }\n                ];\n            } else if (index == 6) {\n                this.form.domain_6 = [\n                    {\n                        value: 0\n                    }\n                ];\n            } else if (index == 7) {\n                this.form.domain_7 = [\n                    {\n                        value: 0\n                    }\n                ];\n            }\n        },\n\n        removeDomain(item, index) {\n            if (index == 4) {\n                if (this.form.domain_4.length == 1) {\n                    this.$message.error('扰动幅度不可为空!');\n                } else {\n                    var item_index = this.form.domain_4.indexOf(item);\n                    if (item_index !== -1) {\n                        this.form.domain_4.splice(item_index, 1);\n                    }\n                }\n            } else if (index == 5) {\n                if (this.form.domain_5.length == 1) {\n                    this.$message.error('单步扰动幅度不可为空!');\n                } else {\n                    var item_index = this.form.domain_5.indexOf(item);\n                    if (item_index !== -1) {\n                        this.form.domain_5.splice(item_index, 1);\n                    }\n                }\n            } else if (index == 6) {\n                if (this.form.domain_6.length == 1) {\n                    this.$message.error('单步扰动幅度不可为空!');\n                } else {\n                    var item_index = this.form.domain_6.indexOf(item);\n                    if (item_index !== -1) {\n                        this.form.domain_6.splice(item_index, 1);\n                    }\n                }\n            } else if (index == 7) {\n                if (this.form.domain_7.length == 1) {\n                    this.$message.error('单步扰动幅度不可为空!');\n                } else {\n                    var item_index = this.form.domain_7.indexOf(item);\n                    if (item_index !== -1) {\n                        this.form.domain_7.splice(item_index, 1);\n                    }\n                }\n            }\n        },\n        addDomain(index) {\n            if (index == 4) {\n                this.form.domain_4.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            } else if (index == 5) {\n                this.form.domain_5.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            } else if (index == 6) {\n                this.form.domain_6.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            } else if (index == 7) {\n                this.form.domain_7.push({\n                    value: 0,\n                    key: Date.now()\n                });\n            }\n        },\n        handleChange() {\n            console.log('this.params_id:', this.params_id);\n        },\n        trim(str) {\n            return str.replace(/(^s*)|(s*$)/g, '');\n        },\n        onSubmit() {\n            this.loading = true;\n            this.form.master = this.$store.state.userId;\n            this.$refs.formRef.validate(async valid => {\n                // valid\n                if (1) {\n                    console.log('this.form.augmentation_method[1]:', this.form.augmentation_method[1]);\n                    if (this.form.augmentation_method[1] === '') {\n                        this.loading = false;\n                        return this.$message.error('请选择生成方法!');\n                    }\n\n                    var adddata = new FormData();\n                    if (this.form.name) {\n                        adddata.append('name', this.form.name);\n                    }\n                    adddata.append('augmentation_method', this.form.augmentation_method[1]);\n                    adddata.append('master', this.form.master);\n                    adddata.append('urgency_level', this.form.urgency_level + '');\n                    // adddata.append('urgency_level', this.form.urgency_level);\n                    var temp_params = {};\n\n                    if (this.form.augmentation_method[1] == 4) {\n                        temp_params = {\n                            strict_mode: this.form.strict_mode\n                        };\n                        temp_params.strict_mode = this.form.strict_mode ? '1' : '0';\n                        if (this.radio_epsilon_4 == '1') {\n                            // 列表\n                            // epsilon: '[' + this.form.epsilon + ']',\n                            // temp_params.epsilon = '[' + this.form.epsilon_4 + ']';\n                            var temp = [];\n                            for (var x in this.form.domain_4) {\n                                console.log('this.form.domain_4[x][\"value\"]:', this.form.domain_4[x]['value']);\n                                temp.push(this.form.domain_4[x]['value']);\n                            }\n                            temp_params.epsilon = '[' + temp.toString() + ']';\n                            console.log('temp_params.epsilon:', temp_params.epsilon);\n                        } else if (this.radio_epsilon_4 == '2') {\n                            // 范围\n                            temp_params.epsilon_upper_limit = this.form.range_epsilon_4[1] + '';\n                            temp_params.epsilon_lower_limit = this.form.range_epsilon_4[0] + '';\n                            temp_params.generate_per_file = this.form.generate_per_file + '';\n                        }\n                    } else if (this.form.augmentation_method[1] == 5) {\n                        temp_params = {\n                            ite_limit: this.form.ite_limit + '',\n                            strict_mode: this.form.strict_mode\n                        };\n                        temp_params.strict_mode = this.form.strict_mode ? '1' : '0';\n                        if (this.radio_epsilon_5 == '1') {\n                            // 列表\n                            // epsilon: '[' + this.form.epsilon + ']',\n                            // temp_params.epsilon = '[' + this.form.epsilon_5 + ']';\n                            var temp = [];\n                            for (var x in this.form.domain_5) {\n                                console.log('this.form.domain_5[x][\"value\"]:', this.form.domain_5[x]['value']);\n                                temp.push(this.form.domain_5[x]['value']);\n                            }\n                            temp_params.epsilon = '[' + temp.toString() + ']';\n                            console.log('temp:', temp);\n                            console.log('temp_params.epsilon:', temp_params.epsilon);\n                        } else if (this.radio_epsilon_5 == '2') {\n                            // 列表\n                            temp_params.epsilon_upper_limit = this.form.range_epsilon_5[1] + '';\n                            temp_params.epsilon_lower_limit = this.form.range_epsilon_5[0] + '';\n                            temp_params.generate_per_file = this.form.generate_per_file + '';\n                        }\n                    } else if (this.form.augmentation_method[1] == 6) {\n                        temp_params = {\n                            gamma: this.form.gamma / 100,\n                            positive: this.form.positive,\n                            strict_mode: this.form.strict_mode\n                        };\n                        temp_params.strict_mode = this.form.strict_mode ? '1' : '0';\n                        if (this.radio_epsilon_6 == '1') {\n                            // 列表\n                            // epsilon: '[' + this.form.epsilon + ']',\n                            // temp_params.epsilon = '[' + this.form.epsilon_6 + ']';\n                            var temp = [];\n                            for (var x in this.form.domain_6) {\n                                console.log('this.form.domain_6[x][\"value\"]:', this.form.domain_6[x]['value']);\n                                temp.push(this.form.domain_6[x]['value']);\n                            }\n                            temp_params.epsilon = '[' + temp.toString() + ']';\n                            console.log('temp:', temp);\n                            console.log('temp_params.epsilon:', temp_params.epsilon);\n                        } else if (this.radio_epsilon_6 == '2') {\n                            // 列表\n                            temp_params.epsilon_upper_limit = this.form.range_epsilon_6[1] + '';\n                            temp_params.epsilon_lower_limit = this.form.range_epsilon_6[0] + '';\n                            temp_params.generate_per_file = this.form.generate_per_file + '';\n                        }\n                        if (this.directional_id[1] != 10) {\n                            temp_params.target = this.directional_id[1];\n                        }\n                    } else if (this.form.augmentation_method[1] == 7) {\n                        temp_params = {\n                            num_iters: this.form.num_iters + '',\n                            strict_mode: this.form.strict_mode\n                        };\n                        temp_params.strict_mode = this.form.strict_mode ? '1' : '0';\n                        if (this.radio_epsilon_7 == '1') {\n                            // 列表\n                            // temp_params.epsilon = '[' + this.form.epsilon_7 + ']';\n                            var temp = [];\n                            for (var x in this.form.domain_7) {\n                                console.log('this.form.domain_7[x][\"value\"]:', this.form.domain_7[x]['value']);\n                                temp.push(this.form.domain_7[x]['value']);\n                            }\n                            temp_params.epsilon = '[' + temp.toString() + ']';\n                            console.log('temp:', temp);\n                            console.log('temp_params.epsilon:', temp_params.epsilon);\n                        } else if (this.radio_epsilon_7 == '2') {\n                            // 列表\n                            temp_params.epsilon_upper_limit = this.form.range_epsilon_7[1] + '';\n                            temp_params.epsilon_lower_limit = this.form.range_epsilon_7[0] + '';\n                            temp_params.generate_per_file = this.form.generate_per_file + '';\n                        }\n                    }\n\n                    temp_params = JSON.stringify(temp_params);\n                    adddata.append('params', temp_params);\n\n                    this.form.file = document.getElementById('filetemp').files[0];\n                    if (this.form.file) {\n                        adddata.append('file', this.form.file);\n                    } else {\n                        this.loading = false;\n                        return this.$message.error('请上传文件！');\n                    }\n\n                    for (var [a, b] of adddata.entries()) {\n                        console.log(a, b);\n                    }\n                    const { data: data } = await this.$http({\n                        url: '/task/',\n                        data: adddata,\n                        method: 'post'\n                    });\n                    console.log('data:', data);\n                    if (data.code !== 20000) {\n                        this.loading = false;\n                        return this.$message.error('添加生成任务失败！' + '错误原因：' + data.msg);\n                    }\n                    this.$message.success('提交成功！');\n                    this.reload();\n                } else {\n                    this.loading = false;\n                }\n            });\n        },\n        async methodChanged(method_id) {\n            this.params_id = method_id;\n            this.form.augmentation_method = this.params_id;\n\n            this.is_available_to_submit = false;\n        },\n        fileLoad() {\n            const selectedFile = this.$refs.image_a_file_ref.files[0];\n\n            let fileName = selectedFile.name;\n            let pos = fileName.lastIndexOf('.');\n            let lastName = fileName.substring(pos, fileName.length);\n            console.log(lastName, lastName.toLowerCase());\n            console.log('lastName:', lastName);\n            if (lastName.toLowerCase() !== '.jpg' && lastName.toLowerCase() !== '.jpeg' && lastName.toLowerCase() !== '.zip') {\n                this.$message.error('文件必须为 .jpg/.jpeg/.zip 类型');\n                // this.$refs.lidar_t_file_ref.clearFiles;\n                this.$refs.image_a_file_ref.value = ''; // 清空file文件\n                // return false;\n            } else {\n                this.form.file = selectedFile;\n            }\n        },\n        clickLoad() {\n            this.$refs.refFile.dispatchEvent(new MouseEvent('click'));\n        },\n        async getTypeList() {\n            const { data: data } = await this.$http.get('/augmentation_type/');\n            if (data.code !== 20000) {\n                return this.$message.error('获取任务列表失败！' + '错误原因：' + data.msg);\n            }\n\n            this.typeList = data.data;\n        }\n    },\n    async mounted() {\n        this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n\n        var id = 1;\n        // const { data: data } = await this.$http.get('/augmentation_method/?augmentation_type=' + id);\n        // if (data.code === 45000) {\n        //     return this.$message.error('该生成类型暂无方法！');\n        // }\n        // if (data.code !== 20000) {\n        //     return this.$message.error('查询生成方法失败！');\n        // }\n        // this.methods = data.data.filter(item => {\n        //     return item.augmentation_type_id === id;\n        // });\n    },\n    created() {\n        this.getTypeList();\n    }\n};\n</script>\n<style scoped>\n.marginRight {\n    margin-right: 10px !important;\n}\n</style>\n"],"sourceRoot":"src/components/page"}]}