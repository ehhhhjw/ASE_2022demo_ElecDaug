{"remainingRequest":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/thread-loader/dist/cjs.js!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/User_Manage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/User_Manage.vue","mtime":1636388172000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport qs from 'qs';\nexport default {\n  data: function data() {\n    return {\n      queryInfo: {\n        page: 1\n      },\n      userList: [],\n      total: 0,\n      totalPageNum: 0,\n      addDialogVisible: false,\n      addForm: {\n        username: '',\n        password: '',\n        nickname: '',\n        user_group: ''\n      },\n      addFormRules: {\n        username: [{\n          required: true,\n          message: 'Please enter the user name',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: 'The length of the user name is between 3 and 10 characters',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please input the password',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: 'The length of the password is between 6 and 15 characters',\n          trigger: 'blur'\n        }]\n      },\n      editDialogVisible: false,\n      editForm: {\n        username: '',\n        new_password: '',\n        new_nickname: '',\n        new_user_group: ''\n      },\n      editFormRules: {\n        username: [{\n          required: true,\n          message: 'Please enter the username',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: 'The length of the user name is between 3 and 10 characters',\n          trigger: 'blur'\n        }]\n      },\n      searchUserName: '',\n      visibleSubmit: '',\n      userRight: '',\n      colomnHiden: true,\n      value: '100',\n      formInline_Self: {\n        searchType: '',\n        searchTaskInfo: ''\n      }\n    };\n  },\n  created: function created() {\n    this.getUserList();\n    this.userRight = this.$store.state.user_group_name;\n    this.colomnHiden = this.userRight === '超级管理员' ? false : true;\n  },\n  methods: {\n    pageReflash: function pageReflash() {\n      this.queryInfo.page = 1;\n    },\n    SearchUser: function () {\n      var _SearchUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var search_params, _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.formInline_Self.searchType === '')) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: 'Please select query mode',\n                  offset: 70\n                }));\n\n              case 2:\n                if (!(this.formInline_Self.searchTaskInfo === '')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: 'Please enter the query content',\n                  offset: 70\n                }));\n\n              case 4:\n                search_params = '';\n\n                if (this.formInline_Self.searchType === '用户id') {\n                  search_params = '/user/id/admin/search/?user_id=' + this.formInline_Self.searchTaskInfo;\n                } else if (this.formInline_Self.searchType === '用户名') {\n                  search_params = '/user/username/admin/search/?username=' + this.formInline_Self.searchTaskInfo + '&search_type=1';\n                } else if (this.formInline_Self.searchType === '用户昵称') {\n                  search_params = '/user/nickname/admin/search/?nickname=' + this.formInline_Self.searchTaskInfo + '&search_type=1';\n                }\n\n                _context.next = 8;\n                return this.$http.get(search_params);\n\n              case 8:\n                _yield$this$$http$get = _context.sent;\n                data = _yield$this$$http$get.data;\n\n                if (!(data.code !== 20000)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: 'The user was not searched!',\n                  offset: 70\n                }));\n\n              case 12:\n                if (this.formInline_Self.searchType === '用户id') {\n                  this.userList = [];\n                  this.userList.push(data.data);\n                } else {\n                  this.userList = data.data.details;\n                }\n\n                this.total_Self = this.userList ? this.userList.length : 0;\n                this.totalPageNum = data.data.pages;\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function SearchUser() {\n        return _SearchUser.apply(this, arguments);\n      }\n\n      return SearchUser;\n    }(),\n    temp: function temp() {},\n    getUserList: function () {\n      var _getUserList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$$http$get2, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get('/user/all/admin/search/' + '?page=' + this.queryInfo.page);\n\n              case 2:\n                _yield$this$$http$get2 = _context2.sent;\n                data = _yield$this$$http$get2.data;\n\n                if (!(data.code !== 20000)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: 'Failed to get user list!: ' + data.msg,\n                  offset: 70\n                }));\n\n              case 6:\n                this.userList = data.data.details;\n                console.log('this.userList:', this.userList);\n                this.total = data.data.pages * 10;\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getUserList() {\n        return _getUserList.apply(this, arguments);\n      }\n\n      return getUserList;\n    }(),\n    FuzzySearvhchUser: function () {\n      var _FuzzySearvhchUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$this$$http$get3, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.searchUserName === '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: 'Please enter the query content',\n                  offset: 70\n                }));\n\n              case 2:\n                _context3.next = 4;\n                return this.$http.get('/user/username/admin/search/' + '?username=' + this.searchUserName + '&search_type=1');\n\n              case 4:\n                _yield$this$$http$get3 = _context3.sent;\n                data = _yield$this$$http$get3.data;\n\n                if (!(data.code !== 20000)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: 'The user was not searched!',\n                  offset: 70\n                }));\n\n              case 8:\n                this.userList = data.data.details;\n                this.total = this.userList.length;\n                this.totalPageNum = data.data.pages;\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function FuzzySearvhchUser() {\n        return _FuzzySearvhchUser.apply(this, arguments);\n      }\n\n      return FuzzySearvhchUser;\n    }(),\n    PreciseSearchUser: function () {\n      var _PreciseSearchUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$this$$http$get4, data;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.searchUserName === '')) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: 'Please enter the query content',\n                  offset: 70\n                }));\n\n              case 2:\n                _context4.next = 4;\n                return this.$http.get('/user/username/admin/search/' + '?username=' + this.searchUserName + '&search_type=0');\n\n              case 4:\n                _yield$this$$http$get4 = _context4.sent;\n                data = _yield$this$$http$get4.data;\n\n                if (!(data.code !== 20000)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: 'The user was not searched!',\n                  offset: 70\n                }));\n\n              case 8:\n                this.userList = [];\n                this.userList.push(data.data);\n                this.total = this.userList ? this.userList.length : 0;\n                this.totalPageNum = data.data.pages;\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function PreciseSearchUser() {\n        return _PreciseSearchUser.apply(this, arguments);\n      }\n\n      return PreciseSearchUser;\n    }(),\n    handleSizeChange: function handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getUserList();\n    },\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      this.queryInfo.page = newPage;\n      this.getUserList();\n    },\n    removeUserById: function () {\n      var _removeUserById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(username) {\n        var confirmResult, _yield$this$$http$del, data;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.$confirm('This operation will permanently delete the user. Do you want to continue?', 'Tip', {\n                  confirmButtonText: 'OK',\n                  cancelButtonText: 'cancel',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context5.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", this.$message.info({\n                  showClose: true,\n                  message: 'Deletion cancelled',\n                  offset: 70\n                }));\n\n              case 5:\n                if (!(this.userList.length == 1)) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: 'Failed to delete user!: The system must have at least one user!',\n                  offset: 70\n                }));\n\n              case 7:\n                _context5.next = 9;\n                return this.$http.delete('/user/delete/' + '?username=' + username);\n\n              case 9:\n                _yield$this$$http$del = _context5.sent;\n                data = _yield$this$$http$del.data;\n\n                if (!(data.code !== 20000)) {\n                  _context5.next = 13;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", this.$message.error({\n                  showClose: true,\n                  message: 'Failed to delete user!: ' + data.msg,\n                  offset: 70\n                }));\n\n              case 13:\n                this.$message.success({\n                  showClose: true,\n                  message: 'User deleted successfully!',\n                  offset: 70\n                });\n                this.getUserList();\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function removeUserById(_x) {\n        return _removeUserById.apply(this, arguments);\n      }\n\n      return removeUserById;\n    }(),\n    addUser: function addUser() {\n      var _this = this;\n\n      this.$refs.addFormRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(valid) {\n          var _yield$_this$$http$po, data;\n\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  if (valid) {\n                    _context6.next = 2;\n                    break;\n                  }\n\n                  return _context6.abrupt(\"return\");\n\n                case 2:\n                  _context6.next = 4;\n                  return _this.$http.post('/user/register/', qs.stringify(_this.addForm));\n\n                case 4:\n                  _yield$_this$$http$po = _context6.sent;\n                  data = _yield$_this$$http$po.data;\n\n                  if (!(data.code !== 20000)) {\n                    _context6.next = 8;\n                    break;\n                  }\n\n                  return _context6.abrupt(\"return\", _this.$message.error({\n                    showClose: true,\n                    message: 'Failed to add user!: ' + data.msg,\n                    offset: 70\n                  }));\n\n                case 8:\n                  _this.$message.success({\n                    showClose: true,\n                    message: 'User added successfully!',\n                    offset: 70\n                  });\n\n                  _this.addDialogVisible = false;\n\n                  _this.getUserList();\n\n                case 11:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    addDialogClosed: function addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    showEditDialog: function () {\n      var _showEditDialog = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(username) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.editForm.username = username;\n                this.editDialogVisible = true;\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function showEditDialog(_x3) {\n        return _showEditDialog.apply(this, arguments);\n      }\n\n      return showEditDialog;\n    }(),\n    editDialogClosed: function editDialogClosed() {\n      this.$refs.editFormRef.resetFields();\n    },\n    editUserInfo: function editUserInfo() {\n      var _this2 = this;\n\n      this.$refs.editFormRef.validate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(valid) {\n          var adddata, num, _yield$_this2$$http, data;\n\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  if (valid) {\n                    _context8.next = 2;\n                    break;\n                  }\n\n                  return _context8.abrupt(\"return\");\n\n                case 2:\n                  adddata = new FormData();\n                  adddata.append('username', _this2.editForm.username);\n\n                  if (_this2.editForm.new_password) {\n                    adddata.append('new_password', _this2.editForm.new_password);\n                  }\n\n                  if (_this2.editForm.new_nickname) {\n                    adddata.append('new_nickname', _this2.editForm.new_nickname);\n                  }\n\n                  if (_this2.editForm.new_user_group) {\n                    num = _this2.editForm.new_user_group === '超级管理员' ? 1 : 0;\n                    adddata.append('new_user_group', num);\n                  }\n\n                  _context8.next = 9;\n                  return _this2.$http({\n                    url: '/user/',\n                    data: adddata,\n                    method: 'put'\n                  });\n\n                case 9:\n                  _yield$_this2$$http = _context8.sent;\n                  data = _yield$_this2$$http.data;\n\n                  if (!(data.code !== 20000)) {\n                    _context8.next = 13;\n                    break;\n                  }\n\n                  return _context8.abrupt(\"return\", _this2.$message.error({\n                    showClose: true,\n                    message: 'Failed to edit user!: ' + data.msg,\n                    offset: 70\n                  }));\n\n                case 13:\n                  _this2.$message.success({\n                    showClose: true,\n                    message: 'Edit user succeeded!',\n                    offset: 70\n                  });\n\n                  _this2.editDialogVisible = false;\n\n                  _this2.getUserList();\n\n                case 16:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    isBlank_login: function isBlank_login(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = 'Never logged in';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      return value;\n    }\n  },\n  mounted: function mounted() {\n    this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n  }\n};",null]}