{"remainingRequest":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/Lidar_T_AugTaskList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/src/components/page/Lidar_T_AugTaskList.vue","mtime":1628741922000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _slicedToArray from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _typeof from \"/Users/hejiawei/Desktop/LidarPlatformFrontend-hjw 2/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as echarts from 'echarts';\nimport 'echarts-gl';\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport vTable from \"./Table.vue\";\nexport default {\n  data: function data() {\n    var _ref;\n\n    var isNotNag_int_urg = function isNotNag_int_urg(rule, value, callback) {\n      var boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n      if (value !== 0 && !boolean) {\n        callback(new Error('请输入非负整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNotNag_int = function isNotNag_int(rule, value, callback) {\n      var boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n      if (value !== '0' && !boolean) {\n        callback(new Error('请输入非负整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var generate_per_file_and_paramsRule = function generate_per_file_and_paramsRule(rule, value, callback) {\n      if (value < 1) {\n        callback(new Error('只能为大于等于1整数'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNum = function isNum(rule, value, callback) {\n      var age = /^[0-9]*$/;\n\n      if (!age.test(value)) {\n        callback(new Error('只能为非负数字'));\n      } else {\n        callback();\n      }\n    };\n\n    var isNotNag = function isNotNag(rule, value, callback) {\n      if (value < 0) {\n        callback(new Error('只能为非负数'));\n      } else {\n        callback();\n      }\n    };\n\n    var epsilonRule = function epsilonRule(rule, value, callback) {\n      value = value.replace('[', '');\n      value = value.replace(']', '');\n      value = value.replace('，', ',');\n      var list = value.split(',');\n\n      for (var i in list) {\n        if (!_typeof(parseFloat(list[i])) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n          callback(new Error('请填写合理的非负数字列表'));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    return _ref = {\n      mark_group: {\n        mark0: {\n          0: '0'\n        },\n        mark01_255: {\n          0.1: '0.1',\n          255: '255'\n        },\n        marks0_5: {\n          0: '0',\n          5: '5'\n        },\n        marks1_5: {\n          1: '1',\n          5: '5'\n        }\n      },\n      marks: {\n        0: '0'\n      },\n      truck_options: [{\n        value: '1',\n        label: '类型1'\n      }, {\n        value: '2',\n        label: '类型2'\n      }, {\n        value: '3',\n        label: '类型3'\n      }],\n      car_options: [{\n        value: '1',\n        label: '类型1'\n      }],\n      cyclist_options: [{\n        value: '1',\n        label: '类型1'\n      }, {\n        value: '2',\n        label: '类型2'\n      }],\n      full_loading_flag: false,\n      generate_func_self: '',\n      generate_func_all: '',\n      generate_func_list: [],\n      queryInfo_Self: {\n        page: 1\n      },\n      taskList_Self: [],\n      total_Self: 0,\n      formInline_Self: {\n        searchType: '',\n        searchTaskInfo: ''\n      },\n      editDialogSelfVisible: false,\n      editForm_Self: {\n        task_id: 0,\n        master: this.$store.getters.userId,\n        name: '',\n        params: '',\n        file: {},\n        augmentation_method_name: '',\n        aug_object_truck: null,\n        aug_object_car: null,\n        aug_object_cyclist: null\n      },\n      editFormSelfRules: {\n        name: [{\n          required: true,\n          message: '请输入任务名',\n          trigger: 'blur'\n        }]\n      },\n      queryInfo_All: {\n        page: 1\n      },\n      taskList_All: [],\n      total_All: 0,\n      formInline_All: {\n        searchType: '',\n        searchTaskInfo: ''\n      },\n      editDialogAllVisible: false,\n      editForm_All: {},\n      editFormAllRules: {\n        name: [{\n          required: true,\n          message: '请输入任务名',\n          trigger: 'blur'\n        }]\n      },\n      FuzzySearch: 1,\n      activeName: 'self'\n    }, _defineProperty(_ref, \"taskList_All\", []), _defineProperty(_ref, \"userRight\", ''), _defineProperty(_ref, \"methodDialogSelfVisible\", false), _defineProperty(_ref, \"methodDetail\", []), _defineProperty(_ref, \"mohu\", true), _defineProperty(_ref, \"fileName\", ''), _defineProperty(_ref, \"preview_value\", []), _defineProperty(_ref, \"preview_options\", []), _defineProperty(_ref, \"previewDialogVisible\", false), _defineProperty(_ref, \"loading\", true), _defineProperty(_ref, \"original_files_zip\", null), _defineProperty(_ref, \"generate_files_zip\", null), _defineProperty(_ref, \"originalPointCloudData\", []), _defineProperty(_ref, \"generatePointCloudData\", []), _defineProperty(_ref, \"originalLabelData\", []), _defineProperty(_ref, \"generateLabelData\", []), _defineProperty(_ref, \"maxAxisValue\", -10000), _defineProperty(_ref, \"minAxisValue\", 10000), _defineProperty(_ref, \"original_is_Zip\", false), _defineProperty(_ref, \"generate_is_Zip\", false), _defineProperty(_ref, \"original_fileContent\", ''), _defineProperty(_ref, \"generate_fileContent\", ''), _defineProperty(_ref, \"original_blob\", null), _defineProperty(_ref, \"generate_blob\", null), _defineProperty(_ref, \"test_text\", 'djshdkjdhkadh'), _defineProperty(_ref, \"change_axios_buttom\", false), _defineProperty(_ref, \"editForm\", {}), _defineProperty(_ref, \"rules1\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: epsilonRule,\n        trigger: 'blur'\n      }],\n      generate_per_file_and_params: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"rules2\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      ite_epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      ite_limit: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      generate_per_file: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"rules3\", {\n      augmentation_method: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'change'\n      }],\n      ite_epsilon: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      ite_limit: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      generate_per_file: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: generate_per_file_and_paramsRule,\n        trigger: 'blur'\n      }, {\n        validator: isNum,\n        trigger: 'blur'\n      }],\n      boundary_constraint: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag,\n        trigger: 'blur'\n      }],\n      urgency_level: [{\n        required: true,\n        message: '不能为空',\n        trigger: 'blur'\n      }, {\n        validator: isNotNag_int,\n        trigger: 'blur'\n      }]\n    }), _defineProperty(_ref, \"picture\", 'https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg'), _ref;\n  },\n  components: {\n    vTable: vTable\n  },\n  computed: {\n    rulesList: function rulesList() {\n      if (this.editForm_Self.augmentation_method_name === 'FGSM') {\n        return this.rules1;\n      } else if (this.editForm_Self.augmentation_method_name === 'JSMA') {\n        return this.rules3;\n      } else {\n        return this.rules2;\n      }\n    }\n  },\n  created: function created() {\n    this.userRight = window.sessionStorage.getItem('user_group_name');\n    this.getTaskList_Self();\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var data;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n              _context.next = 3;\n              return this.$http.get('/augmentation_method/?augmentation_type=2');\n\n            case 3:\n              data = _context.sent;\n              // ?id=1\n              console.log('data:', data);\n              this.generate_func_list = data.data.data;\n              console.log('this.generate_func_list:', this.generate_func_list);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    // >>>>>>>>>el-tab部分>>>>>>>>>>>>>>>.\n    handleClick: function handleClick(tab, event) {\n      if (tab.index === '1') {\n        this.getTaskList_All();\n      }\n    },\n    // >>>>>>>>>>>>>获取任务列表以及查询部分>>>>>>>>>>>>>>>\n    // 获取子组件getList指令\n    handleSelectClear: function handleSelectClear() {\n      this.getTaskList_Self();\n      this.generate_func_self = '';\n    },\n    handleGetList: function handleGetList(data) {\n      if (!data) {\n        this.getTaskList_Self();\n      } else {\n        this.getTaskList_All();\n      }\n    },\n    getTaskList_Self: function () {\n      var _getTaskList_Self = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$$http$get, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get('/task/augmentation_type/search/?augmentation_type=2&page=' + this.queryInfo_Self.page);\n\n              case 2:\n                _yield$this$$http$get = _context2.sent;\n                data = _yield$this$$http$get.data;\n\n                if (!(data.code !== 20000)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                if (!(data.code === 40400)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                console.log('data:', data);\n                this.taskList_Self = [];\n                this.totalPageNum = 0;\n                this.total_Self = 0;\n                return _context2.abrupt(\"return\", this.$message.error('本用户未添加任务！'));\n\n              case 11:\n                return _context2.abrupt(\"return\", this.$message.error('获取本用户任务列表失败！'));\n\n              case 12:\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages; // if (this.queryInfo_Self.page > this.totalPageNum) {\n                //     this.queryInfo_Self.page = this.totalPageNum;\n                // }\n\n                console.log('this.taskList_Self:', this.taskList_Self);\n                this.total_Self = this.totalPageNum * 10;\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getTaskList_Self() {\n        return _getTaskList_Self.apply(this, arguments);\n      }\n\n      return getTaskList_Self;\n    }(),\n    SearchTask_Self: function () {\n      var _SearchTask_Self = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var flag, search_params, _yield$this$$http$get2, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.formInline_Self.searchType === '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('请输入查询方式！'));\n\n              case 2:\n                flag = 0;\n                search_params = '';\n\n                if (!(this.formInline_Self.searchType === '生成方法')) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                // search_params = '/task/augmentation_method/search/?augmentation_method=' + this.formInline_Self.searchTaskInfo;\n                search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self + '&page=' + this.queryInfo_Self.page;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                console.log('this.queryInfo_Self.page:', this.queryInfo_Self.page);\n                _context3.next = 13;\n                break;\n\n              case 10:\n                if (!(this.formInline_Self.searchTaskInfo === '')) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('请输入搜索内容！'));\n\n              case 12:\n                if (this.formInline_Self.searchType === '任务名称') {\n                  search_params = '/task/name/search/?augmentation_type=2&task_name=' + this.formInline_Self.searchTaskInfo + '&search_type=' + this.FuzzySearch + '&page=' + this.queryInfo_Self.page;\n                } else {\n                  search_params = '/task/id/search/?augmentation_type=2&task_id=' + this.formInline_Self.searchTaskInfo + '&page=' + this.queryInfo_Self.page;\n                }\n\n              case 13:\n                _context3.next = 15;\n                return this.$http.get(search_params);\n\n              case 15:\n                _yield$this$$http$get2 = _context3.sent;\n                data = _yield$this$$http$get2.data;\n                console.log('data:', data);\n\n                if (!(data.code !== 20000)) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return _context3.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 22:\n                if (this.formInline_Self.searchType === '任务id') {\n                  flag = 1;\n                  this.taskList_Self = [];\n                  this.taskList_Self.push(data.data);\n                } else {\n                  this.taskList_Self = data.data.details;\n                }\n\n                console.log('data:', data); // this.total_Self = this.taskList_Self ? this.taskList_Self.length : 0;\n\n                this.totalPageNum = data.data.pages; // if (this.queryInfo_Self.page > this.totalPageNum) {\n                //     this.queryInfo_Self.page = this.totalPageNum;\n                // }\n\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n\n                if (flag) {\n                  this.total_Self = this.taskList_Self.length;\n                }\n\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function SearchTask_Self() {\n        return _SearchTask_Self.apply(this, arguments);\n      }\n\n      return SearchTask_Self;\n    }(),\n    // 获取所有用户任务列表\n    getTaskList_All: function () {\n      var _getTaskList_All = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$this$$http$get3, data, _yield$this$$http$get4, _data, _yield$this$$http$get5, _data2, _yield$this$$http$get6, _data3, _yield$this$$http$get7, _data4, _yield$this$$http$get8, _data5, _yield$this$$http$get9, _data6;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log('this.generate_func_all:', this.generate_func_all);\n                console.log('this.formInline_All.searchType:', this.formInline_All.searchType);\n\n                if (!(this.formInline_All.searchType !== '生成方法' && (this.formInline_All.searchType === '' || this.formInline_All.searchTaskInfo === ''))) {\n                  _context4.next = 24;\n                  break;\n                }\n\n                _context4.next = 5;\n                return this.$http.get('/task/augmentation_type/admin/search/?augmentation_type=2&page=' + this.queryInfo_All.page);\n\n              case 5:\n                _yield$this$$http$get3 = _context4.sent;\n                data = _yield$this$$http$get3.data;\n\n                if (!(data.code == 40400)) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                console.log('data:', data);\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('所有用户都未添加任务！'));\n\n              case 13:\n                if (!(data.code !== 20000)) {\n                  _context4.next = 19;\n                  break;\n                }\n\n                console.log('所有用户data:', data);\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[所有用户]！' + '错误原因：' + data.msg));\n\n              case 19:\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 120;\n                break;\n\n              case 24:\n                if (!(this.formInline_All.searchType === '用户id')) {\n                  _context4.next = 40;\n                  break;\n                }\n\n                _context4.next = 27;\n                return this.$http.get('/task/augmentation_type/admin/search/' + '?augmentation_type=2&page=' + this.queryInfo_All.page + '&user_id=' + this.formInline_All.searchTaskInfo);\n\n              case 27:\n                _yield$this$$http$get4 = _context4.sent;\n                _data = _yield$this$$http$get4.data;\n\n                if (!(_data.code !== 20000)) {\n                  _context4.next = 35;\n                  break;\n                }\n\n                console.log('data:', _data);\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[用户id]！' + '错误原因：' + _data.msg));\n\n              case 35:\n                this.taskList_All = _data.data.details;\n                this.totalPageNum = _data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 120;\n                break;\n\n              case 40:\n                if (!(this.formInline_All.searchType === '任务名称')) {\n                  _context4.next = 56;\n                  break;\n                }\n\n                _context4.next = 43;\n                return this.$http.get('/task/name/admin/search/' + '?augmentation_type=2&page=' + this.queryInfo_All.page + '&task_name=' + this.formInline_All.searchTaskInfo + '&search_type=' + this.FuzzySearch);\n\n              case 43:\n                _yield$this$$http$get5 = _context4.sent;\n                _data2 = _yield$this$$http$get5.data;\n                console.log('data:', _data2);\n\n                if (!(_data2.code !== 20000)) {\n                  _context4.next = 51;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[任务名称]！' + '错误原因：' + _data2.msg));\n\n              case 51:\n                this.taskList_All = _data2.data.details;\n                this.totalPageNum = _data2.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 120;\n                break;\n\n              case 56:\n                if (!(this.formInline_All.searchType === '任务id')) {\n                  _context4.next = 74;\n                  break;\n                }\n\n                _context4.next = 59;\n                return this.$http.get('/task/id/admin/search/' + '?augmentation_type=2&page=' + this.queryInfo_All.page + '&task_id=' + this.formInline_All.searchTaskInfo);\n\n              case 59:\n                _yield$this$$http$get6 = _context4.sent;\n                _data3 = _yield$this$$http$get6.data;\n\n                if (!(_data3.code !== 20000)) {\n                  _context4.next = 66;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[任务id]！' + '错误原因：' + _data3.msg));\n\n              case 66:\n                console.log('data:', _data3);\n                console.log('this.taskList_All:', this.taskList_All);\n                this.taskList_Self = [];\n                this.taskList_Self.push(_data3.data.details);\n                this.totalPageNum = _data3.data.pages; // this.total_All = this.taskList_All;\n\n                this.total_All = this.taskList_All.length;\n                _context4.next = 120;\n                break;\n\n              case 74:\n                if (!(this.formInline_All.searchType === '生成类型id')) {\n                  _context4.next = 89;\n                  break;\n                }\n\n                _context4.next = 77;\n                return this.$http.get('/task/augmentation_type/admin/search/' + '?page=' + this.queryInfo_All.page + '&augmentation_type=' + this.formInline_All.searchTaskInfo);\n\n              case 77:\n                _yield$this$$http$get7 = _context4.sent;\n                _data4 = _yield$this$$http$get7.data;\n\n                if (!(_data4.code !== 20000)) {\n                  _context4.next = 84;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[生成类型]！' + '错误原因：' + _data4.msg));\n\n              case 84:\n                this.taskList_All = _data4.data.details;\n                this.totalPageNum = _data4.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 120;\n                break;\n\n              case 89:\n                if (!(this.formInline_All.searchType === '生成方法')) {\n                  _context4.next = 106;\n                  break;\n                }\n\n                console.log('here,this.generate_func_all22222:', this.generate_func_all);\n                _context4.next = 93;\n                return this.$http.get('/task/augmentation_method/admin/search/' + '?page=' + this.queryInfo_All.page + '&augmentation_method=' + this.generate_func_all);\n\n              case 93:\n                _yield$this$$http$get8 = _context4.sent;\n                _data5 = _yield$this$$http$get8.data;\n                console.log('data:', _data5);\n\n                if (!(_data5.code !== 20000)) {\n                  _context4.next = 101;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取查询列表失败[生成方法]！' + '错误原因：' + _data5.msg));\n\n              case 101:\n                this.taskList_All = _data5.data.details;\n                this.totalPageNum = _data5.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                _context4.next = 120;\n                break;\n\n              case 106:\n                if (!(this.formInline_All.searchType === '用户名')) {\n                  _context4.next = 120;\n                  break;\n                }\n\n                _context4.next = 109;\n                return this.$http.get('/task/master/admin/search/' + '?augmentation_type=2&page=' + this.queryInfo_All.page + '&username=' + this.formInline_All.searchTaskInfo + '&search_type=' + this.FuzzySearch);\n\n              case 109:\n                _yield$this$$http$get9 = _context4.sent;\n                _data6 = _yield$this$$http$get9.data;\n\n                if (!(_data6.code !== 20000)) {\n                  _context4.next = 116;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.totalPageNum = 0;\n                this.total_All = 0;\n                return _context4.abrupt(\"return\", this.$message.error('获取任务列表失败[用户名]！' + '错误原因：' + _data6.msg));\n\n              case 116:\n                this.taskList_All = _data6.data.details;\n                this.totalPageNum = _data6.data.pages;\n                console.log('this.taskList_All:', this.taskList_All);\n                this.total_All = this.totalPageNum * 10;\n\n              case 120:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getTaskList_All() {\n        return _getTaskList_All.apply(this, arguments);\n      }\n\n      return getTaskList_All;\n    }(),\n    generate_change: function () {\n      var _generate_change = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(type) {\n        var search_params, _yield$this$$http$get10, data, _search_params, _yield$this$$http$get11, _data7;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(type == '本用户')) {\n                  _context5.next = 20;\n                  break;\n                }\n\n                search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                _context5.next = 5;\n                return this.$http.get(search_params);\n\n              case 5:\n                _yield$this$$http$get10 = _context5.sent;\n                data = _yield$this$$http$get10.data;\n\n                if (!(data.code !== 20000)) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return _context5.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 11:\n                console.log('data:', data);\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n                console.log('this.total_Self:', this.total_Self);\n                console.log('this.totalPageNum:', this.totalPageNum);\n                _context5.next = 33;\n                break;\n\n              case 20:\n                _search_params = '/task/augmentation_method/admin/search/?augmentation_method=' + this.generate_func_all;\n                _context5.next = 23;\n                return this.$http.get(_search_params);\n\n              case 23:\n                _yield$this$$http$get11 = _context5.sent;\n                _data7 = _yield$this$$http$get11.data;\n\n                if (!(_data7.code !== 20000)) {\n                  _context5.next = 29;\n                  break;\n                }\n\n                this.taskList_All = [];\n                this.total_All = 0;\n                return _context5.abrupt(\"return\", this.$message.error('未搜索到该任务！'));\n\n              case 29:\n                this.taskList_All = _data7.data.details;\n                this.totalPageNum = _data7.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                this.total_All = this.total_All ? this.taskList_All.length : 0;\n\n              case 33:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function generate_change(_x) {\n        return _generate_change.apply(this, arguments);\n      }\n\n      return generate_change;\n    }(),\n    // 是否启用模糊搜索\n    isFuzzySearch: function isFuzzySearch(flag) {\n      this.FuzzySearch = flag;\n    },\n    // 清空二级搜索框\n    clearSecondSelect_All: function clearSecondSelect_All() {\n      this.generate_func_all = '';\n      this.formInline_All.searchTaskInfo = '';\n    },\n    clearSecondSelect_Self: function clearSecondSelect_Self() {\n      this.generate_func_self = '';\n      this.formInline_Self.searchTaskInfo = '';\n    },\n    // >>>>>>>>>>分页部分>>>>>>>>>>>>>>>>>>>\n    handleSizeChange_Self: function handleSizeChange_Self(newSize) {\n      this.queryInfo_Self.pagesize = newSize;\n      console.log('newSize-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n      console.log('newSize-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n      this.getTaskList_Self();\n    },\n    handleCurrentChange_Self: function handleCurrentChange_Self(newPage) {\n      this.queryInfo_Self.page = newPage;\n      console.log('newPage-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n      console.log('newPage-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n\n      if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n        this.getTaskList_Self();\n      } else {\n        this.SearchTask_Self();\n      }\n    },\n    handleSizeChange_All: function handleSizeChange_All(newSize) {\n      this.queryInfo_All.pagesize = newSize;\n      console.log('newSize-this.formInline_All.searchType:', this.formInline_All.searchType);\n      console.log('newSize-this.queryInfo_All.page:', this.queryInfo_All.page);\n      this.getTaskList_All();\n    },\n    handleCurrentChange_All: function handleCurrentChange_All(newPage) {\n      this.queryInfo_All.page = newPage;\n      console.log('newPage-this.formInline_All.searchType:', this.formInline_All.searchType);\n      console.log('newPage-this.queryInfo_All.page:', this.queryInfo_All.page);\n      this.getTaskList_All(); // if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n      //     this.getTaskList_All();\n      // } else {\n      //     this.SearchTask_All();\n      // }\n      // this.queryInfo_All.page = newPage;\n      // this.getTaskList_All();\n    },\n    pageReflash_All: function pageReflash_All() {\n      this.queryInfo_All.page = 1;\n    },\n    pageReflash_Self: function pageReflash_Self() {\n      this.queryInfo_Self.page = 1;\n    },\n    // >>>>>>>>>>>>>下载文件部分>>>>>>>>>>>>>>\n    originalfileDownloadTemp: function originalfileDownloadTemp(data) {\n      var task_id = data['task_id'];\n      var flag = data['flag'];\n      this.originalfileDownload(task_id, flag);\n    },\n    originalfileDownload: function () {\n      var _originalfileDownload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(task_id, flag) {\n        var loading, data, file_name1, dot;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                loading = this.full_loading_flag ? '' : this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                this.original_fileContent = '';\n                _context6.next = 4;\n                return this.$http.get('/task/file/?task_id=' + task_id + '&file_type=0&format=json', {\n                  responseType: 'blob',\n                  headers: {\n                    'Content-Type': 'application/json; application/octet-stream'\n                  }\n                });\n\n              case 4:\n                data = _context6.sent;\n                console.log('data:', data);\n                file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n                this.fileName = file_name1[file_name1.length - 1];\n                this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n                dot = this.fileName.lastIndexOf('.');\n                this.original_is_Zip = false;\n\n                if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                  this.original_is_Zip = true;\n                } else {\n                  this.original_blob = data.data;\n                }\n\n                if (!this.full_loading_flag) {\n                  loading.close();\n                }\n\n                if (!flag) {\n                  fileDownload(data.data, this.fileName);\n                }\n\n                return _context6.abrupt(\"return\", data);\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function originalfileDownload(_x2, _x3) {\n        return _originalfileDownload.apply(this, arguments);\n      }\n\n      return originalfileDownload;\n    }(),\n    generatefileDownloadTemp: function generatefileDownloadTemp(data) {\n      var task_id = data['task_id'];\n      var flag = data['flag'];\n      this.generatefileDownload(task_id, flag);\n    },\n    generatefileDownload: function () {\n      var _generatefileDownload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(task_id, flag) {\n        var loading, data, file_name1, dot;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                loading = this.full_loading_flag ? '' : this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                _context7.next = 3;\n                return this.$http.get('/task/file/?task_id=' + task_id + '&file_type=1&format=json', {\n                  responseType: 'blob',\n                  headers: {\n                    'Content-Type': 'application/json; application/octet-stream'\n                  }\n                });\n\n              case 3:\n                data = _context7.sent;\n                file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n                this.fileName = file_name1[file_name1.length - 1];\n                this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n                dot = this.fileName.lastIndexOf('.');\n                this.generate_is_Zip = false;\n\n                if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                  this.generate_is_Zip = true;\n                } else {\n                  this.generate_blob = data.data;\n                }\n\n                if (!this.full_loading_flag) {\n                  loading.close();\n                }\n\n                if (!flag) {\n                  fileDownload(data.data, this.fileName);\n                }\n\n                return _context7.abrupt(\"return\", data);\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function generatefileDownload(_x4, _x5) {\n        return _generatefileDownload.apply(this, arguments);\n      }\n\n      return generatefileDownload;\n    }(),\n    // >>>>>>>>>>>>操作按钮部分>>>>>>>>>>>>>\n    removeTaskById: function () {\n      var _removeTaskById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(task_id) {\n        var confirmResult, _yield$this$$http$del, data;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.$confirm('此操作将永久删除该任务, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context8.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.info('已取消删除'));\n\n              case 5:\n                _context8.next = 7;\n                return this.$http.delete('/task/?task_id=' + task_id);\n\n              case 7:\n                _yield$this$$http$del = _context8.sent;\n                data = _yield$this$$http$del.data;\n\n                if (!(data.code !== 20000)) {\n                  _context8.next = 11;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.error('删除任务失败！' + '错误原因：' + data.msg));\n\n              case 11:\n                this.$message.success('删除任务成功！');\n\n                if (this.activeName === 'self') {\n                  this.queryInfo_Self.page = 1;\n\n                  if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                    this.getTaskList_Self();\n                  } else {\n                    this.SearchTask_Self();\n                  }\n                } else {\n                  this.queryInfo_All.page = 1;\n\n                  if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n                    this.getTaskList_All();\n                  } else {\n                    this.SearchTask_All();\n                  }\n                }\n\n              case 13:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function removeTaskById(_x6) {\n        return _removeTaskById.apply(this, arguments);\n      }\n\n      return removeTaskById;\n    }(),\n    showeditForm: function showeditForm() {\n      console.log('this.editForm_Self:', this.editForm_Self);\n    },\n    showEditDialog: function () {\n      var _showEditDialog = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(row) {\n        var i;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.editForm_Self = JSON.parse(JSON.stringify(row));\n                this.editForm_Self.params = JSON.parse(row.params);\n\n                for (i in this.editForm_Self.params) {\n                  this.$set(this.editForm_Self, i, this.editForm_Self.params[i]);\n                }\n\n                this.editForm_Self.urgency_level = this.editForm_Self.urgency_level;\n                this.editForm_Self.aug_object_truck = this.editForm_Self.aug_count_truck == '0' || !this.editForm_Self.aug_count_truck ? null : this.editForm_Self.aug_object_truck;\n                this.editForm_Self.aug_object_car = this.editForm_Self.aug_count_car == '0' || !this.editForm_Self.aug_count_car ? null : this.editForm_Self.aug_object_car;\n                this.editForm_Self.aug_object_cyclist = this.editForm_Self.aug_count_cyclist == '0' || !this.editForm_Self.aug_count_cyclist ? null : this.editForm_Self.aug_object_cyclist;\n                this.editForm_Self.aug_count_truck = parseInt(this.editForm_Self.aug_count_truck);\n                this.editForm_Self.aug_count_car = parseInt(this.editForm_Self.aug_count_car);\n                this.editForm_Self.aug_count_cyclist = parseInt(this.editForm_Self.aug_count_cyclist);\n                this.editForm_Self.angle = parseFloat(this.editForm_Self.angle);\n                console.log('this.editForm_Self:', this.editForm_Self);\n                this.editDialogSelfVisible = true;\n\n              case 13:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function showEditDialog(_x7) {\n        return _showEditDialog.apply(this, arguments);\n      }\n\n      return showEditDialog;\n    }(),\n    editDialogClosed: function editDialogClosed() {\n      this.editForm_Self = {\n        task_id: 0,\n        master: this.$store.getters.userId,\n        name: '',\n        params: '',\n        file: {},\n        augmentation_method_name: ''\n      };\n    },\n    editTaskInfo: function editTaskInfo() {\n      var _this = this;\n\n      this.editForm_Self.master = this.$store.state.userId;\n\n      if (this.editForm_Self.epsilon) {\n        this.editForm_Self.epsilon = this.editForm_Self.epsilon.replace('，', ',');\n      }\n\n      this.$refs.editFormRef.validate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(valid) {\n          var adddata, temp_params, _iterator, _step, _step$value, a, b, _yield$_this$$http, data;\n\n          return regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  if (valid) {\n                    _context10.next = 2;\n                    break;\n                  }\n\n                  return _context10.abrupt(\"return\");\n\n                case 2:\n                  adddata = new FormData();\n                  adddata.append('task_id', _this.editForm_Self.id);\n                  adddata.append('name', _this.editForm_Self.name);\n                  adddata.append('master', _this.editForm_Self.master);\n                  adddata.append('urgency_level', _this.editForm_Self.urgency_level);\n                  temp_params = {};\n\n                  if (_this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达') {\n                    temp_params = {\n                      aug_object_car: _this.editForm_Self.aug_object_car ? _this.editForm_Self.aug_object_car : '1',\n                      aug_object_truck: _this.editForm_Self.aug_object_truck ? _this.editForm_Self.aug_object_truck : '1',\n                      aug_object_cyclist: _this.editForm_Self.aug_object_cyclist ? _this.editForm_Self.aug_object_cyclist : '1',\n                      aug_count_car: _this.editForm_Self.aug_count_car + '',\n                      aug_count_truck: _this.editForm_Self.aug_count_truck + '',\n                      aug_count_cyclist: _this.editForm_Self.aug_count_cyclist + ''\n                    };\n                  } else if (_this.editForm_Self.augmentation_method_name === '场景物体旋转蜕变-激光雷达') {\n                    temp_params = {\n                      angle: _this.editForm_Self.angle + ''\n                    };\n                  } else if (_this.editForm_Self.augmentation_method_name === '极端场景蜕变-激光雷达') {\n                    temp_params = {\n                      aug_Truck: _this.editForm_Self.aug_Truck,\n                      aug_Car: _this.editForm_Self.aug_Car,\n                      aug_Cyclist: _this.editForm_Self.aug_Cyclist\n                    };\n                  }\n\n                  temp_params = JSON.stringify(temp_params);\n                  adddata.append('params', temp_params);\n                  _this.editForm_Self.file = document.getElementById('filetemp').files[0];\n\n                  if (_this.editForm_Self.file) {\n                    adddata.append('file', _this.editForm_Self.file);\n                  }\n\n                  _iterator = _createForOfIteratorHelper(adddata.entries());\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      _step$value = _slicedToArray(_step.value, 2), a = _step$value[0], b = _step$value[1];\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  _context10.next = 17;\n                  return _this.$http({\n                    url: '/task/',\n                    data: adddata,\n                    method: 'put'\n                  });\n\n                case 17:\n                  _yield$_this$$http = _context10.sent;\n                  data = _yield$_this$$http.data;\n\n                  if (!(data.code !== 20000)) {\n                    _context10.next = 21;\n                    break;\n                  }\n\n                  return _context10.abrupt(\"return\", _this.$message.error('修改任务失败！' + '错误原因：' + data.msg));\n\n                case 21:\n                  _this.$message.success('修改任务成功！');\n\n                  _this.editDialogSelfVisible = false;\n\n                  _this.$refs.editFormRef.resetFields();\n\n                  _this.editForm_Self.augmentation_type = '';\n                  _this.editForm_Self.augmentation_method = '';\n                  _this.editForm_Self.file = {};\n\n                  _this.getTaskList_Self();\n\n                  _this.getTaskList_All();\n\n                case 29:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x8) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    getdata: function () {\n      var _getdata = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(reader, self) {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return function () {\n                  self.fileContent = this.result;\n                };\n\n              case 2:\n                return _context11.abrupt(\"return\", reader.onload = _context11.sent);\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function getdata(_x9, _x10) {\n        return _getdata.apply(this, arguments);\n      }\n\n      return getdata;\n    }(),\n    // 标记任务异常\n    taskException: function () {\n      var _taskException = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this.$confirm('是否确定将该任务标记成异常状态？').then( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(_) {\n                    var adddata, _yield$_this2$$http, data;\n\n                    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                      while (1) {\n                        switch (_context12.prev = _context12.next) {\n                          case 0:\n                            adddata = new FormData();\n                            adddata.append('task_id', _this2.methodDetail.id);\n                            _context12.next = 4;\n                            return _this2.$http({\n                              url: '/task/exception/',\n                              data: adddata,\n                              method: 'post'\n                            });\n\n                          case 4:\n                            _yield$_this2$$http = _context12.sent;\n                            data = _yield$_this2$$http.data;\n\n                            if (!(data.code !== 20000)) {\n                              _context12.next = 8;\n                              break;\n                            }\n\n                            return _context12.abrupt(\"return\", _this2.$message.error('添加生成任务失败！' + '错误原因：' + data.msg));\n\n                          case 8:\n                            _this2.$message.success('标记成异常成功！');\n\n                          case 9:\n                          case \"end\":\n                            return _context12.stop();\n                        }\n                      }\n                    }, _callee12);\n                  }));\n\n                  return function (_x11) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }()).catch(function (_) {});\n\n              case 1:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function taskException() {\n        return _taskException.apply(this, arguments);\n      }\n\n      return taskException;\n    }(),\n    //任务详情对话框\n    MethodDetail: function () {\n      var _MethodDetail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(id) {\n        var _yield$this$$http$get12, data;\n\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                // id = data\n                console.log('this.methodDetail:', this.methodDetail);\n                this.methodDialogSelfVisible = true;\n                _context14.next = 4;\n                return this.$http.get('/task/' + '?task_id=' + id);\n\n              case 4:\n                _yield$this$$http$get12 = _context14.sent;\n                data = _yield$this$$http$get12.data;\n\n                if (!(data.code !== 20000)) {\n                  _context14.next = 8;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", this.$message.error('获取本用户任务详情失败！' + '错误原因：' + data.msg));\n\n              case 8:\n                this.methodDetail = data.data;\n\n              case 9:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function MethodDetail(_x12) {\n        return _MethodDetail.apply(this, arguments);\n      }\n\n      return MethodDetail;\n    }(),\n    methodDialogClose: function methodDialogClose() {\n      console.log('this.methodDetail:', this.methodDetail);\n      this.methodDetail = [];\n    },\n    // >>>>>>>>>>点云预览部分>>>>>>>>>>>>>>>\n    // point_cloud_preview-previewHandleChange-make_format_data-get_preview\n    point_cloud_preview: function () {\n      var _point_cloud_preview = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(task_id) {\n        var loading, preview_options, original_res, original_files_zip, original_files, orignal_names, me, generate_res, generate_files_zip, generate_files, generate_names, original_is_Zip;\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                this.full_loading_flag = true;\n                loading = this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                }); // console.log('loading:', loading);\n                // console.log('this.$loading.lock:', this.$loading.lock);\n                // this.previewDialogVisible = true;\n\n                preview_options = [];\n                _context15.next = 5;\n                return this.originalfileDownload(task_id, 1);\n\n              case 5:\n                original_res = _context15.sent;\n                // 处理原始压缩文件\n                original_files_zip = new window.File([original_res.data], this.fileName, {\n                  type: 'zip'\n                });\n                original_files = new JSZip();\n                orignal_names = [];\n                this.original_files_zip = original_files_zip;\n                me = this;\n                _context15.next = 13;\n                return original_files.loadAsync(this.original_files_zip).then(function (zip) {\n                  console.log('original_files.files:', original_files.files);\n                  var index = 0;\n\n                  for (var i in original_files.files) {\n                    // console.log('file_i:', i);\n                    if (i.indexOf('velodyne_txt/0') != -1) {\n                      var temp_object = {};\n                      var temp_name = i.split('/');\n                      temp_name = temp_name[temp_name.length - 1];\n                      console.log('temp_name:', temp_name);\n                      orignal_names.push(i);\n                      temp_object['point'] = i;\n                      temp_object['value'] = index;\n                      temp_object['label'] = temp_name;\n                      temp_object['label_real'] = 'training/label_2/' + temp_name;\n                      temp_object['children'] = [];\n                      preview_options.push(temp_object);\n                      index = index + 1;\n                    }\n                  }\n\n                  console.log('preview_options_original:', preview_options);\n                  me.original_files_zip = original_files_zip;\n                });\n\n              case 13:\n                _context15.next = 15;\n                return this.generatefileDownload(task_id, 1);\n\n              case 15:\n                generate_res = _context15.sent;\n                generate_files_zip = new window.File([generate_res.data], this.fileName, {\n                  type: 'zip'\n                });\n                generate_files = new JSZip();\n                generate_names = [];\n                original_is_Zip = this.original_is_Zip;\n                _context15.next = 22;\n                return generate_files.loadAsync(generate_files_zip).then(function (generate_files_zip) {\n                  console.log('generate_files.files:', generate_files.files);\n\n                  for (var i in preview_options) {\n                    // console.log('index:', index);\n                    var temp_object = {};\n                    var label_real = ''; // var temp_name = i.split('/');\n                    // temp_object['value'] = index;\n                    // index = index + 1;\n\n                    var label_dir = preview_options[i]['label'].split('.')[0]; // console.log('i: preview_options[i][\"label\"].split(\".\")[0]:', i, preview_options[i]['label'].split('.')[0]);\n\n                    var index = 0;\n\n                    for (var j in generate_files.files) {\n                      if (j.indexOf(label_dir + '/points') != -1) {\n                        console.log('j:', j);\n                        var temp_object = {};\n                        var label_real = '';\n                        var temp_name = j.split('/');\n                        temp_object['value'] = index;\n                        index = index + 1;\n                        temp_object['label'] = temp_name[1];\n                        temp_object['name'] = j; // j.indexOf(i.substring(i.length - 6, i.length)) != -1\n\n                        temp_object['label_real'] = label_dir + '/label_real' + j.substring(j.length - 6, j.length);\n                        preview_options[i].children.push(temp_object);\n                      }\n                    }\n                  }\n\n                  console.log('preview_options:', preview_options);\n                });\n\n              case 22:\n                this.generate_files_zip = generate_files_zip;\n                loading.close();\n                this.full_loading_flag = false;\n                this.previewDialogVisible = true;\n                this.$message.success('已获取文件列表，请选择需预览的文件！');\n                this.preview_options = preview_options;\n                this.loading = false;\n\n              case 29:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function point_cloud_preview(_x13) {\n        return _point_cloud_preview.apply(this, arguments);\n      }\n\n      return point_cloud_preview;\n    }(),\n    make_format_data: function make_format_data(content, flag) {\n      var _this3 = this;\n\n      var format_data = null;\n      var label_temp = [];\n      var arr = null;\n      format_data = content.replaceAll('\\r\\n', '\\n').split('\\n');\n      format_data.forEach(function (item) {\n        arr = item.split(' ');\n\n        for (var k in arr) {\n          if (k < 3 && parseFloat(arr[k]) > _this3.maxAxisValue) {\n            _this3.maxAxisValue = parseFloat(arr[k]);\n          }\n\n          if (k < 3 && parseFloat(arr[k]) < _this3.minAxisValue) {\n            _this3.minAxisValue = parseFloat(arr[k]);\n          }\n        }\n\n        if ((flag === 2 || flag === 3) && arr[0] != 'DontCare' && arr[0] != '') {\n          var label_temp_item = [];\n          label_temp_item.push(parseFloat(arr[13]));\n          label_temp_item.push(-1 * parseFloat(arr[11]));\n          label_temp_item.push(-1 * parseFloat(arr[12]));\n          label_temp.push(label_temp_item);\n          console.log('label_temp:', label_temp);\n        }\n\n        if (flag === 0) {\n          _this3.originalPointCloudData.push(arr);\n        } else if (flag === 1) {\n          _this3.generatePointCloudData.push(arr);\n        }\n      });\n\n      if (flag === 2) {\n        this.originalLabelData = label_temp;\n      } else if (flag === 3) {\n        this.generateLabelData = label_temp;\n      }\n\n      if (flag == 0) {\n        console.log('this.originalPointCloudData:', this.originalPointCloudData);\n      } else if (flag == 1) {\n        console.log('this.generatePointCloudData:', this.generatePointCloudData);\n      } else if (flag == 2) {\n        console.log('this.originalLabelData:', this.originalLabelData);\n      } else if (flag == 3) {\n        console.log('this.generateLabelData:', this.generateLabelData);\n      }\n    },\n    get_preview: function get_preview() {\n      var myChart = echarts.init(document.getElementById('preview'));\n      this.option = {\n        title: {\n          text: '点云生成预览'\n        },\n        tooltip: {\n          show: false,\n          showCcontant: true,\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        legend: {\n          type: 'plain',\n          data: ['original_data', 'generate_data', 'original_label', 'generate_label'],\n          top: '10%'\n        },\n        grid3D: {\n          containLabel: true,\n          viewControl: {\n            projection: 'orthographic'\n          }\n        },\n        xAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        yAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        zAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        series: [{\n          name: 'original_data',\n          type: 'scatter3D',\n          data: this.originalPointCloudData,\n          symbolSize: 2,\n          encode: {\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }, {\n          name: 'generate_data',\n          type: 'scatter3D',\n          data: this.generatePointCloudData,\n          symbolSize: 2,\n          encode: {\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }, {\n          name: 'original_label',\n          type: 'scatter3D',\n          data: this.originalLabelData,\n          symbolSize: 10,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }, {\n          name: 'generate_label',\n          type: 'scatter3D',\n          data: this.generateLabelData,\n          symbolSize: 5,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }]\n      };\n      myChart.setOption(this.option);\n      var myChart_original = echarts.init(document.getElementById('preview_original'));\n      this.option_original = {\n        title: {\n          text: '原始图'\n        },\n        tooltip: {\n          show: false,\n          showCcontant: true,\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        legend: {\n          // 就是显示哪些东西\n          type: 'plain',\n          data: ['original_data', 'original_label'],\n          top: '10%'\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid3D: {\n          containLabel: true,\n          viewControl: {\n            projection: 'orthographic'\n          }\n        },\n        xAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        yAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        zAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        series: [{\n          name: 'original_data',\n          type: 'scatter3D',\n          data: this.originalPointCloudData,\n          symbolSize: 2,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }, {\n          name: 'original_label',\n          type: 'scatter3D',\n          data: this.originalLabelData,\n          symbolSize: 10,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }]\n      };\n      myChart_original.setOption(this.option_original);\n      var myChart_generate = echarts.init(document.getElementById('preview_generate'));\n      this.option_generate = {\n        title: {\n          text: '生成图'\n        },\n        tooltip: {\n          show: true,\n          showCcontant: true,\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        legend: {\n          // 就是显示哪些东西\n          type: 'plain',\n          data: ['generate_data', 'generate_label'],\n          top: '10%'\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid3D: {\n          containLabel: true,\n          viewControl: {\n            projection: 'orthographic'\n          }\n        },\n        xAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        yAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        zAxis3D: {\n          type: 'value',\n          max: this.maxAxisValue.toFixed(3),\n          min: this.minAxisValue.toFixed(3)\n        },\n        series: [{\n          name: 'generate_data',\n          type: 'scatter3D',\n          data: this.generatePointCloudData,\n          symbolSize: 2,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }, {\n          name: 'generate_label',\n          type: 'scatter3D',\n          data: this.generateLabelData,\n          symbolSize: 10,\n          encode: {\n            // 维度的名字默认就是表头的属性名\n            tooltip: [0, 1, 2, 3, 4]\n          }\n        }]\n      };\n      myChart_generate.setOption(this.option_generate);\n    },\n    previewHandleChange: function () {\n      var _previewHandleChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n        var loading, original_points_name, generate_points_name, original_label_name, generate_label_name, original_pointscloud, generate_pointscloud, original_label, generate_label, original_files, generate_files;\n        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                this.full_loading_flag = true;\n                loading = this.$loading({\n                  lock: true,\n                  text: 'Loading',\n                  spinner: 'el-icon-loading',\n                  background: 'rgba(0, 0, 0, 0.7)'\n                });\n                this.originalPointCloudData = [];\n                this.generatePointCloudData = [];\n                this.originalLabelData = [];\n                this.generateLabelData = [];\n                console.log('this.preview_value[0]:', this.preview_value[0]);\n                console.log('this.preview_value[1]:', this.preview_value[1]); // this.preview_value[0]: velodyne_txt/000009.txt\n                // this.preview_value[1]: 2\n\n                original_points_name = this.preview_options[this.preview_value[0]]['point'];\n                generate_points_name = this.preview_options[this.preview_value[0]]['children'][this.preview_value[1]]['name'];\n                console.log('original_points_name:', original_points_name);\n                console.log('generate_points_name:', generate_points_name); // console.log('this.preview_options:', this.preview_options);\n\n                original_label_name = this.preview_options[this.preview_value[0]]['label_real'];\n                generate_label_name = this.preview_options[this.preview_value[0]]['children'][this.preview_value[1]]['label_real'];\n                console.log('original_label_name:', original_label_name);\n                console.log('generate_label_name:', generate_label_name);\n                original_pointscloud = null;\n                generate_pointscloud = null;\n                original_label = null;\n                generate_label = null;\n                original_files = new JSZip();\n                _context18.next = 23;\n                return original_files.loadAsync(this.original_files_zip).then( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(file) {\n                    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                      while (1) {\n                        switch (_context16.prev = _context16.next) {\n                          case 0:\n                            _context16.next = 2;\n                            return original_files.file(original_points_name).async('string').then(function (content) {\n                              original_pointscloud = content;\n                            });\n\n                          case 2:\n                            _context16.next = 4;\n                            return original_files.file(original_label_name).async('string').then(function (content) {\n                              original_label = content;\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context16.stop();\n                        }\n                      }\n                    }, _callee16);\n                  }));\n\n                  return function (_x14) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n\n              case 23:\n                console.log('original_pointscloud:', original_pointscloud);\n                this.make_format_data(original_pointscloud, 0);\n                this.make_format_data(original_label, 2);\n                console.log('this.originalPointCloudData:', this.originalPointCloudData);\n                console.log('this.originalLabelData:', this.originalLabelData);\n                generate_files = new JSZip(); // console.log('this.generate_files_zip:', this.generate_files_zip);\n                // console.log('generate_points_name:', generate_points_name);\n                // console.log('generate_label_name:', generate_label_name);\n\n                _context18.next = 31;\n                return generate_files.loadAsync(this.generate_files_zip).then( /*#__PURE__*/function () {\n                  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(file) {\n                    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                      while (1) {\n                        switch (_context17.prev = _context17.next) {\n                          case 0:\n                            _context17.next = 2;\n                            return generate_files.file(generate_points_name).async('string').then(function (content) {\n                              generate_pointscloud = content;\n                            });\n\n                          case 2:\n                            _context17.next = 4;\n                            return generate_files.file(generate_label_name).async('string').then(function (content) {\n                              generate_label = content;\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context17.stop();\n                        }\n                      }\n                    }, _callee17);\n                  }));\n\n                  return function (_x15) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }());\n\n              case 31:\n                // console.log('generate_pointscloud:', generate_pointscloud);\n                // console.log('generate_label:', generate_label);\n                this.make_format_data(generate_pointscloud, 1);\n                this.make_format_data(generate_label, 3);\n                console.log('this.generatePointCloudData:', this.generatePointCloudData);\n                console.log('this.generateLabelData:', this.generateLabelData); // this.generatePointCloudData = [];\n\n                this.get_preview();\n                loading.close();\n                this.full_loading_flag = false;\n\n              case 38:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function previewHandleChange() {\n        return _previewHandleChange.apply(this, arguments);\n      }\n\n      return previewHandleChange;\n    }(),\n    handleClose: function handleClose(done) {\n      var _this4 = this;\n\n      this.$confirm('确认关闭？').then(function (_) {\n        _this4.previewDialogVisible = false;\n        _this4.fileName = '';\n        _this4.preview_value = [];\n        _this4.preview_options = [];\n        _this4.previewDialogVisible = false;\n        _this4.loading = true;\n        _this4.original_files_zip = null;\n        _this4.generate_files_zip = null;\n        _this4.originalPointCloudData = [];\n        _this4.generatePointCloudData = [];\n        _this4.maxAxisValue = -10000;\n        _this4.minAxisValue = 10000;\n      }).catch(function (_) {});\n    },\n    changeAxios_xz: function changeAxios_xz() {\n      for (var i in this.originalPointCloudData) {\n        var _ref6 = [this.originalPointCloudData[i][2], this.originalPointCloudData[i][0]];\n        this.originalPointCloudData[i][0] = _ref6[0];\n        this.originalPointCloudData[i][2] = _ref6[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref7 = [this.generatePointCloudData[i][2], this.generatePointCloudData[i][0]];\n        this.generatePointCloudData[i][0] = _ref7[0];\n        this.generatePointCloudData[i][2] = _ref7[1];\n      }\n\n      this.get_preview();\n    },\n    changeAxios_yz: function changeAxios_yz() {\n      for (var i in this.originalPointCloudData) {\n        var _ref8 = [this.originalPointCloudData[i][2], this.originalPointCloudData[i][1]];\n        this.originalPointCloudData[i][1] = _ref8[0];\n        this.originalPointCloudData[i][2] = _ref8[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref9 = [this.generatePointCloudData[i][2], this.generatePointCloudData[i][1]];\n        this.generatePointCloudData[i][1] = _ref9[0];\n        this.generatePointCloudData[i][2] = _ref9[1];\n      }\n\n      this.get_preview();\n    },\n    changeAxios_xy: function changeAxios_xy() {\n      for (var i in this.originalPointCloudData) {\n        var _ref10 = [this.originalPointCloudData[i][1], this.originalPointCloudData[i][0]];\n        this.originalPointCloudData[i][0] = _ref10[0];\n        this.originalPointCloudData[i][1] = _ref10[1];\n      }\n\n      for (var i in this.generatePointCloudData) {\n        var _ref11 = [this.generatePointCloudData[i][1], this.generatePointCloudData[i][0]];\n        this.generatePointCloudData[i][0] = _ref11[0];\n        this.generatePointCloudData[i][1] = _ref11[1];\n      }\n\n      this.get_preview();\n    },\n    // >>>>>>>>>>表格空白部分填充>>>>>>>>>>>>>>>>\n    isBlank_num: function isBlank_num(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '-- --';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      return value;\n    },\n    isBlank_start: function isBlank_start(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '未开始';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n      return value;\n    },\n    isBlank_end: function isBlank_end(scope) {\n      var key = scope.column.property,\n          item = scope.row[key],\n          value = '未结束';\n\n      if (item === 0 || item === false || item) {\n        value = item;\n      }\n\n      if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n      return value;\n    }\n  }\n};",{"version":3,"sources":["Lidar_T_AugTaskList.vue"],"names":[],"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","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item> <i class=\"el-icon-s-help\"></i> 激光雷达蜕变 </el-breadcrumb-item>\n                <el-breadcrumb-item>生成任务查询</el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <el-card>\n            <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n                <el-tab-pane label=\"本用户\" name=\"self\">\n                    <el-row :gutter=\"20\" class=\"search\">\n                        <el-col :span=\"20\">\n                            <el-form :inline=\"true\" :model=\"formInline_Self\" class=\"demo-form-inline\">\n                                <el-form-item label=\"查询方式\">\n                                    <el-select\n                                        v-model=\"formInline_Self.searchType\"\n                                        clearable\n                                        placeholder=\"请选择查询方式\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @clear=\"getTaskList_Self()\"\n                                        @change=\"pageReflash_Self()\"\n                                    >\n                                        <el-option label=\"生成方法\" value=\"生成方法\"></el-option>\n                                        <el-option label=\"任务名称\" value=\"任务名称\"></el-option>\n                                        <el-option label=\"任务id\" value=\"任务id\"></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item v-show=\"formInline_Self.searchType == '生成方法'\" label=\"生成方法\">\n                                    <el-select\n                                        v-model=\"generate_func_self\"\n                                        placeholder=\"请选择生成方法\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @change=\"\n                                            pageReflash_Self();\n                                            SearchTask_Self();\n                                        \"\n                                    >\n                                        <el-option\n                                            v-for=\"item in generate_func_list\"\n                                            :key=\"item.name\"\n                                            :label=\"item.name\"\n                                            :value=\"item.id\"\n                                        ></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item\n                                    label=\"查询内容\"\n                                    v-show=\"formInline_Self.searchType != '生成方法' && formInline_Self.searchType != ''\"\n                                >\n                                    <el-input\n                                        placeholder=\"请输入内容\"\n                                        v-model=\"formInline_Self.searchTaskInfo\"\n                                        clearable\n                                        @clear=\"handleSelectClear\"\n                                    >\n                                        <el-button\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(0);\n                                                pageReflash_Self();\n                                                SearchTask_Self();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>精确</el-button\n                                        >\n                                        <el-button\n                                            v-if=\"formInline_Self.searchType != '任务id'\"\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(1);\n                                                pageReflash_Self();\n                                                SearchTask_Self();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>模糊</el-button\n                                        >\n                                    </el-input>\n                                </el-form-item>\n                            </el-form>\n                        </el-col>\n                    </el-row>\n\n                    <v-table\n                        :taskList=\"this.taskList_Self\"\n                        :is_root=\"'0'\"\n                        :show_point_preview=\"1\"\n                        @getList=\"handleGetList\"\n                        @delete=\"removeTaskById\"\n                        @MethodDetail=\"MethodDetail\"\n                        @methodDialogClose=\"methodDialogClose\"\n                        @showEditDialog=\"showEditDialog\"\n                        @editDialogClosed=\"editDialogClosed\"\n                        @originalfileDownload=\"originalfileDownloadTemp\"\n                        @generatefileDownload=\"generatefileDownloadTemp\"\n                        @point_cloud_preview=\"point_cloud_preview\"\n                    ></v-table>\n\n                    <el-pagination\n                        @size-change=\"handleSizeChange_Self\"\n                        @current-change=\"handleCurrentChange_Self\"\n                        :current-page.sync=\"queryInfo_Self.page\"\n                        :page-size=\"10\"\n                        layout=\"prev, pager, next\"\n                        :total=\"total_Self\"\n                    >\n                    </el-pagination>\n                </el-tab-pane>\n                <el-tab-pane label=\"所有用户\" name=\"all\" v-if=\"this.userRight === '超级管理员'\">\n                    <el-row :gutter=\"20\" class=\"search\">\n                        <el-col :span=\"20\">\n                            <el-form :inline=\"true\" :model=\"formInline_All\" class=\"demo-form-inline\">\n                                <el-form-item label=\"查询方式\">\n                                    <el-select\n                                        v-model=\"formInline_All.searchType\"\n                                        placeholder=\"请选择查询方式\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        clearable\n                                        @clear=\"\n                                            getTaskList_All();\n                                            clearSecondSelect_All();\n                                        \"\n                                        @change=\"pageReflash_All()\"\n                                    >\n                                        <el-option label=\"生成方法\" value=\"生成方法\"></el-option>\n                                        <el-option label=\"任务名称\" value=\"任务名称\"></el-option>\n                                        <el-option label=\"任务id\" value=\"任务id\"></el-option>\n                                        <el-option label=\"用户id\" value=\"用户id\"></el-option>\n                                        <el-option label=\"用户名\" value=\"用户名\"></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item v-show=\"formInline_All.searchType == '生成方法'\" label=\"生成方法\">\n                                    <el-select\n                                        v-model=\"generate_func_all\"\n                                        placeholder=\"请选择生成方法\"\n                                        class=\"marginRight\"\n                                        prop=\"searchType\"\n                                        @change=\"\n                                            pageReflash_All();\n                                            getTaskList_All();\n                                        \"\n                                    >\n                                        <el-option\n                                            v-for=\"item in generate_func_list\"\n                                            :key=\"item.name\"\n                                            :label=\"item.name\"\n                                            :value=\"item.id\"\n                                        ></el-option>\n                                    </el-select>\n                                </el-form-item>\n                                <el-form-item\n                                    v-show=\"formInline_All.searchType != '生成方法' && formInline_All.searchType != ''\"\n                                    label=\"查询内容\"\n                                >\n                                    <el-input\n                                        placeholder=\"请输入内容\"\n                                        v-model=\"formInline_All.searchTaskInfo\"\n                                        clearable\n                                        @clear=\"getTaskList_All\"\n                                    >\n                                        <el-button\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(0);\n                                                getTaskList_All();\n                                                pageReflash_All();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>精确</el-button\n                                        >\n                                        <el-button\n                                            v-if=\"\n                                                formInline_All.searchType != '任务id' &&\n                                                    formInline_All.searchType != '用户id' &&\n                                                    formInline_All.searchType != '用户名'\n                                            \"\n                                            slot=\"append\"\n                                            @click=\"\n                                                isFuzzySearch(1);\n                                                getTaskList_All();\n                                                pageReflash_All();\n                                            \"\n                                            size=\"mini\"\n                                            ><i class=\"el-icon-search el-icon--right\"></i>模糊</el-button\n                                        >\n                                    </el-input>\n                                </el-form-item>\n                            </el-form>\n                        </el-col>\n                    </el-row>\n                    <v-table\n                        :taskList=\"this.taskList_All\"\n                        :is_root=\"'1'\"\n                        :show_point_preview=\"1\"\n                        @getList=\"handleGetList\"\n                        @delete=\"removeTaskById\"\n                        @MethodDetail=\"MethodDetail\"\n                        @methodDialogClose=\"methodDialogClose\"\n                        @showEditDialog=\"showEditDialog\"\n                        @editDialogClosed=\"editDialogClosed\"\n                        @originalfileDownload=\"originalfileDownloadTemp\"\n                        @generatefileDownload=\"generatefileDownloadTemp\"\n                        @point_cloud_preview=\"point_cloud_preview\"\n                    ></v-table>\n                    <el-pagination\n                        @size-change=\"handleSizeChange_All\"\n                        @current-change=\"handleCurrentChange_All\"\n                        :current-page.sync=\"queryInfo_All.page\"\n                        :page-size=\"10\"\n                        layout=\"prev, pager, next\"\n                        :total=\"total_All\"\n                    >\n                    </el-pagination>\n                </el-tab-pane>\n            </el-tabs>\n        </el-card>\n        <el-dialog title=\"编辑任务信息\" :visible.sync=\"editDialogSelfVisible\" width=\"50%\" @closed=\"editDialogClosed\">\n            <el-form :model=\"editForm_Self\" :rules=\"rulesList\" ref=\"editFormRef\" label-width=\"110px\" style=\"width: 90%\">\n                <el-form-item label=\"任务id\">\n                    <el-input v-model=\"editForm_Self.id\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"任务名\" prop=\"name\">\n                    <el-input v-model=\"editForm_Self.name\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"紧急等级\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.urgency_level\"></el-input> -->\n                    <el-slider v-model=\"editForm_Self.urgency_level\" :min=\"1\" :max=\"5\" :step=\"1\" :marks=\"mark_group.marks1_5\"> </el-slider>\n                </el-form-item>\n\n                <el-form-item label=\"生成卡车类型\" v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达'\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.epsilon\"></el-input> -->\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-select v-model=\"editForm_Self.aug_object_truck\" placeholder=\"请选择生成卡车类型\" @change=\"showeditForm\">\n                            <el-option v-for=\"item in truck_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"> </el-option>\n                        </el-select>\n                    </div>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"生成卡车数量\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达' && editForm_Self.aug_object_truck\"\n                    prop=\"aug_count_Truck\"\n                >\n                    <!-- <el-input type=\"text\" v-model=\"form.aug_count_Truck\" placeholder=\"请输入生成卡车数量\"></el-input> -->\n                    <el-slider v-model=\"editForm_Self.aug_count_truck\" show-input> </el-slider>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"生成轿车类型\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达'\"\n                    prop=\"aug_object_Car\"\n                >\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-select v-model=\"editForm_Self.aug_object_car\" placeholder=\"请选择生成轿车类型\">\n                            <el-option v-for=\"item in car_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"> </el-option>\n                        </el-select>\n                    </div>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"生成轿车数量\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达' && editForm_Self.aug_object_car\"\n                    prop=\"aug_count_Car\"\n                >\n                    <!-- <el-input type=\"text\" v-model=\"form.aug_count_Car\" placeholder=\"请输入生成轿车数量\"></el-input> -->\n                    <el-slider v-model=\"editForm_Self.aug_count_car\" show-input> </el-slider>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"生成自行车类型\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达'\"\n                    prop=\"aug_object_Cyclist\"\n                >\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-select v-model=\"editForm_Self.aug_object_cyclist\" placeholder=\"请选择生成自行车类型\">\n                            <el-option v-for=\"item in cyclist_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                            </el-option>\n                        </el-select>\n                    </div>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"生成自行车数量\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达' && editForm_Self.aug_object_cyclist\"\n                    prop=\"aug_count_Cyclist\"\n                >\n                    <!-- <el-input type=\"text\" v-model=\"form.aug_count_Cyclist\" placeholder=\"请输入生成自行车数量\"></el-input> -->\n                    <el-slider v-model=\"editForm_Self.aug_count_cyclist\" show-input> </el-slider>\n                </el-form-item>\n\n                <el-form-item label=\"生成卡车类型\" v-if=\"this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达'\">\n                    <!-- <el-input type=\"text\" v-model=\"editForm_Self.epsilon\"></el-input> -->\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-select v-model=\"editForm_Self.aug_object_truck\" placeholder=\"请选择生成卡车类型\" @change=\"showeditForm\">\n                            <el-option v-for=\"item in truck_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"> </el-option>\n                        </el-select>\n                    </div>\n                </el-form-item>\n\n                <el-form-item\n                    label=\"物体旋转角度\"\n                    v-if=\"this.editForm_Self.augmentation_method_name === '场景物体旋转蜕变-激光雷达'\"\n                    prop=\"angle\"\n                >\n                    <div style=\"float: left; margin-right: 5px; width:400px\">\n                        <el-slider v-model=\"editForm_Self.angle\" show-input :min=\"-180\" :max=\"180\" :step=\"0.5\" :marks=\"marks\"> </el-slider>\n                    </div>\n                </el-form-item>\n\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === '极端场景蜕变-激光雷达'\" label=\"是否加入卡车\">\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-switch v-model=\"editForm_Self.aug_Truck\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                    </div>\n                </el-form-item>\n\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === '极端场景蜕变-激光雷达'\" label=\"是否加入轿车\">\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-switch v-model=\"editForm_Self.aug_Car\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                    </div>\n                </el-form-item>\n\n                <el-form-item v-if=\"this.editForm_Self.augmentation_method_name === '极端场景蜕变-激光雷达'\" label=\"是否加入自行车\">\n                    <div style=\"float: left; margin-right: 5px\">\n                        <el-switch v-model=\"editForm_Self.aug_Cyclist\" active-text=\"是\" inactive-text=\"否\"> </el-switch>\n                    </div>\n                </el-form-item>\n\n                <el-form-item label=\"重新上传文件\" prop=\"file\">\n                    <input type=\"file\" id=\"filetemp\" prop=\"editForm_Self.file\" /><br />\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"editDialogSelfVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"editTaskInfo\">确 定</el-button>\n            </span>\n        </el-dialog>\n        <!-- 任务详情对话框 -->\n        <el-dialog\n            title=\"生成任务详情\"\n            :visible.sync=\"methodDialogSelfVisible\"\n            width=\"50%\"\n            body-style=\"background-color: rgba(255, 255, 255, 0.6);\"\n            @close=\"methodDialogClose\"\n            destroy-on-close\n        >\n            <div class=\"user-info-list\">\n                任务id：\n                <span>{{ methodDetail.id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务名称：\n                <span>{{ methodDetail.name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                紧急等级：\n                <span>{{ methodDetail.urgency_level }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务参数：\n                <span>{{ methodDetail.params ? methodDetail.params : '暂无' }}</span>\n            </div>\n\n            <div class=\"user-info-list\">\n                任务状态：\n                <span>{{ methodDetail.task_status }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                是否上传原型文件：\n                <span>{{ methodDetail.task_have_origin_file ? '是' : '否' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                是否生成扩增文件：\n                <span>{{ methodDetail.task_have_generate_file ? '是' : '否' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务扩增数据数量：\n                <span>{{ methodDetail.generate_data_number ? methodDetail.generate_data_number : '暂无' }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务数据更新时间：\n                <span>{{ methodDetail.update_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务开始时间：\n                <span>{{ methodDetail.start_datetime ? methodDetail.start_datetime : '未开始' | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务结束时间：\n                <span>{{ methodDetail.fin_datetime ? methodDetail.start_datetime : '未结束' | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者id：\n                <span>{{ methodDetail.master_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者username：\n                <span>{{ methodDetail.master_username }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者nickname：\n                <span>{{ methodDetail.master_nickname }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者用户组：\n                <span>{{ methodDetail.master_user_group }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者加入时间：\n                <span>{{ methodDetail.master_join_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者最近一次登录时间：\n                <span>{{ methodDetail.master_last_login_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                任务所有者信息更新时间：\n                <span>{{ methodDetail.master_update_datetime | dateFormat }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法id：\n                <span>{{ methodDetail.augmentation_method_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法名称：\n                <span>{{ methodDetail.augmentation_method_name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增方法的细节、介绍等：\n                <span>{{ methodDetail.augmentation_method_details }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型id：\n                <span>{{ methodDetail.augmentation_type_id }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型名称：\n                <span>{{ methodDetail.augmentation_type_name }}</span>\n            </div>\n            <div class=\"user-info-list\">\n                扩增类型的细节、介绍等：\n                <span>{{ methodDetail.augmentation_type_details }}</span>\n            </div>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"taskException\" type=\"warning\">标记任务异常</el-button>\n                <el-button @click=\"methodDialogSelfVisible = false\">关 闭</el-button>\n            </span>\n        </el-dialog>\n        <!-- 生成点云预览 -->\n        <el-dialog\n            title=\"生成点云预览\"\n            :visible.sync=\"previewDialogVisible\"\n            width=\"1300px\"\n            height=\"630px\"\n            :before-close=\"handleClose\"\n            center\n        >\n            <div v-loading=\"this.loading\" element-loading-text=\"拼命加载中\" element-loading-spinner=\"el-icon-loading\" style=\"height: 600px\">\n                <div class=\"block\" v-if=\"!loading\">\n                    <span class=\"demonstration right\">选择对比点云</span>\n                    <el-cascader\n                        v-model=\"preview_value\"\n                        :options=\"preview_options\"\n                        :props=\"{ expandTrigger: 'hover' }\"\n                        @change=\"previewHandleChange\"\n                        style=\"width: 800px\"\n                    ></el-cascader>\n                    <el-carousel trigger=\"click\" height=\"570px\">\n                        <el-carousel-item v-for=\"item in 2\" :key=\"item\">\n                            <div v-if=\"item == 1\" id=\"preview\" class=\"juzhog\"></div>\n                            <div v-if=\"item == 2\">\n                                <div id=\"preview_original\" class=\"view1\"></div>\n                                <div id=\"preview_generate\" class=\"view1\"></div>\n                            </div>\n                        </el-carousel-item>\n                    </el-carousel>\n                </div>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport * as echarts from 'echarts';\nimport 'echarts-gl';\nimport qs from 'qs';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport vTable from './Table.vue';\nexport default {\n    data() {\n        const isNotNag_int_urg = (rule, value, callback) => {\n            const boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n            if (value !== 0 && !boolean) {\n                callback(new Error('请输入非负整数'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag_int = (rule, value, callback) => {\n            const boolean = new RegExp('^[1-9][0-9]*$').test(value);\n\n            if (value !== '0' && !boolean) {\n                callback(new Error('请输入非负整数'));\n            } else {\n                callback();\n            }\n        };\n        const generate_per_file_and_paramsRule = (rule, value, callback) => {\n            if (value < 1) {\n                callback(new Error('只能为大于等于1整数'));\n            } else {\n                callback();\n            }\n        };\n        const isNum = (rule, value, callback) => {\n            const age = /^[0-9]*$/;\n            if (!age.test(value)) {\n                callback(new Error('只能为非负数字'));\n            } else {\n                callback();\n            }\n        };\n        const isNotNag = (rule, value, callback) => {\n            if (value < 0) {\n                callback(new Error('只能为非负数'));\n            } else {\n                callback();\n            }\n        };\n        const epsilonRule = (rule, value, callback) => {\n            value = value.replace('[', '');\n            value = value.replace(']', '');\n            value = value.replace('，', ',');\n\n            var list = value.split(',');\n            for (var i in list) {\n                if (!typeof parseFloat(list[i]) === 'number' && !isNaN(parseFloat(list[i])) && parseFloat(list[i]) < 0) {\n                    callback(new Error('请填写合理的非负数字列表'));\n                } else {\n                    callback();\n                }\n            }\n        };\n        return {\n            mark_group: {\n                mark0: {\n                    0: '0'\n                },\n                mark01_255: {\n                    0.1: '0.1',\n                    255: '255'\n                },\n                marks0_5: {\n                    0: '0',\n                    5: '5'\n                },\n                marks1_5: {\n                    1: '1',\n                    5: '5'\n                }\n            },\n            marks: {\n                0: '0'\n            },\n            truck_options: [\n                {\n                    value: '1',\n                    label: '类型1'\n                },\n                {\n                    value: '2',\n                    label: '类型2'\n                },\n                {\n                    value: '3',\n                    label: '类型3'\n                }\n            ],\n            car_options: [\n                {\n                    value: '1',\n                    label: '类型1'\n                }\n            ],\n            cyclist_options: [\n                {\n                    value: '1',\n                    label: '类型1'\n                },\n                {\n                    value: '2',\n                    label: '类型2'\n                }\n            ],\n            full_loading_flag: false,\n            generate_func_self: '',\n            generate_func_all: '',\n            generate_func_list: [],\n            queryInfo_Self: {\n                page: 1\n            },\n            taskList_Self: [],\n            total_Self: 0,\n            formInline_Self: {\n                searchType: '',\n                searchTaskInfo: ''\n            },\n            editDialogSelfVisible: false,\n            editForm_Self: {\n                task_id: 0,\n                master: this.$store.getters.userId,\n                name: '',\n                params: '',\n                file: {},\n                augmentation_method_name: '',\n                aug_object_truck: null,\n                aug_object_car: null,\n                aug_object_cyclist: null\n            },\n            editFormSelfRules: {\n                name: [{ required: true, message: '请输入任务名', trigger: 'blur' }]\n            },\n            queryInfo_All: {\n                page: 1\n            },\n            taskList_All: [],\n            total_All: 0,\n            formInline_All: {\n                searchType: '',\n                searchTaskInfo: ''\n            },\n            editDialogAllVisible: false,\n            editForm_All: {},\n            editFormAllRules: {\n                name: [{ required: true, message: '请输入任务名', trigger: 'blur' }]\n            },\n            FuzzySearch: 1,\n            activeName: 'self',\n            taskList_All: [],\n            userRight: '',\n            methodDialogSelfVisible: false,\n            methodDetail: [],\n            mohu: true,\n            fileName: '',\n            preview_value: [],\n            preview_options: [],\n            previewDialogVisible: false,\n            loading: true,\n            original_files_zip: null,\n            generate_files_zip: null,\n            originalPointCloudData: [],\n            generatePointCloudData: [],\n            originalLabelData: [],\n            generateLabelData: [],\n            maxAxisValue: -10000,\n            minAxisValue: 10000,\n            original_is_Zip: false,\n            generate_is_Zip: false,\n            original_fileContent: '',\n            generate_fileContent: '',\n            original_blob: null,\n            generate_blob: null,\n            test_text: 'djshdkjdhkadh',\n            change_axios_buttom: false,\n            editForm: {},\n            rules1: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: epsilonRule, trigger: 'blur' }\n                ],\n                generate_per_file_and_params: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            rules2: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            rules3: {\n                augmentation_method: [{ required: true, message: '不能为空', trigger: 'change' }],\n                ite_epsilon: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                ite_limit: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                generate_per_file: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: generate_per_file_and_paramsRule, trigger: 'blur' },\n                    { validator: isNum, trigger: 'blur' }\n                ],\n                boundary_constraint: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag, trigger: 'blur' }\n                ],\n                urgency_level: [\n                    { required: true, message: '不能为空', trigger: 'blur' },\n                    { validator: isNotNag_int, trigger: 'blur' }\n                ]\n            },\n            picture: 'https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg'\n        };\n    },\n    components: {\n        vTable\n    },\n    computed: {\n        rulesList: function() {\n            if (this.editForm_Self.augmentation_method_name === 'FGSM') {\n                return this.rules1;\n            } else if (this.editForm_Self.augmentation_method_name === 'JSMA') {\n                return this.rules3;\n            } else {\n                return this.rules2;\n            }\n        }\n    },\n    created() {\n        this.userRight = window.sessionStorage.getItem('user_group_name');\n\n        this.getTaskList_Self();\n    },\n    async mounted() {\n        this.$store.commit('setUserId', sessionStorage.getItem('userId'));\n        let data = await this.$http.get('/augmentation_method/?augmentation_type=2');\n        // ?id=1\n        console.log('data:', data);\n        this.generate_func_list = data.data.data;\n        console.log('this.generate_func_list:', this.generate_func_list);\n    },\n    methods: {\n        // >>>>>>>>>el-tab部分>>>>>>>>>>>>>>>.\n        handleClick(tab, event) {\n            if (tab.index === '1') {\n                this.getTaskList_All();\n            }\n        },\n        // >>>>>>>>>>>>>获取任务列表以及查询部分>>>>>>>>>>>>>>>\n        // 获取子组件getList指令\n        handleSelectClear() {\n            this.getTaskList_Self();\n            this.generate_func_self = '';\n        },\n        handleGetList(data) {\n            if (!data) {\n                this.getTaskList_Self();\n            } else {\n                this.getTaskList_All();\n            }\n        },\n        async getTaskList_Self() {\n            // const { data: data } = await this.$http.get('/task/self/search/' + '?page=' + this.queryInfo_Self.page);\n            const { data: data } = await this.$http.get(\n                '/task/augmentation_type/search/?augmentation_type=2&page=' + this.queryInfo_Self.page\n            );\n\n            if (data.code !== 20000) {\n                if (data.code === 40400) {\n                    console.log('data:', data);\n                    this.taskList_Self = [];\n                    this.totalPageNum = 0;\n                    this.total_Self = 0;\n                    return this.$message.error('本用户未添加任务！');\n                }\n\n                return this.$message.error('获取本用户任务列表失败！');\n            }\n\n            this.taskList_Self = data.data.details;\n\n            this.totalPageNum = data.data.pages;\n            // if (this.queryInfo_Self.page > this.totalPageNum) {\n            //     this.queryInfo_Self.page = this.totalPageNum;\n            // }\n            console.log('this.taskList_Self:', this.taskList_Self);\n\n            this.total_Self = this.totalPageNum * 10;\n        },\n        async SearchTask_Self() {\n            if (this.formInline_Self.searchType === '') {\n                return this.$message.error('请输入查询方式！');\n            }\n            var flag = 0;\n            var search_params = '';\n            if (this.formInline_Self.searchType === '生成方法') {\n                // search_params = '/task/augmentation_method/search/?augmentation_method=' + this.formInline_Self.searchTaskInfo;\n                search_params =\n                    '/task/augmentation_method/search/?augmentation_method=' +\n                    this.generate_func_self +\n                    '&page=' +\n                    this.queryInfo_Self.page;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                console.log('this.queryInfo_Self.page:', this.queryInfo_Self.page);\n            } else {\n                if (this.formInline_Self.searchTaskInfo === '') {\n                    return this.$message.error('请输入搜索内容！');\n                }\n\n                if (this.formInline_Self.searchType === '任务名称') {\n                    search_params =\n                        '/task/name/search/?augmentation_type=2&task_name=' +\n                        this.formInline_Self.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch +\n                        '&page=' +\n                        this.queryInfo_Self.page;\n                } else {\n                    search_params =\n                        '/task/id/search/?augmentation_type=2&task_id=' +\n                        this.formInline_Self.searchTaskInfo +\n                        '&page=' +\n                        this.queryInfo_Self.page;\n                }\n            }\n            const { data: data } = await this.$http.get(search_params);\n            console.log('data:', data);\n            if (data.code !== 20000) {\n                this.taskList_Self = [];\n                this.total_Self = 0;\n                return this.$message.error('未搜索到该任务！');\n            }\n            if (this.formInline_Self.searchType === '任务id') {\n                flag = 1;\n                this.taskList_Self = [];\n                this.taskList_Self.push(data.data);\n            } else {\n                this.taskList_Self = data.data.details;\n            }\n            console.log('data:', data);\n            // this.total_Self = this.taskList_Self ? this.taskList_Self.length : 0;\n            this.totalPageNum = data.data.pages;\n            // if (this.queryInfo_Self.page > this.totalPageNum) {\n            //     this.queryInfo_Self.page = this.totalPageNum;\n            // }\n            this.total_Self = this.totalPageNum * 10;\n            this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n            if (flag) {\n                this.total_Self = this.taskList_Self.length;\n            }\n        },\n        // 获取所有用户任务列表\n        async getTaskList_All() {\n            console.log('this.generate_func_all:', this.generate_func_all);\n            console.log('this.formInline_All.searchType:', this.formInline_All.searchType);\n            if (\n                this.formInline_All.searchType !== '生成方法' &&\n                (this.formInline_All.searchType === '' || this.formInline_All.searchTaskInfo === '')\n            ) {\n                // const { data: data } = await this.$http.get('task/all/admin/search/' + '?page=' + this.queryInfo_All.page);\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/?augmentation_type=2&page=' + this.queryInfo_All.page\n                );\n                if (data.code == 40400) {\n                    console.log('data:', data);\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('所有用户都未添加任务！');\n                }\n                if (data.code !== 20000) {\n                    console.log('所有用户data:', data);\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取任务列表失败[所有用户]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '用户id') {\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/' +\n                        '?augmentation_type=2&page=' +\n                        this.queryInfo_All.page +\n                        '&user_id=' +\n                        this.formInline_All.searchTaskInfo\n                );\n\n                if (data.code !== 20000) {\n                    console.log('data:', data);\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取任务列表失败[用户id]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '任务名称') {\n                const { data: data } = await this.$http.get(\n                    '/task/name/admin/search/' +\n                        '?augmentation_type=2&page=' +\n                        this.queryInfo_All.page +\n                        '&task_name=' +\n                        this.formInline_All.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch\n                );\n                console.log('data:', data);\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[任务名称]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '任务id') {\n                const { data: data } = await this.$http.get(\n                    '/task/id/admin/search/' +\n                        '?augmentation_type=2&page=' +\n                        this.queryInfo_All.page +\n                        '&task_id=' +\n                        this.formInline_All.searchTaskInfo\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[任务id]！' + '错误原因：' + data.msg);\n                }\n                console.log('data:', data);\n                console.log('this.taskList_All:', this.taskList_All);\n                this.taskList_Self = [];\n                this.taskList_Self.push(data.data.details);\n                this.totalPageNum = data.data.pages;\n                // this.total_All = this.taskList_All;\n                this.total_All = this.taskList_All.length;\n            } else if (this.formInline_All.searchType === '生成类型id') {\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_type/admin/search/' +\n                        '?page=' +\n                        this.queryInfo_All.page +\n                        '&augmentation_type=' +\n                        this.formInline_All.searchTaskInfo\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[生成类型]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '生成方法') {\n                console.log('here,this.generate_func_all22222:', this.generate_func_all);\n                const { data: data } = await this.$http.get(\n                    '/task/augmentation_method/admin/search/' +\n                        '?page=' +\n                        this.queryInfo_All.page +\n                        '&augmentation_method=' +\n                        this.generate_func_all\n                );\n                console.log('data:', data);\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取查询列表失败[生成方法]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n            } else if (this.formInline_All.searchType === '用户名') {\n                const { data: data } = await this.$http.get(\n                    '/task/master/admin/search/' +\n                        '?augmentation_type=2&page=' +\n                        this.queryInfo_All.page +\n                        '&username=' +\n                        this.formInline_All.searchTaskInfo +\n                        '&search_type=' +\n                        this.FuzzySearch\n                );\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.totalPageNum = 0;\n                    this.total_All = 0;\n                    return this.$message.error('获取任务列表失败[用户名]！' + '错误原因：' + data.msg);\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                console.log('this.taskList_All:', this.taskList_All);\n                this.total_All = this.totalPageNum * 10;\n            }\n            // console.log('所有用户data:', data);\n        },\n        async generate_change(type) {\n            if (type == '本用户') {\n                let search_params = '/task/augmentation_method/search/?augmentation_method=' + this.generate_func_self;\n                console.log('this.generate_func_self:', this.generate_func_self);\n                const { data: data } = await this.$http.get(search_params);\n                if (data.code !== 20000) {\n                    this.taskList_Self = [];\n                    this.total_Self = 0;\n                    return this.$message.error('未搜索到该任务！');\n                }\n                console.log('data:', data);\n                this.taskList_Self = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_Self = this.totalPageNum * 10;\n                this.total_Self = this.total_Self === 10 ? this.taskList_Self.length : this.total_Self;\n                console.log('this.total_Self:', this.total_Self);\n                console.log('this.totalPageNum:', this.totalPageNum);\n            } else {\n                let search_params = '/task/augmentation_method/admin/search/?augmentation_method=' + this.generate_func_all;\n                const { data: data } = await this.$http.get(search_params);\n                if (data.code !== 20000) {\n                    this.taskList_All = [];\n                    this.total_All = 0;\n                    return this.$message.error('未搜索到该任务！');\n                }\n                this.taskList_All = data.data.details;\n                this.totalPageNum = data.data.pages;\n                this.total_All = this.totalPageNum * 10;\n                this.total_All = this.total_All ? this.taskList_All.length : 0;\n            }\n        },\n        // 是否启用模糊搜索\n        isFuzzySearch(flag) {\n            this.FuzzySearch = flag;\n        },\n        // 清空二级搜索框\n        clearSecondSelect_All() {\n            this.generate_func_all = '';\n            this.formInline_All.searchTaskInfo = '';\n        },\n        clearSecondSelect_Self() {\n            this.generate_func_self = '';\n            this.formInline_Self.searchTaskInfo = '';\n        },\n        // >>>>>>>>>>分页部分>>>>>>>>>>>>>>>>>>>\n        handleSizeChange_Self(newSize) {\n            this.queryInfo_Self.pagesize = newSize;\n            console.log('newSize-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n            console.log('newSize-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n            this.getTaskList_Self();\n        },\n        handleCurrentChange_Self(newPage) {\n            this.queryInfo_Self.page = newPage;\n            console.log('newPage-this.formInline_Self.searchType:', this.formInline_Self.searchType);\n            console.log('newPage-this.queryInfo_Self.page:', this.queryInfo_Self.page);\n\n            if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                this.getTaskList_Self();\n            } else {\n                this.SearchTask_Self();\n            }\n        },\n        handleSizeChange_All(newSize) {\n            this.queryInfo_All.pagesize = newSize;\n            console.log('newSize-this.formInline_All.searchType:', this.formInline_All.searchType);\n            console.log('newSize-this.queryInfo_All.page:', this.queryInfo_All.page);\n            this.getTaskList_All();\n        },\n        handleCurrentChange_All(newPage) {\n            this.queryInfo_All.page = newPage;\n            console.log('newPage-this.formInline_All.searchType:', this.formInline_All.searchType);\n            console.log('newPage-this.queryInfo_All.page:', this.queryInfo_All.page);\n            this.getTaskList_All();\n            // if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n            //     this.getTaskList_All();\n            // } else {\n            //     this.SearchTask_All();\n            // }\n            // this.queryInfo_All.page = newPage;\n            // this.getTaskList_All();\n        },\n        pageReflash_All() {\n            this.queryInfo_All.page = 1;\n        },\n        pageReflash_Self() {\n            this.queryInfo_Self.page = 1;\n        },\n        // >>>>>>>>>>>>>下载文件部分>>>>>>>>>>>>>>\n        originalfileDownloadTemp(data) {\n            var task_id = data['task_id'];\n            var flag = data['flag'];\n            this.originalfileDownload(task_id, flag);\n        },\n        async originalfileDownload(task_id, flag) {\n            const loading = this.full_loading_flag\n                ? ''\n                : this.$loading({\n                      lock: true,\n                      text: 'Loading',\n                      spinner: 'el-icon-loading',\n                      background: 'rgba(0, 0, 0, 0.7)'\n                  });\n            this.original_fileContent = '';\n            const data = await this.$http.get('/task/file/?task_id=' + task_id + '&file_type=0&format=json', {\n                responseType: 'blob',\n                headers: { 'Content-Type': 'application/json; application/octet-stream' }\n            });\n\n            console.log('data:', data);\n\n            var file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n            this.fileName = file_name1[file_name1.length - 1];\n            this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n            var dot = this.fileName.lastIndexOf('.');\n            this.original_is_Zip = false;\n            if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                this.original_is_Zip = true;\n            } else {\n                this.original_blob = data.data;\n            }\n            if (!this.full_loading_flag) {\n                loading.close();\n            }\n            if (!flag) {\n                fileDownload(data.data, this.fileName);\n            }\n            return data;\n        },\n        generatefileDownloadTemp(data) {\n            var task_id = data['task_id'];\n            var flag = data['flag'];\n            this.generatefileDownload(task_id, flag);\n        },\n        async generatefileDownload(task_id, flag) {\n            const loading = this.full_loading_flag\n                ? ''\n                : this.$loading({\n                      lock: true,\n                      text: 'Loading',\n                      spinner: 'el-icon-loading',\n                      background: 'rgba(0, 0, 0, 0.7)'\n                  });\n            const data = await this.$http.get('/task/file/?task_id=' + task_id + '&file_type=1&format=json', {\n                responseType: 'blob',\n                headers: { 'Content-Type': 'application/json; application/octet-stream' }\n            });\n            var file_name1 = data.headers['content-disposition'].replaceAll('/', '\\\\').split('\\\\');\n            this.fileName = file_name1[file_name1.length - 1];\n            this.fileName = this.fileName.slice(0, this.fileName.length - 1);\n\n            var dot = this.fileName.lastIndexOf('.');\n            this.generate_is_Zip = false;\n            if (dot !== -1 && this.fileName.substr(dot) === '.zip') {\n                this.generate_is_Zip = true;\n            } else {\n                this.generate_blob = data.data;\n            }\n            if (!this.full_loading_flag) {\n                loading.close();\n            }\n            if (!flag) {\n                fileDownload(data.data, this.fileName);\n            }\n            return data;\n        },\n        // >>>>>>>>>>>>操作按钮部分>>>>>>>>>>>>>\n        async removeTaskById(task_id) {\n            const confirmResult = await this.$confirm('此操作将永久删除该任务, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).catch(err => err);\n            if (confirmResult !== 'confirm') {\n                return this.$message.info('已取消删除');\n            }\n            const { data: data } = await this.$http.delete('/task/?task_id=' + task_id);\n            if (data.code !== 20000) {\n                return this.$message.error('删除任务失败！' + '错误原因：' + data.msg);\n            }\n            this.$message.success('删除任务成功！');\n            if (this.activeName === 'self') {\n                this.queryInfo_Self.page = 1;\n                if (this.formInline_Self.searchTaskInfo === '' && this.generate_func_self === '') {\n                    this.getTaskList_Self();\n                } else {\n                    this.SearchTask_Self();\n                }\n            } else {\n                this.queryInfo_All.page = 1;\n                if (this.formInline_All.searchTaskInfo === '' && this.generate_func_all === '') {\n                    this.getTaskList_All();\n                } else {\n                    this.SearchTask_All();\n                }\n            }\n        },\n        showeditForm() {\n            console.log('this.editForm_Self:', this.editForm_Self);\n        },\n        async showEditDialog(row) {\n            this.editForm_Self = JSON.parse(JSON.stringify(row));\n\n            this.editForm_Self.params = JSON.parse(row.params);\n\n            for (var i in this.editForm_Self.params) {\n                this.$set(this.editForm_Self, i, this.editForm_Self.params[i]);\n            }\n            this.editForm_Self.urgency_level = this.editForm_Self.urgency_level;\n            this.editForm_Self.aug_object_truck =\n                this.editForm_Self.aug_count_truck == '0' || !this.editForm_Self.aug_count_truck\n                    ? null\n                    : this.editForm_Self.aug_object_truck;\n            this.editForm_Self.aug_object_car =\n                this.editForm_Self.aug_count_car == '0' || !this.editForm_Self.aug_count_car ? null : this.editForm_Self.aug_object_car;\n            this.editForm_Self.aug_object_cyclist =\n                this.editForm_Self.aug_count_cyclist == '0' || !this.editForm_Self.aug_count_cyclist\n                    ? null\n                    : this.editForm_Self.aug_object_cyclist;\n\n            this.editForm_Self.aug_count_truck = parseInt(this.editForm_Self.aug_count_truck);\n            this.editForm_Self.aug_count_car = parseInt(this.editForm_Self.aug_count_car);\n            this.editForm_Self.aug_count_cyclist = parseInt(this.editForm_Self.aug_count_cyclist);\n            this.editForm_Self.angle = parseFloat(this.editForm_Self.angle);\n\n            console.log('this.editForm_Self:', this.editForm_Self);\n            this.editDialogSelfVisible = true;\n        },\n        editDialogClosed() {\n            this.editForm_Self = {\n                task_id: 0,\n                master: this.$store.getters.userId,\n                name: '',\n                params: '',\n                file: {},\n                augmentation_method_name: ''\n            };\n        },\n        editTaskInfo() {\n            this.editForm_Self.master = this.$store.state.userId;\n            if (this.editForm_Self.epsilon) {\n                this.editForm_Self.epsilon = this.editForm_Self.epsilon.replace('，', ',');\n            }\n            this.$refs.editFormRef.validate(async valid => {\n                if (!valid) return;\n\n                var adddata = new FormData();\n                adddata.append('task_id', this.editForm_Self.id);\n                adddata.append('name', this.editForm_Self.name);\n                adddata.append('master', this.editForm_Self.master);\n\n                adddata.append('urgency_level', this.editForm_Self.urgency_level);\n                var temp_params = {};\n                if (this.editForm_Self.augmentation_method_name === '场景物体添加蜕变-激光雷达') {\n                    temp_params = {\n                        aug_object_car: this.editForm_Self.aug_object_car ? this.editForm_Self.aug_object_car : '1',\n                        aug_object_truck: this.editForm_Self.aug_object_truck ? this.editForm_Self.aug_object_truck : '1',\n                        aug_object_cyclist: this.editForm_Self.aug_object_cyclist ? this.editForm_Self.aug_object_cyclist : '1',\n                        aug_count_car: this.editForm_Self.aug_count_car + '',\n                        aug_count_truck: this.editForm_Self.aug_count_truck + '',\n                        aug_count_cyclist: this.editForm_Self.aug_count_cyclist + ''\n                    };\n                } else if (this.editForm_Self.augmentation_method_name === '场景物体旋转蜕变-激光雷达') {\n                    temp_params = {\n                        angle: this.editForm_Self.angle + ''\n                    };\n                } else if (this.editForm_Self.augmentation_method_name === '极端场景蜕变-激光雷达') {\n                    temp_params = {\n                        aug_Truck: this.editForm_Self.aug_Truck,\n                        aug_Car: this.editForm_Self.aug_Car,\n                        aug_Cyclist: this.editForm_Self.aug_Cyclist\n                    };\n                }\n\n                temp_params = JSON.stringify(temp_params);\n\n                adddata.append('params', temp_params);\n                this.editForm_Self.file = document.getElementById('filetemp').files[0];\n                if (this.editForm_Self.file) {\n                    adddata.append('file', this.editForm_Self.file);\n                }\n                for (var [a, b] of adddata.entries()) {\n                }\n                const { data: data } = await this.$http({\n                    url: '/task/',\n                    data: adddata,\n                    method: 'put'\n                });\n                if (data.code !== 20000) {\n                    return this.$message.error('修改任务失败！' + '错误原因：' + data.msg);\n                }\n                this.$message.success('修改任务成功！');\n                this.editDialogSelfVisible = false;\n                this.$refs.editFormRef.resetFields();\n                this.editForm_Self.augmentation_type = '';\n                this.editForm_Self.augmentation_method = '';\n                this.editForm_Self.file = {};\n                this.getTaskList_Self();\n                this.getTaskList_All();\n            });\n        },\n        async getdata(reader, self) {\n            return (reader.onload = await function() {\n                self.fileContent = this.result;\n            });\n        },\n        // 标记任务异常\n        async taskException() {\n            this.$confirm('是否确定将该任务标记成异常状态？')\n                .then(async _ => {\n                    var adddata = new FormData();\n                    adddata.append('task_id', this.methodDetail.id);\n                    const { data: data } = await this.$http({\n                        url: '/task/exception/',\n                        data: adddata,\n                        method: 'post'\n                    });\n                    if (data.code !== 20000) {\n                        return this.$message.error('添加生成任务失败！' + '错误原因：' + data.msg);\n                    }\n                    this.$message.success('标记成异常成功！');\n                })\n                .catch(_ => {});\n        },\n        //任务详情对话框\n        async MethodDetail(id) {\n            // id = data\n            console.log('this.methodDetail:', this.methodDetail);\n            this.methodDialogSelfVisible = true;\n            const { data: data } = await this.$http.get('/task/' + '?task_id=' + id);\n            if (data.code !== 20000) {\n                return this.$message.error('获取本用户任务详情失败！' + '错误原因：' + data.msg);\n            }\n\n            this.methodDetail = data.data;\n        },\n        methodDialogClose() {\n            console.log('this.methodDetail:', this.methodDetail);\n            this.methodDetail = [];\n        },\n        // >>>>>>>>>>点云预览部分>>>>>>>>>>>>>>>\n        // point_cloud_preview-previewHandleChange-make_format_data-get_preview\n        async point_cloud_preview(task_id) {\n            this.full_loading_flag = true;\n            const loading = this.$loading({\n                lock: true,\n                text: 'Loading',\n                spinner: 'el-icon-loading',\n                background: 'rgba(0, 0, 0, 0.7)'\n            });\n            // console.log('loading:', loading);\n            // console.log('this.$loading.lock:', this.$loading.lock);\n            // this.previewDialogVisible = true;\n            var preview_options = [];\n            var original_res = await this.originalfileDownload(task_id, 1);\n\n            // 处理原始压缩文件\n            let original_files_zip = new window.File([original_res.data], this.fileName, { type: 'zip' });\n            let original_files = new JSZip();\n            var orignal_names = [];\n            this.original_files_zip = original_files_zip;\n            let me = this;\n            await original_files.loadAsync(this.original_files_zip).then(function(zip) {\n                console.log('original_files.files:', original_files.files);\n                var index = 0;\n                for (var i in original_files.files) {\n                    // console.log('file_i:', i);\n                    if (i.indexOf('velodyne_txt/0') != -1) {\n                        var temp_object = {};\n                        var temp_name = i.split('/');\n                        temp_name = temp_name[temp_name.length - 1];\n                        console.log('temp_name:', temp_name);\n                        orignal_names.push(i);\n                        temp_object['point'] = i;\n                        temp_object['value'] = index;\n                        temp_object['label'] = temp_name;\n                        temp_object['label_real'] = 'training/label_2/' + temp_name;\n                        temp_object['children'] = [];\n                        preview_options.push(temp_object);\n                        index = index + 1;\n                    }\n                }\n                console.log('preview_options_original:', preview_options);\n                me.original_files_zip = original_files_zip;\n            });\n\n            // 处理生成压缩文件\n            var generate_res = await this.generatefileDownload(task_id, 1);\n            let generate_files_zip = new window.File([generate_res.data], this.fileName, { type: 'zip' });\n            var generate_files = new JSZip();\n            var generate_names = [];\n            var original_is_Zip = this.original_is_Zip;\n            await generate_files.loadAsync(generate_files_zip).then(function(generate_files_zip) {\n                console.log('generate_files.files:', generate_files.files);\n\n                for (var i in preview_options) {\n                    // console.log('index:', index);\n                    var temp_object = {};\n                    var label_real = '';\n                    // var temp_name = i.split('/');\n\n                    // temp_object['value'] = index;\n                    // index = index + 1;\n                    var label_dir = preview_options[i]['label'].split('.')[0];\n                    // console.log('i: preview_options[i][\"label\"].split(\".\")[0]:', i, preview_options[i]['label'].split('.')[0]);\n\n                    var index = 0;\n                    for (var j in generate_files.files) {\n                        if (j.indexOf(label_dir + '/points') != -1) {\n                            console.log('j:', j);\n                            var temp_object = {};\n                            var label_real = '';\n                            var temp_name = j.split('/');\n                            temp_object['value'] = index;\n                            index = index + 1;\n\n                            temp_object['label'] = temp_name[1];\n                            temp_object['name'] = j;\n                            // j.indexOf(i.substring(i.length - 6, i.length)) != -1\n                            temp_object['label_real'] = label_dir + '/label_real' + j.substring(j.length - 6, j.length);\n                            preview_options[i].children.push(temp_object);\n                        }\n                    }\n                }\n                console.log('preview_options:', preview_options);\n            });\n\n            this.generate_files_zip = generate_files_zip;\n\n            loading.close();\n            this.full_loading_flag = false;\n            this.previewDialogVisible = true;\n            this.$message.success('已获取文件列表，请选择需预览的文件！');\n            this.preview_options = preview_options;\n\n            this.loading = false;\n        },\n        make_format_data(content, flag) {\n            var format_data = null;\n            var label_temp = [];\n            let arr = null;\n            format_data = content.replaceAll('\\r\\n', '\\n').split('\\n');\n\n            format_data.forEach(item => {\n                arr = item.split(' ');\n                for (var k in arr) {\n                    if (k < 3 && parseFloat(arr[k]) > this.maxAxisValue) {\n                        this.maxAxisValue = parseFloat(arr[k]);\n                    }\n                    if (k < 3 && parseFloat(arr[k]) < this.minAxisValue) {\n                        this.minAxisValue = parseFloat(arr[k]);\n                    }\n                }\n                if ((flag === 2 || flag === 3) && arr[0] != 'DontCare' && arr[0] != '') {\n                    var label_temp_item = [];\n                    label_temp_item.push(parseFloat(arr[13]));\n                    label_temp_item.push(-1 * parseFloat(arr[11]));\n                    label_temp_item.push(-1 * parseFloat(arr[12]));\n                    label_temp.push(label_temp_item);\n                    console.log('label_temp:', label_temp);\n                }\n                if (flag === 0) {\n                    this.originalPointCloudData.push(arr);\n                } else if (flag === 1) {\n                    this.generatePointCloudData.push(arr);\n                }\n            });\n            if (flag === 2) {\n                this.originalLabelData = label_temp;\n            } else if (flag === 3) {\n                this.generateLabelData = label_temp;\n            }\n\n            if (flag == 0) {\n                console.log('this.originalPointCloudData:', this.originalPointCloudData);\n            } else if (flag == 1) {\n                console.log('this.generatePointCloudData:', this.generatePointCloudData);\n            } else if (flag == 2) {\n                console.log('this.originalLabelData:', this.originalLabelData);\n            } else if (flag == 3) {\n                console.log('this.generateLabelData:', this.generateLabelData);\n            }\n        },\n        get_preview() {\n            var myChart = echarts.init(document.getElementById('preview'));\n            this.option = {\n                title: {\n                    text: '点云生成预览'\n                },\n                tooltip: {\n                    show: false,\n                    showCcontant: true,\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        label: {\n                            backgroundColor: '#6a7985'\n                        }\n                    }\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                legend: {\n                    type: 'plain',\n                    data: ['original_data', 'generate_data', 'original_label', 'generate_label'],\n                    top: '10%'\n                },\n                grid3D: {\n                    containLabel: true,\n                    viewControl: {\n                        projection: 'orthographic'\n                    }\n                },\n                xAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                yAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                zAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                series: [\n                    {\n                        name: 'original_data',\n                        type: 'scatter3D',\n                        data: this.originalPointCloudData,\n                        symbolSize: 2,\n                        encode: {\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    },\n                    {\n                        name: 'generate_data',\n                        type: 'scatter3D',\n                        data: this.generatePointCloudData,\n                        symbolSize: 2,\n                        encode: {\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    },\n                    {\n                        name: 'original_label',\n                        type: 'scatter3D',\n                        data: this.originalLabelData,\n                        symbolSize: 10,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    },\n                    {\n                        name: 'generate_label',\n                        type: 'scatter3D',\n                        data: this.generateLabelData,\n                        symbolSize: 5,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    }\n                ]\n            };\n            myChart.setOption(this.option);\n            var myChart_original = echarts.init(document.getElementById('preview_original'));\n            this.option_original = {\n                title: {\n                    text: '原始图'\n                },\n                tooltip: {\n                    show: false,\n                    showCcontant: true,\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        label: {\n                            backgroundColor: '#6a7985'\n                        }\n                    }\n                },\n                legend: {\n                    // 就是显示哪些东西\n                    type: 'plain',\n                    data: ['original_data', 'original_label'],\n                    top: '10%'\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                grid3D: {\n                    containLabel: true,\n                    viewControl: {\n                        projection: 'orthographic'\n                    }\n                },\n                xAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                yAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                zAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                series: [\n                    {\n                        name: 'original_data',\n                        type: 'scatter3D',\n                        data: this.originalPointCloudData,\n                        symbolSize: 2,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    },\n                    {\n                        name: 'original_label',\n                        type: 'scatter3D',\n                        data: this.originalLabelData,\n                        symbolSize: 10,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    }\n                ]\n            };\n            myChart_original.setOption(this.option_original);\n            var myChart_generate = echarts.init(document.getElementById('preview_generate'));\n            this.option_generate = {\n                title: {\n                    text: '生成图'\n                },\n                tooltip: {\n                    show: true,\n                    showCcontant: true,\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        label: {\n                            backgroundColor: '#6a7985'\n                        }\n                    }\n                },\n                legend: {\n                    // 就是显示哪些东西\n                    type: 'plain',\n                    data: ['generate_data', 'generate_label'],\n                    top: '10%'\n                },\n                toolbox: {\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                grid3D: {\n                    containLabel: true,\n                    viewControl: {\n                        projection: 'orthographic'\n                    }\n                },\n                xAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                yAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                zAxis3D: {\n                    type: 'value',\n                    max: this.maxAxisValue.toFixed(3),\n                    min: this.minAxisValue.toFixed(3)\n                },\n                series: [\n                    {\n                        name: 'generate_data',\n                        type: 'scatter3D',\n                        data: this.generatePointCloudData,\n                        symbolSize: 2,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    },\n                    {\n                        name: 'generate_label',\n                        type: 'scatter3D',\n                        data: this.generateLabelData,\n                        symbolSize: 10,\n                        encode: {\n                            // 维度的名字默认就是表头的属性名\n                            tooltip: [0, 1, 2, 3, 4]\n                        }\n                    }\n                ]\n            };\n            myChart_generate.setOption(this.option_generate);\n        },\n        async previewHandleChange() {\n            this.full_loading_flag = true;\n            const loading = this.$loading({\n                lock: true,\n                text: 'Loading',\n                spinner: 'el-icon-loading',\n                background: 'rgba(0, 0, 0, 0.7)'\n            });\n\n            this.originalPointCloudData = [];\n            this.generatePointCloudData = [];\n            this.originalLabelData = [];\n            this.generateLabelData = [];\n            console.log('this.preview_value[0]:', this.preview_value[0]);\n            console.log('this.preview_value[1]:', this.preview_value[1]);\n            // this.preview_value[0]: velodyne_txt/000009.txt\n            // this.preview_value[1]: 2\n            var original_points_name = this.preview_options[this.preview_value[0]]['point'];\n            var generate_points_name = this.preview_options[this.preview_value[0]]['children'][this.preview_value[1]]['name'];\n            console.log('original_points_name:', original_points_name);\n            console.log('generate_points_name:', generate_points_name);\n            // console.log('this.preview_options:', this.preview_options);\n\n            var original_label_name = this.preview_options[this.preview_value[0]]['label_real'];\n            var generate_label_name = this.preview_options[this.preview_value[0]]['children'][this.preview_value[1]]['label_real'];\n            console.log('original_label_name:', original_label_name);\n            console.log('generate_label_name:', generate_label_name);\n\n            var original_pointscloud = null;\n            var generate_pointscloud = null;\n            var original_label = null;\n            var generate_label = null;\n\n            var original_files = new JSZip();\n            await original_files.loadAsync(this.original_files_zip).then(async function(file) {\n                await original_files\n                    .file(original_points_name)\n                    .async('string')\n                    .then(function(content) {\n                        original_pointscloud = content;\n                    });\n                await original_files\n                    .file(original_label_name)\n                    .async('string')\n                    .then(function(content) {\n                        original_label = content;\n                    });\n            });\n\n            console.log('original_pointscloud:', original_pointscloud);\n\n            this.make_format_data(original_pointscloud, 0);\n            this.make_format_data(original_label, 2);\n            console.log('this.originalPointCloudData:', this.originalPointCloudData);\n            console.log('this.originalLabelData:', this.originalLabelData);\n\n            var generate_files = new JSZip();\n            // console.log('this.generate_files_zip:', this.generate_files_zip);\n            // console.log('generate_points_name:', generate_points_name);\n            // console.log('generate_label_name:', generate_label_name);\n            await generate_files.loadAsync(this.generate_files_zip).then(async function(file) {\n                await generate_files\n                    .file(generate_points_name)\n                    .async('string')\n                    .then(function(content) {\n                        generate_pointscloud = content;\n                    });\n                await generate_files\n                    .file(generate_label_name)\n                    .async('string')\n                    .then(function(content) {\n                        generate_label = content;\n                    });\n            });\n            // console.log('generate_pointscloud:', generate_pointscloud);\n            // console.log('generate_label:', generate_label);\n\n            this.make_format_data(generate_pointscloud, 1);\n            this.make_format_data(generate_label, 3);\n            console.log('this.generatePointCloudData:', this.generatePointCloudData);\n            console.log('this.generateLabelData:', this.generateLabelData);\n\n            // this.generatePointCloudData = [];\n            this.get_preview();\n            loading.close();\n            this.full_loading_flag = false;\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n                .then(_ => {\n                    this.previewDialogVisible = false;\n                    this.fileName = '';\n                    this.preview_value = [];\n                    this.preview_options = [];\n                    this.previewDialogVisible = false;\n                    this.loading = true;\n                    this.original_files_zip = null;\n                    this.generate_files_zip = null;\n                    this.originalPointCloudData = [];\n                    this.generatePointCloudData = [];\n                    this.maxAxisValue = -10000;\n                    this.minAxisValue = 10000;\n                })\n                .catch(_ => {});\n        },\n        changeAxios_xz() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][0], this.originalPointCloudData[i][2]] = [\n                    this.originalPointCloudData[i][2],\n                    this.originalPointCloudData[i][0]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][0], this.generatePointCloudData[i][2]] = [\n                    this.generatePointCloudData[i][2],\n                    this.generatePointCloudData[i][0]\n                ];\n            }\n            this.get_preview();\n        },\n        changeAxios_yz() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][1], this.originalPointCloudData[i][2]] = [\n                    this.originalPointCloudData[i][2],\n                    this.originalPointCloudData[i][1]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][1], this.generatePointCloudData[i][2]] = [\n                    this.generatePointCloudData[i][2],\n                    this.generatePointCloudData[i][1]\n                ];\n            }\n            this.get_preview();\n        },\n        changeAxios_xy() {\n            for (var i in this.originalPointCloudData) {\n                [this.originalPointCloudData[i][0], this.originalPointCloudData[i][1]] = [\n                    this.originalPointCloudData[i][1],\n                    this.originalPointCloudData[i][0]\n                ];\n            }\n\n            for (var i in this.generatePointCloudData) {\n                [this.generatePointCloudData[i][0], this.generatePointCloudData[i][1]] = [\n                    this.generatePointCloudData[i][1],\n                    this.generatePointCloudData[i][0]\n                ];\n            }\n            this.get_preview();\n        },\n        // >>>>>>>>>>表格空白部分填充>>>>>>>>>>>>>>>>\n        isBlank_num(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '-- --';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            return value;\n        },\n        isBlank_start(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '未开始';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n            return value;\n        },\n        isBlank_end(scope) {\n            let key = scope.column.property,\n                item = scope.row[key],\n                value = '未结束';\n            if (item === 0 || item === false || item) {\n                value = item;\n            }\n            if (typeof value == 'string') value = value.split('+')[0].split('.')[0];\n            return value;\n        }\n    }\n};\n</script>\n<style scoped>\n.juzhog {\n    width: 600px;\n    height: 530px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -300px;\n    margin-top: -265px;\n    background-color: #fff;\n}\n.search {\n    margin-bottom: 10px !important;\n}\n.right {\n    margin-right: 5px !important;\n}\n.right10 {\n    margin-right: 10px !important;\n}\n.user-info-list {\n    padding-left: 10px;\n    background-color: rgba(255, 255, 255, 0.4);\n    font-size: 14px;\n    color: #000;\n    line-height: 25px;\n}\n.el-input__inner {\n    width: 600px !important;\n}\n.view1 {\n    width: 600px;\n    height: 530px;\n    margin: 0 10px 0 0;\n    background-color: #fff;\n    float: left;\n}\n.el-dialog {\n    display: flex;\n    flex-direction: column;\n    margin: 0 !important;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    max-height: calc(100% - 30px);\n    max-width: calc(100% - 30px);\n}\n.el-dialog .el-dialog__body {\n    flex: 1;\n    overflow: auto;\n}\n/* .inlineBlock {\n    display: inline-block;\n} */\n</style>\n"],"sourceRoot":"src/components/page"}]}