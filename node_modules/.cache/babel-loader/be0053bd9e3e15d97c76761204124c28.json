{"remainingRequest":"E:\\LidarPlatformFrontend-main\\node_modules\\babel-loader\\lib\\index.js!E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\LidarPlatformFrontend-main\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\LidarPlatformFrontend-main\\src\\App.vue","mtime":1628741922000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\LidarPlatformFrontend-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\nexport default {\n  name: 'App',\n  provide: function provide() {\n    return {\n      reload: this.reload\n    };\n  },\n  data: function data() {\n    return {\n      isRouterAlive: true\n    };\n  },\n  methods: {\n    reload: function reload() {\n      this.isRouterAlive = false;\n      this.$nextTick(function () {\n        this.isRouterAlive = true;\n      });\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;AAMA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,OAFA,qBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,aAAA,EAAA;AADA,KAAA;AAGA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,aAAA,aAAA,GAAA,IAAA;AACA,OAFA;AAGA;AANA;AAZA,CAAA","sourcesContent":["<template>\n    <div id=\"app\" style=\"width: 100vw; height: 100vh\">\n        <router-view v-if=\"isRouterAlive\"></router-view>\n    </div>\n</template>\n<script>\nexport default {\n    name: 'App',\n    provide() {\n        return {\n            reload: this.reload\n        };\n    },\n    data() {\n        return {\n            isRouterAlive: true\n        };\n    },\n    methods: {\n        reload() {\n            this.isRouterAlive = false;\n            this.$nextTick(function() {\n                this.isRouterAlive = true;\n            });\n        }\n    }\n};\n</script>\n<style>\n@import './assets/css/main.css';\n@import './assets/css/color-dark.css';\n</style>\n"],"sourceRoot":"src"}]}